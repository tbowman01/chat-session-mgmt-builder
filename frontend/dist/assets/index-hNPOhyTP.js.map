{"version":3,"mappings":";;;;;;;;;GASa,IAAIA,GAAEC,EAAiBC,GAAE,OAAO,IAAI,eAAe,EAAEC,GAAE,OAAO,IAAI,gBAAgB,EAAEC,GAAE,OAAO,UAAU,eAAeC,GAAEL,GAAE,mDAAmD,kBAAkBM,GAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,GAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,GAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,GAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,aAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,GAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,GAAE,OAAO,CAAC,YAAkBF,GAAEY,EAAA,IAAYR,GAAEQ,EAAA,KAAaR,GCPxWS,GAAA,QAAiBf,yBCDfG,GAAIH,GAENgB,GAAA,WAAqBb,GAAE,WACvBa,GAAA,YAAsBb,GAAE,YCFnB,MAAMc,EAA8C,CACzD,aAAc,CACZ,KAAM,aACN,YAAa,cACb,KAAM,KACN,YAAa,wEACb,aAAc,CAAC,cAAe,4BAA6B,WAAW,EACtE,cAAe,YACf,WAAY,eACZ,kBAAmB,CAAC,yBAA0B,oBAAqB,kBAAmB,WAAY,gBAAgB,EAClH,kBAAmB,CAAC,qBAAsB,iBAAkB,gBAAgB,GAE9E,mBAAoB,CAClB,KAAM,mBACN,YAAa,eACb,KAAM,KACN,YAAa,+DACb,aAAc,CAAC,cAAe,oCAAoC,EAClE,cAAe,YACf,WAAY,QACZ,kBAAmB,CAAC,mBAAoB,kBAAmB,iBAAkB,gBAAgB,EAC7F,kBAAmB,CAAC,sBAAuB,oBAAoB,GAEjE,eAAgB,CACd,KAAM,eACN,YAAa,eACb,KAAM,KACN,YAAa,0CACb,aAAc,CAAC,cAAe,kBAAmB,kBAAkB,EACnE,cAAe,YACf,WAAY,WACZ,kBAAmB,CAAC,mBAAoB,oBAAqB,gBAAgB,EAC7E,kBAAmB,CAAC,sBAAuB,qBAAsB,iBAAkB,aAAa,GAElG,aAAc,CACZ,KAAM,aACN,YAAa,YACb,KAAM,KACN,YAAa,oDACb,aAAc,CAAC,cAAe,0BAA2B,wBAAwB,EACjF,cAAe,YACf,WAAY,WACZ,kBAAmB,CAAC,yBAA0B,oBAAqB,kBAAmB,WAAY,gBAAgB,EAClH,kBAAmB,CAAC,sBAAuB,iBAAkB,aAAa,GAE5E,cAAe,CACb,KAAM,cACN,YAAa,cACb,KAAM,KACN,YAAa,wCACb,aAAc,CAAC,cAAe,4BAA6B,UAAU,EACrE,cAAe,YACf,WAAY,eACZ,kBAAmB,CAAC,gBAAgB,EACpC,kBAAmB,CAAC,gBAAgB,GAEtC,WAAY,CACV,KAAM,WACN,YAAa,kBACb,KAAM,KACN,YAAa,yDACb,aAAc,CAAC,cAAe,YAAa,YAAY,EACvD,cAAe,YACf,WAAY,SACZ,kBAAmB,CAAC,yBAA0B,oBAAqB,iBAAkB,mBAAoB,iBAAkB,gBAAgB,EAC3I,kBAAmB,CAAC,iBAAkB,sBAAuB,sBAAuB,aAAa,GAEnG,gBAAiB,CACf,KAAM,gBACN,YAAa,WACb,KAAM,KACN,YAAa,qDACb,aAAc,CAAC,cAAe,yBAAyB,EACvD,cAAe,YACf,WAAY,QACZ,kBAAmB,CAAC,kBAAmB,iBAAkB,mBAAmB,EAC5E,kBAAmB,CAAC,qBAAsB,gBAAgB,EAE9D,EAGaC,GAAgD,OAAO,QAAQD,CAAS,EAAE,IAAI,CAAC,CAACE,EAAKC,CAAM,KAAO,CAC7G,MAAOD,EACP,MAAOC,EAAO,YACd,YAAaA,EAAO,YACpB,KAAMA,EAAO,IACf,EAAE,EAEWC,GAAgD,CAC3D,CACE,MAAO,sBACP,MAAO,sBACP,YAAa,4CACb,KAAM,KACN,YAAa,IAEf,CACE,MAAO,qBACP,MAAO,qBACP,YAAa,6CACb,KAAM,KACN,YAAa,IAEf,CACE,MAAO,sBACP,MAAO,sBACP,YAAa,+CACb,KAAM,MAER,CACE,MAAO,iBACP,MAAO,iBACP,YAAa,8CACb,KAAM,IACN,YAAa,IAEf,CACE,MAAO,iBACP,MAAO,iBACP,YAAa,oCACb,KAAM,MAER,CACE,MAAO,iBACP,MAAO,iBACP,YAAa,sCACb,KAAM,MACN,YAAa,IAEf,CACE,MAAO,cACP,MAAO,cACP,YAAa,mCACb,KAAM,KAEV,EAEaC,EAA8C,CACzD,CACE,MAAO,yBACP,MAAO,yBACP,YAAa,wCACb,KAAM,MAER,CACE,MAAO,oBACP,MAAO,oBACP,YAAa,4CACb,KAAM,MAER,CACE,MAAO,iBACP,MAAO,yBACP,YAAa,iCACb,KAAM,MAER,CACE,MAAO,mBACP,MAAO,mBACP,YAAa,0CACb,KAAM,MAER,CACE,MAAO,kBACP,MAAO,kBACP,YAAa,2CACb,KAAM,MAER,CACE,MAAO,WACP,MAAO,uBACP,YAAa,8CACb,KAAM,MAER,CACE,MAAO,iBACP,MAAO,iBACP,YAAa,iDACb,KAAM,MAER,CACE,MAAO,iBACP,MAAO,mBACP,YAAa,wCACb,KAAM,KAEV,EAEaC,GAAiD,CAC5D,CACE,MAAO,OACP,MAAO,iBACP,YAAa,qCACb,KAAM,MAER,CACE,MAAO,QACP,MAAO,mBACP,YAAa,yBACb,KAAM,MAER,CACE,MAAO,SACP,MAAO,qBACP,YAAa,gCACb,KAAM,eAER,CACE,MAAO,QACP,MAAO,qBACP,YAAa,iCACb,KAAM,MAER,CACE,MAAO,aACP,MAAO,mBACP,YAAa,gCACb,KAAM,MAEV,EAEaC,GAAoD,CAC/D,CACE,MAAO,QACP,MAAO,QACP,YAAa,uCACb,KAAM,MAER,CACE,MAAO,eACP,MAAO,eACP,YAAa,+CACb,KAAM,MAER,CACE,MAAO,WACP,MAAO,WACP,YAAa,yCACb,KAAM,MAER,CACE,MAAO,SACP,MAAO,SACP,YAAa,2CACb,KAAM,KAEV,EAGaC,EAAmB,CAC9B,WAAY,CACV,IAAK,EACL,IAAK,GAMP,aAAc,CACZ,WAAY,EACZ,WAAY,EAEd,EACA,YAAa,CACX,WAAY,GACZ,WAAY,IAEhB,EAGaC,EAAQ,CACnB,CAAE,GAAI,EAAG,MAAO,WAAY,YAAa,6BACzC,CAAE,GAAI,EAAG,MAAO,aAAc,YAAa,yBAC3C,CAAE,GAAI,EAAG,MAAO,WAAY,YAAa,yBACzC,CAAE,GAAI,EAAG,MAAO,gBAAiB,YAAa,yBAC9C,CAAE,GAAI,EAAG,MAAO,SAAU,YAAa,uBACvC,CAAE,GAAI,EAAG,MAAO,WAAY,YAAa,qBACzC,CAAE,GAAI,EAAG,MAAO,QAAS,YAAa,yBACtC,CAAE,GAAI,EAAG,MAAO,WAAY,YAAa,kBAC3C,EAEaC,GAAcD,EAAM,OAGpBE,EAAe,CAC1B,cAAe,mBACf,aAAc,yBACd,UAAW,qBACb,EC9RMC,GAA2C,CAC/C,SAAU,KACV,WAAY,GACZ,SAAU,GACV,SAAU,KACV,WAAY,KACZ,YAAa,GACb,YAAa,EACf,EAEMC,GAA4B,CAChC,GAAGD,GACH,YAAa,EACb,eAAgB,GAChB,UAAW,GACX,MAAO,KACP,kBAAmB,IACrB,EAoBA,SAASE,GAAcC,EAAoBC,EAAmC,CAC5E,OAAQA,EAAO,MACb,IAAK,eACH,MAAO,CAAE,GAAGD,EAAO,SAAUC,EAAO,SAEtC,IAAK,iBACH,MAAO,CAAE,GAAGD,EAAO,WAAYC,EAAO,SAExC,IAAK,eACH,MAAO,CAAE,GAAGD,EAAO,SAAUC,EAAO,SAEtC,IAAK,gBACH,MAAO,CAAE,GAAGD,EAAO,SAAUC,EAAO,SAEtC,IAAK,iBACH,MAAO,CAAE,GAAGD,EAAO,WAAYC,EAAO,SAExC,IAAK,mBACH,MAAO,CAAE,GAAGD,EAAO,YAAaC,EAAO,SAEzC,IAAK,kBACH,MAAO,CAAE,GAAGD,EAAO,YAAaC,EAAO,SAEzC,IAAK,mBACH,MAAO,CAAE,GAAGD,EAAO,YAAaC,EAAO,SAEzC,IAAK,qBACH,OAAKD,EAAM,eAAe,SAASC,EAAO,OAAO,EAM1CD,EALE,CACL,GAAGA,EACH,eAAgB,CAAC,GAAGA,EAAM,eAAgBC,EAAO,OAAO,EAAE,MAAK,EAKrE,IAAK,cACH,MAAO,CAAE,GAAGD,EAAO,UAAWC,EAAO,SAEvC,IAAK,YACH,MAAO,CAAE,GAAGD,EAAO,MAAOC,EAAO,SAEnC,IAAK,yBACH,MAAO,CAAE,GAAGD,EAAO,kBAAmBC,EAAO,SAE/C,IAAK,eACH,OAAOH,GAET,IAAK,oBACH,MAAO,CAAE,GAAGE,EAAO,GAAGC,EAAO,SAE/B,QACE,OAAOD,CAAA,CAEb,CA8BA,MAAME,GAAgBC,gBAA6C,MAAS,EAOrE,SAASC,GAAe,CAAE,SAAAC,GAAiC,CAChE,KAAM,CAACL,EAAOM,CAAQ,EAAIC,aAAWR,GAAeD,EAAY,EAG1DU,EAAU,CACd,YAAcC,GACZH,EAAS,CAAE,KAAM,eAAgB,QAASG,EAAU,EAEtD,cAAgBC,GACdJ,EAAS,CAAE,KAAM,iBAAkB,QAASI,EAAY,EAE1D,YAAcC,GACZL,EAAS,CAAE,KAAM,eAAgB,QAASK,EAAU,EAEtD,YAAcC,GACZN,EAAS,CAAE,KAAM,gBAAiB,QAASM,EAAU,EAEvD,cAAgBC,GACdP,EAAS,CAAE,KAAM,iBAAkB,QAASO,EAAY,EAE1D,eAAiBC,GACfR,EAAS,CAAE,KAAM,mBAAoB,QAASQ,EAAM,EAEtD,eAAiBC,GACfT,EAAS,CAAE,KAAM,kBAAmB,QAASS,EAAa,EAE5D,eAAiBC,GACfV,EAAS,CAAE,KAAM,mBAAoB,QAASU,EAAM,EAEtD,iBAAmBA,GACjBV,EAAS,CAAE,KAAM,qBAAsB,QAASU,EAAM,EAExD,WAAaC,GACXX,EAAS,CAAE,KAAM,cAAe,QAASW,EAAS,EAEpD,SAAWC,GACTZ,EAAS,CAAE,KAAM,YAAa,QAASY,EAAO,EAEhD,qBAAuBC,GACrBb,EAAS,CAAE,KAAM,yBAA0B,QAASa,EAAU,EAEhE,YAAa,IAAM,CACjBb,EAAS,CAAE,KAAM,eAAgB,EACjC,aAAa,WAAWV,EAAa,YAAY,CACnD,EAEA,SAAU,IAAM,CACd,GAAII,EAAM,YAAcL,GAAa,CACnC,MAAMyB,EAAWpB,EAAM,YAAc,EACrCM,EAAS,CAAE,KAAM,qBAAsB,QAASN,EAAM,YAAa,EACnEM,EAAS,CAAE,KAAM,mBAAoB,QAASc,EAAU,CAC1D,CACF,EAEA,aAAc,IAAM,CACdpB,EAAM,YAAc,GACtBM,EAAS,CAAE,KAAM,mBAAoB,QAASN,EAAM,YAAc,EAAG,CAEzE,EAEA,SAAWgB,GAAiB,CACtBA,GAAQ,GAAKA,GAAQrB,IACvBW,EAAS,CAAE,KAAM,mBAAoB,QAASU,EAAM,CAExD,EAEA,YAAcA,GAERA,IAAS,EAAU,GAGhBhB,EAAM,eAAe,SAASgB,EAAO,CAAC,GAAKA,GAAQhB,EAAM,YAGlE,oBAAqB,IAA8C,CACjE,MAAMqB,EAAmB,GAEzB,OAAQrB,EAAM,aACZ,IAAK,GACEA,EAAM,UACTqB,EAAO,KAAK,0BAA0B,EAExC,MAEF,IAAK,GACCrB,EAAM,WAAW,OAAS,GAC5BqB,EAAO,KAAK,qCAAqC,EAE/CrB,EAAM,WAAW,OAAS,GAC5BqB,EAAO,KAAK,yCAAyC,EAEvD,MAEF,IAAK,GACH,MAEF,IAAK,GACErB,EAAM,UACTqB,EAAO,KAAK,yBAAyB,EAElCrB,EAAM,YACTqB,EAAO,KAAK,gCAAgC,EAEzCrB,EAAM,YAAY,QACrBqB,EAAO,KAAK,6BAA6B,EAEvCrB,EAAM,YAAY,OAAS,GAC7BqB,EAAO,KAAK,4CAA4C,EAErDrB,EAAM,YAAY,QACrBqB,EAAO,KAAK,oCAAoC,EAE9CrB,EAAM,YAAY,OAAS,IAC7BqB,EAAO,KAAK,oDAAoD,EAElE,KAMA,CAGJ,MAAO,CACL,QAASA,EAAO,SAAW,EAC3B,OAAAA,CAAA,CAEJ,EAEA,cAAe,IAAM,CACnB,GAAI,CACF,MAAMC,EAAa,CACjB,GAAGtB,EACH,UAAW,IAAI,OAAO,aAAY,EAEpC,aAAa,QAAQJ,EAAa,aAAc,KAAK,UAAU0B,CAAU,CAAC,CAC5E,OAASJ,EAAO,CACd,QAAQ,KAAK,+CAAgDA,CAAK,CACpE,CACF,EAEA,gBAAiB,IAAM,CACrB,GAAI,CACF,MAAMK,EAAS,aAAa,QAAQ3B,EAAa,YAAY,EAC7D,GAAI2B,EAAQ,CACV,MAAMC,EAAa,KAAK,MAAMD,CAAM,EAE9B,CAAE,UAAAE,EAAW,GAAGC,CAAA,EAAcF,EACpClB,EAAS,CAAE,KAAM,oBAAqB,QAASoB,EAAW,CAC5D,CACF,OAASR,EAAO,CACd,QAAQ,KAAK,iDAAkDA,CAAK,CACtE,CACF,GAIFS,mBAAU,IAAM,CACdnB,EAAQ,eACV,EAAG,CAACR,CAAK,CAAC,EAGV2B,YAAU,IAAM,CACdnB,EAAQ,iBACV,EAAG,EAAE,EAGHoB,MAAC1B,GAAc,SAAd,CAAuB,MAAO,CAAE,MAAAF,EAAO,QAAAQ,GACrC,SAAAH,EACH,CAEJ,CAGO,SAASwB,GAAY,CAC1B,MAAMC,EAAUC,aAAW7B,EAAa,EACxC,GAAI4B,IAAY,OACd,MAAM,IAAI,MAAM,gDAAgD,EAElE,OAAOA,CACT,CCvSA,MAAME,GAAc7B,gBAA2C,MAAS,EAM3D8B,GAA4C,CAAC,CAAE,SAAA5B,KAAe,CACzE,KAAM,CAAC6B,EAAMC,CAAO,EAAIC,WAAsB,IAAI,EAC5C,CAACC,EAAWC,CAAY,EAAIF,WAAS,EAAI,EAE/CT,YAAU,IAAM,CAEdY,EAAA,EAGAC,EAAA,CACF,EAAG,EAAE,EAEL,MAAMD,EAAkB,SAAY,CAClC,GAAI,CACF,MAAME,EAAQ,aAAa,QAAQ,qBAAqB,EACxD,GAAI,CAACA,EAAO,CACVH,EAAa,EAAK,EAClB,MACF,CAGA,MAAMI,EAAW,MAAM,MAAM,8BAA+B,CAC1D,QAAS,CACP,cAAe,UAAUD,CAAK,GAC9B,OAAQ,iCACV,CACD,EAED,GAAIC,EAAS,GAAI,CACf,MAAMC,EAAW,MAAMD,EAAS,OAChCP,EAAQ,CACN,GAAIQ,EAAS,GAAG,WAChB,MAAOA,EAAS,MAChB,KAAMA,EAAS,MAAQA,EAAS,MAChC,WAAYA,EAAS,WACrB,MAAOA,EAAS,MACjB,CACH,MAEE,aAAa,WAAW,qBAAqB,CAEjD,OAASzB,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,EACnD,aAAa,WAAW,qBAAqB,CAC/C,SACEoB,EAAa,EAAK,CACpB,CACF,EAEME,EAAsB,IAAM,CAChC,MAAMI,EAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM,EACtDC,EAAOD,EAAU,IAAI,MAAM,EAC3B5C,EAAQ4C,EAAU,IAAI,OAAO,EAE/BC,GAAQ7C,IAEV,OAAO,QAAQ,aAAa,GAAI,SAAS,MAAO,OAAO,SAAS,QAAQ,EAGxE8C,EAAqBD,EAAM7C,CAAK,EAEpC,EAEM8C,EAAuB,MAAOD,EAAc7C,IAAkB,CAClE,GAAI,CACFsC,EAAa,EAAI,EAGjB,MAAMS,EAAc,aAAa,QAAQ,oBAAoB,EAC7D,GAAI/C,IAAU+C,EACZ,MAAM,IAAI,MAAM,yBAAyB,EAkB3C,MAAMC,EAAO,MAbI,MAAM,MAAM,8CAA+C,CAC1E,OAAQ,OACR,QAAS,CACP,OAAQ,mBACR,eAAgB,oBAElB,KAAM,KAAK,UAAU,CACnB,UAAW,OACX,cAAe,OACf,KAAAH,CAAA,CACD,EACF,GAE2B,OAE5B,GAAIG,EAAK,aACP,aAAa,QAAQ,sBAAuBA,EAAK,YAAY,EAC7D,aAAa,WAAW,oBAAoB,EAC5C,MAAMT,EAAA,MAEN,OAAM,IAAI,MAAM,mCAAmC,CAEvD,OAASrB,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,EAC5C,aAAa,WAAW,oBAAoB,CAC9C,SACEoB,EAAa,EAAK,CACpB,CACF,EAyBMW,EAAyB,CAC7B,KAAAf,EACA,UAAAG,EACA,MA1BY,IAAM,CAElB,MAAMrC,EAAQ,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,EAAE,EAAI,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,EAAE,EACtG,aAAa,QAAQ,qBAAsBA,CAAK,EAEhD,MAAMkD,EAAW,OACXC,EAA0D,OAAO,SAAS,OAAS,iBAEnFC,EAAU,IAAI,IAAI,0CAA0C,EAClEA,EAAQ,aAAa,IAAI,YAAaF,CAAQ,EAC9CE,EAAQ,aAAa,IAAI,eAAgBD,CAAW,EACpDC,EAAQ,aAAa,IAAI,QAAS,sBAAsB,EACxDA,EAAQ,aAAa,IAAI,QAASpD,CAAK,EAEvC,OAAO,SAAS,KAAOoD,EAAQ,UACjC,EAYE,OAVa,IAAM,CACnB,aAAa,WAAW,qBAAqB,EAC7C,aAAa,WAAW,oBAAoB,EAC5CjB,EAAQ,IAAI,CACd,EAOE,gBAAiB,CAAC,CAACD,CAAA,EAGrB,aACGF,GAAY,SAAZ,CAAqB,MAAAiB,EACnB,SAAA5C,EACH,CAEJ,EAEagD,EAAU,IAAM,CAC3B,MAAMvB,EAAUC,aAAWC,EAAW,EACtC,GAAIF,IAAY,OACd,MAAM,IAAI,MAAM,6CAA6C,EAE/D,OAAOA,CACT,EC1KawB,GAAsB,IAAM,CACvC,KAAM,CAAE,MAAAC,EAAO,UAAAlB,CAAA,EAAcgB,EAAA,EAE7B,aACG,OAAI,UAAU,iGACb,SAAAG,OAAC,OAAI,UAAU,oDACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,OAAI,UAAU,oHACb,SAAAA,MAAC,OAAI,UAAU,qBAAqB,KAAK,OAAO,QAAQ,YAAY,OAAO,eACzE,SAAAA,MAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gKAAgK,EACvO,EACF,EACAA,MAAC,MAAG,UAAU,wCAAwC,gCAEtD,EACAA,MAAC,KAAE,UAAU,gBAAgB,oEAE7B,GACF,EAEA4B,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAAC,MAAG,UAAU,2CAA2C,kCAEzD,EACA4B,OAAC,MAAG,UAAU,kCACZ,UAAAA,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC,QAAK,UAAU,uBAAuB,cAAE,EAAO,oCAElD,EACA4B,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC,QAAK,UAAU,qBAAqB,cAAE,EAAO,4BAEhD,EACA4B,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC,QAAK,UAAU,sBAAsB,cAAE,EAAO,kCAEjD,EACA4B,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC,QAAK,UAAU,uBAAuB,cAAE,EAAO,gCAElD,EACA4B,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC,QAAK,UAAU,qBAAqB,cAAE,EAAO,2BAEhD,EACA4B,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC,QAAK,UAAU,uBAAuB,cAAE,EAAO,8BAElD,EACA4B,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC,QAAK,UAAU,qBAAqB,cAAE,EAAO,2BAEhD,GACF,GACF,EAEA4B,OAAC,OAAI,UAAU,cACb,UAAA5B,MAAC,KAAE,UAAU,6BAA6B,sFAE1C,EAEA4B,OAAC,UACC,QAASD,EACT,SAAUlB,EACV,UAAU,sMAET,UAAAA,EACCmB,OAAC,OAAI,UAAU,kCAAkC,MAAM,6BAA6B,KAAK,OAAO,QAAQ,YACtG,UAAA5B,MAAC,UAAO,UAAU,aAAa,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,OAAO,eAAe,YAAY,IAAI,QAC3F,QAAK,UAAU,aAAa,KAAK,eAAe,EAAE,kHAAkH,GACvK,EAEAA,MAAC,OAAI,UAAU,UAAU,KAAK,eAAe,QAAQ,YACnD,SAAAA,MAAC,QAAK,SAAS,UAAU,EAAE,mtBAAmtB,SAAS,UAAU,EACnwB,EAEFA,MAAC,QAAK,gCAAoB,KAG5BA,MAAC,OAAI,UAAU,qCACb,eAAC,KAAE,UAAU,wBAAwB,gKAGrC,EACF,GACF,GACF,GACF,EACF,CAEJ,ECtFa6B,GAA4C,CAAC,CAAE,SAAApD,KAAe,CACzE,KAAM,CAAE,gBAAAqD,EAAiB,UAAArB,CAAA,EAAcgB,EAAA,EAEvC,OAAIhB,QAEC,OAAI,UAAU,6FACb,SAAAmB,OAAC,OAAI,UAAU,cACb,UAAA5B,MAAC,OAAI,UAAU,yEAAyE,EACxFA,MAAC,KAAE,UAAU,qBAAqB,sBAAU,GAC9C,EACF,EAIC8B,oBAIK,SAAArD,EAAS,QAHTiD,GAAA,EAAU,CAItB,ECxBaK,GAAwB,IAAM,CACzC,KAAM,CAAE,KAAAzB,EAAM,OAAA0B,CAAA,EAAWP,EAAA,EACnB,CAACQ,EAAgBC,CAAiB,EAAI1B,WAAS,EAAK,EAE1D,OAAKF,EAGHsB,OAAC,OAAI,UAAU,WACb,UAAAA,OAAC,UACC,QAAS,IAAMM,EAAkB,CAACD,CAAc,EAChD,UAAU,4KAEV,UAAAjC,MAAC,OACC,IAAKM,EAAK,WACV,IAAKA,EAAK,KACV,UAAU,yBAEZsB,OAAC,OAAI,UAAU,oBACb,UAAA5B,MAAC,KAAE,UAAU,6CACV,SAAAM,EAAK,KACR,EACAsB,OAAC,KAAE,UAAU,iCAAiC,cAC1CtB,EAAK,OACT,GACF,EACAN,MAAC,OACC,UAAW,8CACTiC,EAAiB,aAAe,EAClC,GACA,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAjC,MAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,iBAAiB,GACxF,IAGDiC,GACCL,OAAAO,WAAA,CAEE,UAAAnC,MAAC,OACC,UAAU,qBACV,QAAS,IAAMkC,EAAkB,EAAK,IAIxCN,OAAC,OAAI,UAAU,uFACb,UAAAA,OAAC,OAAI,UAAU,qCACb,UAAA5B,MAAC,KAAE,UAAU,oCACV,SAAAM,EAAK,KACR,EACAsB,OAAC,KAAE,UAAU,wBAAwB,cACjCtB,EAAK,OACT,EACCA,EAAK,OACJN,MAAC,KAAE,UAAU,wBACV,WAAK,MACR,GAEJ,EAEA4B,OAAC,OAAI,UAAU,OACb,UAAAA,OAAC,UACC,UAAU,6EACV,QAAS,IAAM,CACb,OAAO,KAAK,sBAAsBtB,EAAK,KAAK,GAAI,QAAQ,EACxD4B,EAAkB,EAAK,CACzB,EAEA,UAAAlC,MAAC,OAAI,UAAU,6BAA6B,KAAK,eAAe,QAAQ,YACtE,SAAAA,MAAC,QAAK,SAAS,UAAU,EAAE,mtBAAmtB,SAAS,UAAU,EACnwB,EAAM,yBAIR4B,OAAC,UACC,UAAU,6EACV,QAAS,IAAM,CAEb,MAAM,uBAAuB,EAC7BM,EAAkB,EAAK,CACzB,EAEA,UAAAN,OAAC,OAAI,UAAU,6BAA6B,KAAK,OAAO,QAAQ,YAAY,OAAO,eACjF,UAAA5B,MAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,seAAse,EAC3iBA,MAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,mCAAmC,GAC1G,EAAM,aAER,EACF,EAEAA,MAAC,OAAI,UAAU,gCACb,SAAA4B,OAAC,UACC,QAAS,IAAM,CACbI,EAAA,EACAE,EAAkB,EAAK,CACzB,EACA,UAAU,0EAEV,UAAAlC,MAAC,OAAI,UAAU,4BAA4B,KAAK,OAAO,QAAQ,YAAY,OAAO,eAChF,eAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,4FAA4F,EACnK,EAAM,aAER,CACF,GACF,GACF,GAEJ,EAxGgB,IA0GpB,ECjHA,SAASoC,GAAEpF,EAAE,CAAC,IAAI,EAAEb,EAAEK,EAAE,GAAG,GAAa,OAAOQ,GAAjB,UAA8B,OAAOA,GAAjB,SAAmBR,GAAGQ,UAAoB,OAAOA,GAAjB,SAAmB,GAAG,MAAM,QAAQA,CAAC,EAAE,CAAC,IAAIqF,EAAErF,EAAE,OAAO,IAAI,EAAE,EAAE,EAAEqF,EAAE,IAAIrF,EAAE,CAAC,IAAIb,EAAEiG,GAAEpF,EAAE,CAAC,CAAC,KAAKR,IAAIA,GAAG,KAAKA,GAAGL,EAAE,KAAM,KAAIA,KAAKa,EAAEA,EAAEb,CAAC,IAAIK,IAAIA,GAAG,KAAKA,GAAGL,GAAG,OAAOK,CAAC,CAAQ,SAAS8F,GAAM,CAAC,QAAQtF,EAAE,EAAEb,EAAE,EAAEK,EAAE,GAAG6F,EAAE,UAAU,OAAOlG,EAAEkG,EAAElG,KAAKa,EAAE,UAAUb,CAAC,KAAK,EAAEiG,GAAEpF,CAAC,KAAKR,IAAIA,GAAG,KAAKA,GAAG,GAAG,OAAOA,CAAC,CCM/W,MAAM+F,GAAkC,CAAC,CACvC,YAAAC,EACA,WAAAC,EACA,eAAAC,EACA,YAAAC,EACA,SAAAC,EAAW,EACb,IAAM,SACJ,MAAMC,EAAiBC,GACjBJ,EAAe,SAASI,CAAU,EAAU,YAC5CA,IAAeN,EAAoB,UACnCM,EAAaN,EAAoB,YAC9B,WAGHO,EAAgBD,GAChBF,EAAiB,GAEdE,GAAcN,GAAeE,EAAe,SAASI,EAAa,CAAC,EAG5E,OACElB,OAAC,OAAI,aAAW,WAAW,UAAU,OACnC,UAAA5B,MAAC,MAAG,UAAU,0DACX,SAAAlC,EAAM,MAAM,EAAG2E,CAAU,EAAE,IAAI,CAACrD,EAAM4D,IAAU,CAC/C,MAAMF,EAAa1D,EAAK,GAClB6D,EAASJ,EAAcC,CAAU,EACjCI,EAAcH,EAAaD,CAAU,EAE3C,OACElB,OAAC,MAAiB,UAAU,oBAE1B,UAAAA,OAAC,UACC,KAAK,SACL,QAAS,IAAMsB,EAAcP,EAAYG,CAAU,EAAI,OACvD,SAAU,CAACI,EACX,UAAWZ,EACT,mHACA,CAEE,iDACEW,IAAW,aAAeC,EAC5B,4BACED,IAAW,aAAe,CAACC,EAG7B,oDACED,IAAW,UAGb,8CACEA,IAAW,YAAcC,EAC3B,4BACED,IAAW,YAAc,CAACC,CAAA,EAE9B,CACE,iBAAkBA,GAAe,CAACN,EAClC,gCAAiCA,EACjC,iBAAkB,CAACM,GAAe,CAACN,CAAA,CACrC,EAEF,eAAcK,IAAW,UAAY,OAAS,OAE7C,UAAAA,IAAW,YACVjD,MAACmD,GAAA,CAAM,UAAU,UAAU,cAAY,OAAO,EAE9CnD,MAAC,QAAK,UAAU,UAAW,SAAA8C,EAAW,EAIxC9C,MAAC,QAAK,UAAU,UACb,SAAAiD,IAAW,YACR,QAAQH,CAAU,IAAI1D,EAAK,KAAK,cAChC6D,IAAW,UACX,QAAQH,CAAU,IAAI1D,EAAK,KAAK,iBAChC,QAAQ0D,CAAU,IAAI1D,EAAK,KAAK,GAEtC,KAIFwC,OAAC,OAAI,UAAU,uBACb,UAAA5B,MAAC,OACC,UAAWsC,EACT,qDACA,CACE,mBAAoBW,IAAW,WAAaA,IAAW,YACvD,gBAAiBA,IAAW,WAC9B,EAGD,SAAA7D,EAAK,QAERY,MAAC,OAAI,UAAU,wBACZ,WAAK,YACR,GACF,EAGCgD,EAAQlF,EAAM,MAAM,EAAG2E,CAAU,EAAE,OAAS,GAC3CzC,MAACoD,GAAA,CACC,UAAWd,EACT,sDACA,CACE,mBAAoBQ,EAAaN,GAAeE,EAAe,SAASI,CAAU,EAClF,gBAAiBA,GAAcN,GAAe,CAACE,EAAe,SAASI,CAAU,EACnF,EAEF,cAAY,QACd,GA/EK1D,EAAK,EAiFd,CAEJ,CAAC,EACH,EAGAwC,OAAC,OAAI,UAAU,6BACb,UAAAA,OAAC,OAAI,UAAU,uCAAuC,kBAC9CY,EAAY,MAAGa,EAAAvF,EAAM0E,EAAc,CAAC,IAArB,YAAAa,EAAwB,OAC/C,EACArD,MAAC,OAAI,UAAU,wBACZ,cAAMwC,EAAc,CAAC,kBAAG,YAC3B,GACF,EAGAxC,MAAC,OAAI,UAAU,oDACb,SAAAA,MAAC,OACC,UAAU,uEACV,MAAO,CACL,MAAO,IAAK0C,EAAe,QAAUF,EAAcE,EAAe,OAAS,GAAM,IAAMD,EAAc,GAAG,IAC1G,GAEJ,EAGAb,OAAC,OAAI,UAAU,yCAAyC,kBAChDY,EAAY,OAAKC,EACtBC,EAAe,OAAS,GACvBd,OAAC,QAAK,UAAU,OAAO,cACnBc,EAAe,OAAO,eAC1B,GAEJ,GACF,CAEJ,EC3IMY,EAAgC,CAAC,CACrC,SAAA7E,EACA,QAAA8E,EAAU,UACV,KAAAC,EAAO,KACP,QAAAnE,EAAU,GACV,SAAAuD,EAAW,GACX,KAAAa,EACA,aAAAC,EAAe,OACf,UAAAC,EAAY,GACZ,UAAAC,EACA,GAAGC,CACL,IAAM,CACJ,MAAMC,EAAaxB,EACjB,sLACA,CACE,SAAUqB,CAAA,CACZ,EAGII,EAAW,CACf,QAAS,kFACT,UAAW,yEACX,QAAS,wFACT,MAAO,qEACP,OAAQ,uEAGJC,EAAQ,CACZ,GAAI,iCACJ,GAAI,+BACJ,GAAI,kCAGAC,EAAY,CAChB,GAAI,UACJ,GAAI,UACJ,GAAI,WAGAC,EAAatB,GAAYvD,EAE/B,OACEuC,OAAC,UACC,UAAWU,EACTwB,EACAC,EAASR,CAAO,EAChBS,EAAMR,CAAI,EACVI,CAAA,EAEF,SAAUM,EACT,GAAGL,EAEH,UAAAxE,SACE8E,GAAA,CAAQ,UAAW7B,EAAK,eAAgB2B,EAAUT,CAAI,EAAG,CACxD,OAAQ/E,GAAYiF,IAAiB,OACrC,OAAQjF,GAAYiF,IAAiB,QACtC,EAAG,EAGL,CAACrE,GAAWoE,GAAQC,IAAiB,cACnC,QAAK,UAAWpB,EAAK2B,EAAUT,CAAI,EAAG,CAAE,OAAQ/E,CAAA,CAAU,EACxD,SAAAgF,EACH,EAGDhF,EAEA,CAACY,GAAWoE,GAAQC,IAAiB,eACnC,QAAK,UAAWpB,EAAK2B,EAAUT,CAAI,EAAG,CAAE,OAAQ/E,EAAU,EACxD,SAAAgF,CAAA,CACH,IAIR,ECxEMW,EAA4B,CAAC,CACjC,SAAA3F,EACA,UAAAmF,EACA,QAAAS,EAAU,KACV,OAAAC,EAAS,KACT,OAAAC,EAAS,GACT,MAAAC,EAAQ,GACR,SAAAC,EAAW,GACX,QAAAC,EACA,SAAA9B,EAAW,EACb,IAAM,CACJ,MAAMM,EAAc,CAAC,CAACwB,GAAW,CAAC9B,EAE5BkB,EAAa,kDAEba,EAAgB,CACpB,KAAM,GACN,GAAI,MACJ,GAAI,MACJ,GAAI,OAGAC,EAAe,CACnB,KAAM,GACN,GAAI,YACJ,GAAI,YACJ,GAAI,aAGAC,EAAeN,EAAS,yBAA2B,GAEnDO,EAAcN,GAAS,CAAC5B,EAAW,yCAA2C,GAE9EmC,EAAiBN,EAAW,6CAA+C,GAE3EO,EAAkB9B,EAAc,iBAAmB,GAEnD+B,EAAiBrC,EAAW,gCAAkC,GAEpE,OACE5C,MAAC,OACC,UAAWsC,EACTwB,EACAa,EAAcN,CAAO,EACrBO,EAAaN,CAAM,EACnBO,EACAC,EACAC,EACAC,EACAC,EACArB,CAAA,EAEF,QAASV,EAAcwB,EAAU,OACjC,KAAMxB,EAAc,SAAW,OAC/B,SAAUA,EAAc,EAAI,OAC5B,UAAWA,EAAelG,GAAM,EAC1BA,EAAE,MAAQ,SAAWA,EAAE,MAAQ,OACjCA,EAAE,iBACF0H,GAAA,MAAAA,IAEJ,EAAI,OAEH,SAAAjG,CAAA,EAGP,EAQayG,EAAwC,CAAC,CAAE,SAAAzG,EAAU,UAAAmF,CAAA,IAChE5D,MAAC,OAAI,UAAWsC,EAAK,OAAQsB,CAAS,EACnC,SAAAnF,CAAA,CACH,EASW0G,EAAsC,CAAC,CAClD,SAAA1G,EACA,UAAAmF,EACA,MAAAwB,EAAQ,CACV,IAAM,CACJ,MAAMC,EAAM,IAAID,CAAK,GAEfE,EAAa,CACjB,EAAG,WACH,EAAG,UACH,EAAG,UACH,EAAG,aAGL,OACEtF,MAACqF,EAAA,CAAI,UAAW/C,EAAK,8BAA+BgD,EAAWF,CAAK,EAAGxB,CAAS,EAC7E,SAAAnF,CAAA,CACH,CAEJ,EAOa8G,EAAkD,CAAC,CAC9D,SAAA9G,EACA,UAAAmF,CACF,UACG,KAAE,UAAWtB,EAAK,wBAAyBsB,CAAS,EAClD,SAAAnF,EACH,EAQW+G,EAA0C,CAAC,CAAE,SAAA/G,EAAU,UAAAmF,KAClE5D,MAAC,OAAI,UAAA4D,EACF,SAAAnF,EACH,ECvIIgH,GAAqC,CAAC,CAAE,OAAAC,EAAQ,WAAAC,KAAiB,CACrE,KAAM,CAAE,MAAAvH,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EAErB2F,EAAwB/G,GAAuB,CACnDD,EAAQ,YAAYC,CAAQ,CAC9B,EAEMgH,EAAajH,EAAQ,sBAE3B,OACEgD,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,gCAEtD,EACAA,MAAC,KAAE,UAAU,wBAAwB,8FAErC,GACF,QAEC,OAAI,UAAU,uDACZ,SAAA1C,GAAiB,IAAKwI,GAAW,CAChC,MAAMC,EAAiB1I,EAAUyI,EAAO,KAAK,EACvCE,EAAa5H,EAAM,WAAa0H,EAAO,MAE7C,OACE9F,MAACoE,EAAA,CAEC,SAAU4B,EACV,QAAS,IAAMJ,EAAqBE,EAAO,KAAK,EAChD,MAAK,GACL,UAAU,SAEV,gBAACN,EAAA,CACC,UAAA5D,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,OAAI,UAAU,gBAAgB,KAAK,MAAM,aAAY8F,EAAO,MAC1D,SAAAA,EAAO,KACV,EACA9F,MAACmF,EAAA,CAAU,MAAO,EAAI,WAAO,MAAM,EACnCnF,MAACuF,EAAA,CAAgB,UAAU,OACxB,WAAO,YACV,GACF,EAGA3D,OAAC,OAAI,UAAU,iBACb,UAAAA,OAAC,OAAI,UAAU,0CACb,UAAA5B,MAACiG,EAAA,CAAM,UAAU,6BAA6B,EAC9CjG,MAAC,QAAM,SAAA+F,EAAe,cAAc,GACtC,EACAnE,OAAC,OAAI,UAAU,0CACb,UAAA5B,MAACkG,EAAA,CAAI,UAAU,6BAA6B,EAC5CtE,OAAC,QAAK,UAAU,aAAc,UAAAmE,EAAe,WAAW,eAAW,GACrE,EACAnE,OAAC,OAAI,UAAU,0CACb,UAAA5B,MAACmG,GAAA,CAAM,UAAU,6BAA6B,SAC7C,QAAM,UAAAJ,EAAe,kBAAkB,OAAO,uBAAmB,GACpE,GACF,EAGAnE,OAAC,OAAI,UAAU,gBACb,UAAA5B,MAAC,MAAG,UAAU,yCAAyC,yBAAa,EACpEA,MAAC,MAAG,UAAU,kCACX,SAAA+F,EAAe,aAAa,IAAI,CAACK,EAAKpD,IACrCpB,OAAC,MAAe,UAAU,oBACxB,UAAA5B,MAAC,OAAI,UAAU,sDAAsD,EACpEoG,CAAA,GAFMpD,CAGT,CACD,EACH,GACF,EAGCgD,GACChG,MAAC,OAAI,UAAU,oCACb,eAAC,OAAI,UAAU,mDAAmD,sBAElE,EACF,GAEJ,GAtDK8F,EAAO,MAyDlB,CAAC,EACH,EAGAlE,OAAC,OAAI,UAAU,wDACb,UAAA5B,MAAC,MAAG,UAAU,yCAAyC,8BAAkB,EACzE4B,OAAC,OAAI,UAAU,gDACb,UAAAA,OAAC,OACC,UAAA5B,MAAC,QAAK,UAAU,4BAA4B,sBAAU,EACtDA,MAAC,QAAK,UAAU,qBAAqB,kCAAsB,GAC7D,SACC,OACC,UAAAA,MAAC,QAAK,UAAU,4BAA4B,uBAAW,EACvDA,MAAC,QAAK,UAAU,qBAAqB,+BAAmB,GAC1D,SACC,OACC,UAAAA,MAAC,QAAK,UAAU,4BAA4B,mBAAO,EACnDA,MAAC,QAAK,UAAU,qBAAqB,uBAAW,GAClD,GACF,GACF,EAGC,CAAC6F,EAAW,SACXjE,OAAC,OAAI,UAAU,iDACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,sCAA0B,EAChFA,MAAC,MAAG,UAAU,iCACX,SAAA6F,EAAW,OAAO,IAAI,CAACvG,EAAO0D,IAC7BpB,OAAC,MAAe,UAAU,oBACxB,UAAA5B,MAAC,OAAI,UAAU,qDAAqD,EACnEV,CAAA,GAFM0D,CAGT,CACD,EACH,GACF,EAIFpB,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAAC,QAED,EAEAA,MAAC,OAAI,UAAU,iBACb,SAAAA,MAACsD,EAAA,CACC,QAASoC,EACT,SAAU,CAACG,EAAW,QACtB,QAAQ,UACR,KAAK,KACN,qBAED,CACF,GACF,GACF,CAEJ,ECvIMQ,EAA8B,CAAC,CACnC,KAAAC,EAAO,OACP,MAAAC,EACA,SAAA9H,EACA,YAAA+H,EAAc,GACd,UAAAC,EACA,UAAA7C,CACF,IAAM,CACJ,MAAM8C,EAAQ,CACZ,KAAMC,GACN,QAASC,EACT,QAASC,GACT,MAAOC,EAAA,EAGHC,EAAS,CACb,KAAM,CACJ,UAAW,2CACX,KAAM,gBACN,MAAO,iBAET,QAAS,CACP,UAAW,8CACX,KAAM,iBACN,MAAO,kBAET,QAAS,CACP,UAAW,iDACX,KAAM,kBACN,MAAO,mBAET,MAAO,CACL,UAAW,wCACX,KAAM,eACN,MAAO,eACT,EAGIC,EAAON,EAAMJ,CAAI,EACjBW,EAAQF,EAAOT,CAAI,EAEzB,OACEtG,MAAC,OACC,UAAWsC,EACT,wBACA2E,EAAM,UACNrD,CAAA,EAEF,KAAK,QAEL,SAAAhC,OAAC,OAAI,UAAU,OACb,UAAA5B,MAAC,OAAI,UAAU,gBACb,SAAAA,MAACgH,EAAA,CAAK,UAAW1E,EAAK,UAAW2E,EAAM,IAAI,EAAG,cAAY,OAAO,EACnE,EAEArF,OAAC,OAAI,UAAU,cACZ,UAAA2E,GACCvG,MAAC,MAAG,UAAWsC,EAAK,sBAAuB2E,EAAM,KAAK,EACnD,SAAAV,CAAA,CACH,EAGFvG,MAAC,OAAI,UAAWsC,EAAK,UAAWiE,EAAQ,OAAS,EAAE,EAChD,SAAA9H,CAAA,CACH,GACF,EAEC+H,GAAeC,GACdzG,MAAC,OAAI,UAAU,eACb,SAAAA,MAAC,OAAI,UAAU,kBACb,SAAAA,MAAC,UACC,KAAK,SACL,QAASyG,EACT,UAAWnE,EACT,qGACA,CACE,sDAAuDgE,IAAS,OAChE,yDAA0DA,IAAS,UACnE,4DAA6DA,IAAS,UACtE,mDAAoDA,IAAS,QAC/D,EAEF,aAAW,UAEX,SAAAtG,MAACkH,GAAA,CAAE,UAAU,UAAU,IAE3B,EACF,GAEJ,GAGN,EChGMC,GAAuC,CAAC,CAAE,OAAAzB,EAAQ,WAAAC,KAAiB,CACvE,KAAM,CAAE,MAAAvH,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EAErBmH,EAAwBC,GAAuB,CACnD,MAAMC,EAAoBlJ,EAAM,WACbkJ,EAAkB,SAASD,CAAQ,EAIpDzI,EAAQ,cAAc0I,EAAkB,OAAO7K,GAAKA,IAAM4K,CAAQ,CAAC,EAG/DC,EAAkB,OAASzJ,EAAiB,WAAW,KACzDe,EAAQ,cAAc,CAAC,GAAG0I,EAAmBD,CAAQ,CAAC,CAG5D,EAEMxB,EAAajH,EAAQ,sBACrB2I,EAAgBnJ,EAAM,WAAW,OACjCoJ,EAAW3J,EAAiB,WAAW,IACvC4J,EAAW5J,EAAiB,WAAW,IAG7C,OACE+D,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,+BAEtD,EACA4B,OAAC,KAAE,UAAU,6BAA6B,oBAChC4F,EAAS,IAAEC,EAAS,4DAC9B,EAGA7F,OAAC,OAAI,UAAU,8DACb,UAAAA,OAAC,QAAK,UAAU,oCAAoC,uBACvC2F,EAAc,IAAEE,CAAA,EAC7B,EACCF,GAAiBC,GAChBxH,MAAC0H,GAAA,CAAK,UAAU,4CAA4C,GAEhE,GACF,QAGC,OAAI,UAAU,wCACZ,SAAAjK,GAAiB,IAAKqI,GAAW,CAChC,MAAME,EAAa5H,EAAM,WAAW,SAAS0H,EAAO,KAAK,EACnD6B,EAAY,CAAC3B,GAAcuB,EAAgBE,EAC3C7E,EAAW,CAACoD,GAAc,CAAC2B,EAEjC,OACE3H,MAACoE,EAAA,CAEC,SAAU4B,EACV,QAAS,IAAMoB,EAAqBtB,EAAO,KAAK,EAChD,MAAO,CAAClD,EACR,SAAAA,EACA,UAAU,kBAEV,SAAA5C,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,6BACb,UAAA5B,MAAC,OAAI,UAAU,yBAAyB,KAAK,MAAM,aAAY8F,EAAO,MACnE,SAAAA,EAAO,KACV,EAEAlE,OAAC,OAAI,UAAU,iBACb,UAAAA,OAAC,OAAI,UAAU,oCACb,UAAA5B,MAACmF,GAAU,MAAO,EAAG,UAAU,YAC5B,WAAO,MACV,EAGAvD,OAAC,OAAI,UAAU,8BACZ,UAAAkE,EAAO,aACNlE,OAAC,QAAK,UAAU,oGACd,UAAA5B,MAAC0H,GAAA,CAAK,UAAU,4BAA4B,EAAE,eAEhD,EAGD1B,GACChG,MAAC,QAAK,UAAU,sGAAsG,sBAEtH,GAEJ,GACF,EAEAA,MAACuF,EAAA,CAAgB,UAAU,OACxB,WAAO,YACV,GACF,GACF,EACF,GAzCKO,EAAO,MA4ClB,CAAC,EACH,EAGA9F,MAACqG,GAAM,KAAK,OAAO,MAAM,oBACvB,SAAAzE,OAAC,OAAI,UAAU,oBACb,UAAAA,OAAC,KACC,UAAA5B,MAAC,UAAO,kCAAsB,EAAS,0EACzC,EACA4B,OAAC,OAAI,UAAU,6CACb,UAAAA,OAAC,OACC,UAAA5B,MAAC,QAAK,UAAU,cAAc,0BAAc,EAC5CA,MAAC,QAAK,UAAU,OAAO,+DAAmD,GAC5E,SACC,OACC,UAAAA,MAAC,QAAK,UAAU,cAAc,4BAAgB,EAC9CA,MAAC,QAAK,UAAU,OAAO,wDAA4C,GACrE,GACF,GACF,EACF,EAGCuH,EAAgB,GAAKA,EAAgBC,GACpC5F,OAACyE,EAAA,CAAM,KAAK,UAAU,oCACImB,EAAWD,EAAc,gBAAcC,EAAWD,IAAkB,EAAI,IAAM,MAAM,iBAC9G,EAGDA,IAAkBE,GACjBzH,MAACqG,EAAA,CAAM,KAAK,UAAU,mHAEtB,EAID,CAACR,EAAW,SACX7F,MAACqG,GAAM,KAAK,QAAQ,MAAM,6BACxB,SAAArG,MAAC,MAAG,UAAU,YACX,SAAA6F,EAAW,OAAO,IAAI,CAACvG,EAAO0D,IAC7BpB,OAAC,MAAe,UAAU,oBACxB,UAAA5B,MAAC,OAAI,UAAU,qDAAqD,EACnEV,CAAA,GAFM0D,CAGT,CACD,EACH,EACF,EAIFpB,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAACsD,EAAA,CACC,QAASqC,EACT,QAAQ,UACR,KAAK,KACL,WAAOiC,EAAA,EAAU,EAClB,sBAID5H,MAAC,OAAI,UAAU,iBACb,SAAAA,MAACsD,EAAA,CACC,QAASoC,EACT,SAAU,CAACG,EAAW,QACtB,QAAQ,UACR,KAAK,KACN,qBAED,CACF,GACF,GACF,CAEJ,EC3KMgC,GAAqC,CAAC,CAAE,OAAAnC,EAAQ,WAAAC,EAAY,OAAAmC,KAAa,CAC7E,KAAM,CAAE,MAAA1J,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EAErB8H,EAAuBC,GAAqB,CAChD,MAAMC,EAAkB7J,EAAM,SACX6J,EAAgB,SAASD,CAAO,EAIjDpJ,EAAQ,YAAYqJ,EAAgB,OAAO,GAAK,IAAMD,CAAO,CAAC,EAG9DpJ,EAAQ,YAAY,CAAC,GAAGqJ,EAAiBD,CAAO,CAAC,CAErD,EAEME,EAAkB,IAAM,CAC5B,GAAI9J,EAAM,SAAU,CAClB,MAAM2H,EAAiB1I,EAAUe,EAAM,QAAQ,EACzC+J,EAAoBzK,EACvB,OAAOoI,GAAUC,EAAe,kBAAkB,SAASD,EAAO,KAAK,CAAC,EACxE,IAAIA,GAAUA,EAAO,KAAK,EAC7BlH,EAAQ,YAAYuJ,CAAiB,CACvC,CACF,EAEMC,EAAiB,IAAM,CAC3BxJ,EAAQ,YAAY,EAAE,CACxB,EAEmBA,EAAQ,sBAC3B,MAAM2I,EAAgBnJ,EAAM,SAAS,OAG/B2H,EAAiB3H,EAAM,SAAWf,EAAUe,EAAM,QAAQ,EAAI,KAC9D+J,GAAoBpC,GAAA,YAAAA,EAAgB,oBAAqB,GAE/D,OACEnE,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,2BAEtD,EACAA,MAAC,KAAE,UAAU,6BAA6B,sFAE1C,EAGA4B,OAAC,OAAI,UAAU,4FACb,UAAA5B,MAAC,OAAI,UAAU,8DACb,SAAA4B,OAAC,QAAK,UAAU,oCAAoC,uBACvC2F,EAAc,WAASA,IAAkB,EAAI,IAAM,IAChE,EACF,EAEA3F,OAAC,OAAI,UAAU,iBACb,UAAA5B,MAACsD,EAAA,CACC,QAAS4E,EACT,QAAQ,UACR,KAAK,KACL,SAAU,CAACnC,EACZ,kCAGD/F,MAACsD,EAAA,CACC,QAAS8E,EACT,QAAQ,UACR,KAAK,KACL,SAAUb,IAAkB,EAC7B,sBAED,EACF,GACF,GACF,EAGCxB,GACC/F,MAACqG,EAAA,CAAM,KAAK,OAAO,UAAU,OAC3B,SAAAzE,OAAC,OAAI,UAAU,6BACb,UAAA5B,MAAC2G,GAAA,CAAK,UAAU,6CAA6C,SAC5D,OACC,UAAA3G,MAAC,KAAE,UAAU,cAAc,kCAAsB,EACjD4B,OAAC,KAAE,UAAU,eACV,UAAAmE,EAAe,YAAY,aAAWoC,EAAkB,OAAO,WAASzK,EAAgB,OAAO,2FAElG,GACF,GACF,EACF,QAID,OAAI,UAAU,wCACZ,SAAAA,EAAgB,IAAKoI,GAAW,CAC/B,MAAME,EAAa5H,EAAM,SAAS,SAAS0H,EAAO,KAAK,EACjDuC,EAAc,CAACtC,GAAkBoC,EAAkB,SAASrC,EAAO,KAAK,EAE9E,OACE9F,MAACoE,EAAA,CAEC,SAAU4B,EACV,QAASqC,EAAc,IAAMN,EAAoBjC,EAAO,KAAK,EAAI,OACjE,MAAOuC,EACP,SAAU,CAACA,EACX,UAAU,kBAEV,gBAAC7C,EAAA,CACC,UAAA5D,OAAC,OAAI,UAAU,6BACb,UAAA5B,MAAC,OAAI,UAAU,yBAAyB,KAAK,MAAM,aAAY8F,EAAO,MACnE,SAAAA,EAAO,KACV,QAEC,OAAI,UAAU,iBACb,SAAAlE,OAAC,OAAI,UAAU,mCACb,UAAAA,OAAC,OAAI,UAAU,SACb,UAAA5B,MAACmF,EAAA,CAAU,MAAO,EAAG,UAAW,aAAckD,EAAgC,GAAlB,eAAoB,GAC7E,SAAAvC,EAAO,MACV,EACA9F,MAACuF,EAAA,CAAgB,UAAW,QAAS8C,EAAgC,GAAlB,eAAoB,GACpE,SAAAvC,EAAO,YACV,GACF,EAGAlE,OAAC,OAAI,UAAU,yCACZ,UAAAoE,GACChG,MAAC,QAAK,UAAU,sGAAsG,sBAEtH,EAGD,CAACqI,GACArI,MAAC,QAAK,UAAU,gGAAgG,yBAEhH,GAEJ,GACF,EACF,GACF,EAGC,CAACqI,GACArI,MAAC,OAAI,UAAU,2EAA2E,GAE9F,GA9CK8F,EAAO,MAiDlB,CAAC,EACH,EAGAlE,OAAC,OAAI,UAAU,4DACb,UAAAA,OAAC,OAAI,UAAU,6BACb,UAAA5B,MAAC,MAAG,UAAU,kCAAkC,8BAAkB,EAClEA,MAAC,KAAE,UAAU,yBAAyB,2CAEtC,GACF,EACA4B,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAAC,MAAG,UAAU,iCAAiC,0BAAc,EAC7DA,MAAC,KAAE,UAAU,wBAAwB,sCAErC,GACF,EACA4B,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC,MAAG,UAAU,mCAAmC,2BAAe,EAChEA,MAAC,KAAE,UAAU,0BAA0B,qDAEvC,GACF,EACA4B,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC,MAAG,UAAU,mCAAmC,qBAAS,EAC1DA,MAAC,KAAE,UAAU,0BAA0B,4CAEvC,GACF,GACF,EAGCuH,EAAgB,GACfvH,MAACqG,GAAM,KAAK,UACV,gBAAC,KAAE,oCACuBkB,EAAc,WAASA,IAAkB,EAAI,IAAM,GAAG,yFAEhF,EACF,EAIF3F,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAACsD,EAAA,CACC,QAASqC,EACT,QAAQ,UACR,KAAK,KACL,WAAOiC,EAAA,EAAU,EAClB,sBAIDhG,OAAC,OAAI,UAAU,iBACZ,UAAAkG,GACC9H,MAACsD,EAAA,CACC,QAASwE,EACT,QAAQ,QACR,KAAK,KACN,2BAKH9H,MAACsD,EAAA,CACC,QAASoC,EACT,QAAQ,UACR,KAAK,KACN,qBAED,EACF,GACF,GACF,CAEJ,EC/NM4C,GAA0C,CAAC,CAAE,OAAA5C,EAAQ,WAAAC,KAAiB,SAC1E,KAAM,CAAE,MAAAvH,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EAErBsI,EAAwBvJ,GAAuB,CACnDJ,EAAQ,YAAYI,CAAQ,CAC9B,EAEMwJ,EAA0BvJ,GAA2B,CACzDL,EAAQ,cAAcK,CAAU,CAClC,EAEMwJ,EAA2BzL,GAA2C,CAC1E4B,EAAQ,eAAe5B,EAAE,OAAO,KAAK,CACvC,EAEM0L,EAA2B1L,GAA8C,CAC7E4B,EAAQ,eAAe5B,EAAE,OAAO,KAAK,CACvC,EAEM6I,EAAajH,EAAQ,sBAE3B,OACEgD,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,iCAEtD,EACAA,MAAC,KAAE,UAAU,wBAAwB,gGAErC,GACF,EAGA4B,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,mCACb,UAAA5B,MAACmG,GAAA,CAAM,UAAU,wBAAwB,EACzCnG,MAAC,MAAG,UAAU,sCAAsC,qBAAS,GAC/D,QAEC,OAAI,UAAU,sEACZ,SAAArC,GAAkB,IAAKmI,GAAW,CACjC,MAAME,EAAa5H,EAAM,WAAa0H,EAAO,MAE7C,OACE9F,MAACoE,EAAA,CAEC,SAAU4B,EACV,QAAS,IAAMuC,EAAqBzC,EAAO,KAAK,EAChD,MAAK,GACL,UAAU,cAEV,SAAAlE,OAAC4D,EAAA,CAAY,UAAU,MACrB,UAAAxF,MAAC,OAAI,UAAU,gBAAgB,KAAK,MAAM,aAAY8F,EAAO,MAC1D,SAAAA,EAAO,KACV,QACCX,EAAA,CAAU,MAAO,EAAG,UAAU,sBAC5B,WAAO,MACV,EACAnF,MAACuF,EAAA,CAAgB,UAAU,eACxB,WAAO,YACV,EAECS,GACChG,MAAC,OAAI,UAAU,4CAA4C,sBAE3D,GAEJ,GAtBK8F,EAAO,MAyBlB,CAAC,EACH,GACF,EAGAlE,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,mCACb,UAAA5B,MAACkG,EAAA,CAAI,UAAU,wBAAwB,EACvClG,MAAC,MAAG,UAAU,sCAAsC,4BAAgB,GACtE,QAEC,OAAI,UAAU,uDACZ,SAAApC,GAAmB,IAAKkI,GAAW,CAClC,MAAME,EAAa5H,EAAM,aAAe0H,EAAO,MAE/C,OACE9F,MAACoE,EAAA,CAEC,SAAU4B,EACV,QAAS,IAAMwC,EAAuB1C,EAAO,KAAK,EAClD,MAAK,GACL,UAAU,cAEV,SAAAlE,OAAC4D,EAAA,CAAY,UAAU,MACrB,UAAAxF,MAAC,OAAI,UAAU,gBAAgB,KAAK,MAAM,aAAY8F,EAAO,MAC1D,SAAAA,EAAO,KACV,QACCX,EAAA,CAAU,MAAO,EAAG,UAAU,sBAC5B,WAAO,MACV,EACAnF,MAACuF,EAAA,CAAgB,UAAU,eACxB,WAAO,YACV,EAECS,GACChG,MAAC,OAAI,UAAU,4CAA4C,sBAE3D,GAEJ,GAtBK8F,EAAO,MAyBlB,CAAC,EACH,GACF,EAGAlE,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,mCACb,UAAA5B,MAAC2I,EAAA,CAAS,UAAU,wBAAwB,EAC5C3I,MAAC,MAAG,UAAU,sCAAsC,+BAAmB,GACzE,EAEA4B,OAAC,OAAI,UAAU,wCAEb,UAAAA,OAAC,OACC,UAAA5B,MAAC,SAAM,QAAQ,cAAc,UAAU,+CAA+C,0BAEtF,EACAA,MAAC,SACC,KAAK,OACL,GAAG,cACH,MAAO5B,EAAM,YACb,SAAUqK,EACV,YAAY,6CACZ,UAAU,+IACV,UAAW5K,EAAiB,aAAa,aAE3C+D,OAAC,OAAI,UAAU,kDACb,UAAA5B,MAAC,QACE,SAAA5B,EAAM,YAAY,OAASP,EAAiB,aAAa,WACtD,WAAWA,EAAiB,aAAa,UAAU,cACnD,QAEN,SACC,QACE,UAAAO,EAAM,YAAY,OAAO,IAAEP,EAAiB,aAAa,YAC5D,GACF,GACF,SAGC,OACC,UAAAmC,MAAC,SAAM,QAAQ,cAAc,UAAU,+CAA+C,yBAEtF,EACAA,MAAC,YACC,GAAG,cACH,KAAM,EACN,MAAO5B,EAAM,YACb,SAAUsK,EACV,YAAY,oDACZ,UAAU,2JACV,UAAW7K,EAAiB,YAAY,aAE1C+D,OAAC,OAAI,UAAU,kDACb,UAAA5B,MAAC,QACE,SAAA5B,EAAM,YAAY,OAASP,EAAiB,YAAY,WACrD,WAAWA,EAAiB,YAAY,UAAU,cAClD,QAEN,SACC,QACE,UAAAO,EAAM,YAAY,OAAO,IAAEP,EAAiB,YAAY,YAC3D,GACF,GACF,GACF,GACF,GAGEO,EAAM,UAAYA,EAAM,oBACvBiI,EAAA,CAAM,KAAK,OAAO,MAAM,wBACvB,UAAAzE,OAAC,OAAI,UAAU,gDACZ,UAAAxD,EAAM,iBACJ,OACC,UAAA4B,MAAC,QAAK,UAAU,cAAc,sBAAU,EACxCA,MAAC,QAAK,UAAU,OACb,UAAAqD,EAAA1F,GAAkB,KAAKiL,GAAOA,EAAI,QAAUxK,EAAM,QAAQ,IAA1D,YAAAiF,EAA6D,MAChE,GACF,EAGDjF,EAAM,YACLwD,OAAC,OACC,UAAA5B,MAAC,QAAK,UAAU,cAAc,uBAAW,EACzCA,MAAC,QAAK,UAAU,OACb,UAAA6I,EAAAjL,GAAmB,KAAKgL,GAAOA,EAAI,QAAUxK,EAAM,UAAU,IAA7D,YAAAyK,EAAgE,MACnE,GACF,GAEJ,EAECzK,EAAM,WAAa,cAAgBA,EAAM,aAAe,UACvD4B,MAAC,OAAI,UAAU,yDACb,SAAAA,MAAC,KAAE,UAAU,0BAA0B,4HAEvC,EACF,GAEJ,EAID,CAAC6F,EAAW,SACX7F,MAACqG,GAAM,KAAK,QAAQ,MAAM,iCACxB,SAAArG,MAAC,MAAG,UAAU,YACX,SAAA6F,EAAW,OAAO,IAAI,CAACvG,EAAO0D,IAC7BpB,OAAC,MAAe,UAAU,4BACxB,UAAA5B,MAAC,OAAI,UAAU,qDAAqD,EACnEV,CAAA,GAFM0D,CAGT,CACD,EACH,EACF,EAIFpB,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAACsD,EAAA,CACC,QAASqC,EACT,QAAQ,UACR,KAAK,KACL,WAAOiC,EAAA,EAAU,EAClB,sBAID5H,MAAC,OAAI,UAAU,iBACb,SAAAA,MAACsD,EAAA,CACC,QAASoC,EACT,SAAU,CAACG,EAAW,QACtB,QAAQ,UACR,KAAK,KACN,iCAED,CACF,GACF,GACF,CAEJ,EC3PMiD,GAAmC,CAAC,CAAE,OAAApD,EAAQ,WAAAC,KAAiB,CACnE,KAAM,CAAE,MAAAvH,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EAErB8F,EAAiB3H,EAAM,SAAWf,EAAUe,EAAM,QAAQ,EAAI,KAC9D2K,EAAqBtL,GAAiB,OAAOmL,GAAOxK,EAAM,WAAW,SAASwK,EAAI,KAAK,CAAC,EACxFI,EAAmBtL,EAAgB,OAAOkL,GAAOxK,EAAM,SAAS,SAASwK,EAAI,KAAK,CAAC,EACnFK,EAAiBtL,GAAkB,QAAYiL,EAAI,QAAUxK,EAAM,QAAQ,EAC3E8K,EAAmBtL,GAAmB,QAAYgL,EAAI,QAAUxK,EAAM,UAAU,EAEhF+K,EAAqB/J,GAAiB,CAC1CR,EAAQ,SAASQ,CAAI,CACvB,EAGMgK,EAAmB,IAAM,CAC7B,GAAI,CAACrD,EAAgB,MAAO,UAE5B,MAAMsD,EAAY,CAChB,MAAS,EACT,aAAgB,EAChB,SAAY,EACZ,OAAU,GACVjL,EAAM,YAAc,OAAO,EAEvBkL,EAAoB,EAAKlL,EAAM,SAAS,OAAS,GACjDmL,EAAiB,CACrB,KAAQ,EACR,MAAS,GACT,OAAU,GACV,MAAS,GACT,WAAc,IACdnL,EAAM,UAAY,MAAM,EAEpBoL,EAAa,KAAK,KAAKH,EAAYC,EAAoBC,CAAc,EAE3E,OAAIC,EAAa,EAAU,YACvBA,EAAa,EAAU,YACvBA,EAAa,EAAU,YACpB,UACT,EAEmB,OAAA5K,EAAQ,sBAGzBgD,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,qCAEtD,EACAA,MAAC,KAAE,UAAU,wBAAwB,kGAErC,GACF,EAGA4B,OAAC,OAAI,UAAU,wCAGb,UAAAA,OAACwC,EAAA,CACC,UAAApE,MAACkF,EAAA,CACC,SAAAtD,OAAC,OAAI,UAAU,oCACb,UAAAA,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC,OAAI,UAAU,WAAY,SAAA+F,GAAA,YAAAA,EAAgB,KAAK,EAChD/F,MAACmF,EAAA,CAAU,MAAO,EAAG,oBAAQ,GAC/B,EACAnF,MAACsD,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAM6F,EAAkB,CAAC,EAClC,WAAOM,EAAA,EAAM,EACd,iBAED,EACF,EACF,EACAzJ,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OACC,UAAA5B,MAAC,MAAG,UAAU,4BAA6B,SAAA+F,GAAA,YAAAA,EAAgB,YAAY,EACvE/F,MAACuF,EAAA,CAAiB,SAAAQ,GAAA,YAAAA,EAAgB,YAAY,GAChD,EAEAnE,OAAC,OAAI,UAAU,oDACb,UAAAA,OAAC,OAAI,UAAU,oBACb,UAAA5B,MAACiG,EAAA,CAAM,UAAU,eAAe,EAChCjG,MAAC,QAAM,SAAA+F,GAAA,YAAAA,EAAgB,cAAc,GACvC,EACAnE,OAAC,OAAI,UAAU,oBACb,UAAA5B,MAACkG,EAAA,CAAI,UAAU,eAAe,EAC9BlG,MAAC,QAAK,UAAU,aAAc,0BAAgB,WAAW,GAC3D,GACF,GACF,EACF,GACF,SAGCoE,EAAA,CACC,UAAApE,MAACkF,EAAA,CACC,SAAAtD,OAAC,OAAI,UAAU,oCACb,UAAAA,OAACuD,EAAA,CAAU,MAAO,EAAG,yBAAa/G,EAAM,WAAW,OAAO,KAAC,EAC3D4B,MAACsD,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAM6F,EAAkB,CAAC,EAClC,WAAOM,EAAA,EAAM,EACd,iBAED,EACF,EACF,EACAzJ,MAACwF,EAAA,CACC,SAAAxF,MAAC,OAAI,UAAU,YACZ,SAAA+I,EAAmB,IAAK1B,GACvBzF,OAAC,OAAyB,UAAU,8BAClC,UAAA5B,MAAC,QAAK,UAAU,UAAW,SAAAqH,EAAS,KAAK,EACzCrH,MAAC,QAAK,UAAU,sBAAuB,WAAS,MAAM,EACrDqH,EAAS,aACRrH,MAAC,QAAK,UAAU,8DAA8D,uBAE9E,IANMqH,EAAS,KAQnB,CACD,EACH,EACF,GACF,SAGCjD,EAAA,CACC,UAAApE,MAACkF,EAAA,CACC,SAAAtD,OAAC,OAAI,UAAU,oCACb,UAAAA,OAACuD,EAAA,CAAU,MAAO,EAAG,uBAAW/G,EAAM,SAAS,OAAO,KAAC,EACvD4B,MAACsD,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAM6F,EAAkB,CAAC,EAClC,WAAOM,EAAA,EAAM,EACd,iBAED,EACF,EACF,QACCjE,EAAA,CACE,SAAApH,EAAM,SAAS,OAAS,EACvB4B,MAAC,OAAI,UAAU,YACZ,WAAiB,IAAKgI,GACrBpG,OAAC,OAAwB,UAAU,8BACjC,UAAA5B,MAAC,QAAK,UAAU,UAAW,SAAAgI,EAAQ,KAAK,EACxChI,MAAC,QAAK,UAAU,sBAAuB,WAAQ,MAAM,IAF7CgI,EAAQ,KAGlB,CACD,EACH,EAEAhI,MAACuF,EAAA,CAAgB,2CAA+B,EAEpD,GACF,SAGCnB,EAAA,CACC,UAAApE,MAACkF,EAAA,CACC,SAAAtD,OAAC,OAAI,UAAU,oCACb,UAAA5B,MAACmF,EAAA,CAAU,MAAO,EAAG,yBAAa,EAClCnF,MAACsD,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAM6F,EAAkB,CAAC,EAClC,WAAOM,EAAA,EAAM,EACd,iBAED,EACF,EACF,EACAzJ,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAACmG,GAAA,CAAM,UAAU,wBAAwB,EACzCnG,MAAC,QAAK,UAAU,sBAAsB,iBAAK,EAC3CA,MAAC,QAAK,UAAU,UAAW,0BAAgB,MAAM,GACnD,EAEA4B,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAACkG,EAAA,CAAI,UAAU,wBAAwB,EACvClG,MAAC,QAAK,UAAU,sBAAsB,uBAAW,EACjDA,MAAC,QAAK,UAAU,UAAW,0BAAkB,MAAM,GACrD,EAEA4B,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAACiG,EAAA,CAAM,UAAU,wBAAwB,EACzCjG,MAAC,QAAK,UAAU,sBAAsB,sBAAU,EAChDA,MAAC,QAAK,UAAU,UAAW,YAAiB,CAAE,GAChD,GACF,EACF,GACF,GACF,SAGCoE,EAAA,CACC,UAAApE,MAACkF,EAAA,CACC,SAAAtD,OAAC,OAAI,UAAU,oCACb,UAAAA,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC2I,EAAA,CAAS,UAAU,wBAAwB,EAC5C3I,MAACmF,EAAA,CAAU,MAAO,EAAG,+BAAmB,GAC1C,EACAnF,MAACsD,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAM6F,EAAkB,CAAC,EAClC,WAAOM,EAAA,EAAM,EACd,iBAED,EACF,EACF,EACAzJ,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OACC,UAAA5B,MAAC,QAAK,UAAU,oCAAoC,yBAAa,EACjEA,MAAC,KAAE,UAAU,4DACV,WAAM,YACT,GACF,SAEC,OACC,UAAAA,MAAC,QAAK,UAAU,oCAAoC,wBAAY,EAChEA,MAAC,KAAE,UAAU,qBACV,WAAM,YACT,GACF,GACF,EACF,GACF,EAGAA,MAACqG,GAAM,KAAK,OAAO,MAAM,kBACvB,SAAAzE,OAAC,OAAI,UAAU,gDACb,UAAAA,OAAC,OAAI,UAAU,YACb,UAAA5B,MAAC,MAAG,UAAU,cAAc,4BAAgB,EAC5C4B,OAAC,MAAG,UAAU,YACZ,UAAAA,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,8BAA8B,EAAE,wBAEzD,EACAhF,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,8BAA8B,EAAE,uBAEzD,EACAhF,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,8BAA8B,EAAE,kCAEzD,EACAhF,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,8BAA8B,EAAE,0BAEzD,GACF,GACF,EAEAhF,OAAC,OAAI,UAAU,YACb,UAAA5B,MAAC,MAAG,UAAU,cAAc,0BAAc,EAC1C4B,OAAC,MAAG,UAAU,YACZ,UAAAA,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,6BAA6B,EAAE,mBAExD,EACAhF,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,6BAA6B,EAAE,qBAExD,EACAhF,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,6BAA6B,EAAE,yBAExD,EACAhF,OAAC,MAAG,UAAU,oBACZ,UAAA5B,MAAC4G,EAAA,CAAY,UAAU,6BAA6B,EAAE,6BAExD,GACF,GACF,GACF,EACF,EAGAhF,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAACsD,EAAA,CACC,QAASqC,EACT,QAAQ,UACR,KAAK,KACL,WAAOiC,EAAA,EAAU,EAClB,sBAID5H,MAAC,OAAI,UAAU,iBACb,SAAAA,MAACsD,EAAA,CACC,QAASoC,EACT,QAAQ,UACR,KAAK,KACL,WAAOgE,GAAA,EAAS,EACjB,8BAED,CACF,GACF,GACF,CAEJ,6+BC1TA,eAAsBC,GAAmBnM,EAAwD,CAC/F,MAAMoM,EAAyB,GAGzBC,EAAc,CAClB,GAAGC,EAAwBtM,CAAM,EACjC,aAAc,CACZ,aAAc,WACd,OAAQ,UACR,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,SAAU,UAEZ,GAAIA,EAAO,WAAW,SAAS,oBAAoB,GAAK,CACtD,MAAO,UAET,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,OAAQ,SACV,CACF,EAIIuM,EAAU;AAAA;AAAA,EAEhBvM,EAAO,WAAW,SAAS,qBAAqB,EAAI,wCAA0C,EAAE;AAAA,EAChGA,EAAO,WAAW,SAAS,oBAAoB,EAAI,kCAAoC,EAAE;AAAA,EACzFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,wCAA0C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUrFA,EAAO,SAAS,SAAS,mBAAmB,EAAI,kCAAoC,EAAE;AAAA;AAAA;AAAA;AAAA,EAI1FA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjD,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,0EAEoBA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAatG,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQFA,EAAO,SAAS,SAAS,wBAAwB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,IAKnD,EAAE;AAAA,IACJA,EAAO,SAAS,SAAS,mBAAmB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,IAK9C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAqCAA,EAAO,SAAS,SAAS,wBAAwB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASnD,EAAE;AAAA;AAAA,QAEJA,EAAO,SAAS,SAAS,mBAAmB,EAAI,wWAO9C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMNA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASjD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQRA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBlD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAeJ,OAAAoM,EAAM,KACJ,CAAE,KAAM,eAAgB,QAAS,KAAK,UAAUC,EAAa,KAAM,CAAC,EAAG,KAAM,SAAU,YAAa,2CACpG,CAAE,KAAM,WAAY,QAASE,EAAS,KAAM,SAAU,YAAa,gCACnE,CAAE,KAAM,YAAa,QAASC,EAAexM,CAAM,EAAG,KAAM,gBAAiB,YAAa,yBAC1F,CAAE,KAAM,eAAgB,QAASyM,EAAmBzM,CAAM,EAAG,KAAM,SAAU,YAAa,kCAC1F,CAAE,KAAM,aAAc,QAAS0M,IAAqB,KAAM,SAAU,YAAa,mBAAmB,EAIlG1M,EAAO,SAAS,SAAS,iBAAiB,GAiB5CoM,EAAM,KAAK,CACT,KAAM,kBACN,QAlBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAmBjB,KAAM,SACN,YAAa,6BACd,EAGCpM,EAAO,SAAS,SAAS,UAAU,GA0CrCoM,EAAM,KAAK,CACT,KAAM,iBACN,QA3CgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA4ChB,KAAM,SACN,YAAa,2CACd,EAIHA,EAAM,KAAK,CACT,KAAM,aACN,QAASO,EAAmB3M,CAAM,EAClC,KAAM,SACN,YAAa,iCACd,EAEM,CACL,SAAUA,EAAO,SACjB,MAAAoM,EACA,YAAAC,EACA,OAAQG,EAAexM,CAAM,EAC7B,kBAAmB,CACjB,iCACA,+CACA,kEACA,iFACA,uDACA,gEACA,mDACA,gEAEF,cAAe,YACf,WAAY,eAEhB,CC1TA,eAAsB4M,GAAoB5M,EAAwD,CAChG,MAAMoM,EAAyB,GAGzBC,EAAc,CAClB,GAAGC,EAAwBtM,CAAM,EACjC,aAAc,CACZ,wBAAyB,UACzB,OAAQ,UACR,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,SAAU,UAEZ,GAAIA,EAAO,WAAW,SAAS,oBAAoB,GAAK,CACtD,MAAO,UAET,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,OAAQ,SACV,CACF,EAIIuM,EAAU;AAAA;AAAA,EAEhBvM,EAAO,WAAW,SAAS,qBAAqB,EAAI,wCAA0C,EAAE;AAAA,EAChGA,EAAO,WAAW,SAAS,oBAAoB,EAAI,kCAAoC,EAAE;AAAA,EACzFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,wCAA0C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOzFA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjD,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,0EAEoBA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAatG,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMOA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7BA,EAAO,SAAS,SAAS,mBAAmB,EAAI,uCAAyC,EAAE;AAAA,EAC3FA,EAAO,SAAS,SAAS,iBAAiB,EAAI,+BAAiC,EAAE;AAAA,EACjFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,2BAA6B,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO1EA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASjD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMNA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWlBA,EAAO,SAAS,SAAS,mBAAmB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM5CA,EAAO,WAAW,SAAS,oBAAoB,EAAI,0QAMjD,EAAE;AAAA;AAAA,MAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAalD,iEAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrE,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4B3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWAA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYlD,EAAE;AAAA;AAAA,MAEJA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASjD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYRA,EAAO,SAAS,SAAS,kBAAkB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsC7C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAkBJ,OAAAoM,EAAM,KACJ,CAAE,KAAM,eAAgB,QAAS,KAAK,UAAUC,EAAa,KAAM,CAAC,EAAG,KAAM,SAAU,YAAa,2CACpG,CAAE,KAAM,WAAY,QAASE,EAAS,KAAM,SAAU,YAAa,iCACnE,CAAE,KAAM,YAAa,QAASC,EAAexM,CAAM,EAAG,KAAM,gBAAiB,YAAa,yBAC1F,CAAE,KAAM,eAAgB,QAASyM,EAAmBzM,CAAM,EAAG,KAAM,SAAU,YAAa,kCAC1F,CAAE,KAAM,aAAc,QAAS0M,IAAqB,KAAM,SAAU,YAAa,mBAAmB,EAIlG1M,EAAO,SAAS,SAAS,iBAAiB,GA4B5CoM,EAAM,KAAK,CACT,KAAM,wBACN,QA7BuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA8BvB,KAAM,SACN,YAAa,6BACd,EAIHA,EAAM,KAAK,CACT,KAAM,aACN,QAASO,EAAmB3M,CAAM,EAClC,KAAM,SACN,YAAa,iCACd,EAEM,CACL,SAAUA,EAAO,SACjB,MAAAoM,EACA,YAAAC,EACA,OAAQG,EAAexM,CAAM,EAC7B,kBAAmB,CACjB,iCACA,+CACA,+DACA,wCACA,sDACA,mDACA,4CACA,qDAEF,cAAe,YACf,WAAY,QAEhB,CC3VA,eAAsB6M,GAAoB7M,EAAwD,CAChG,MAAMoM,EAAyB,GAGzBC,EAAc,CAClB,GAAGC,EAAwBtM,CAAM,EACjC,aAAc,CACZ,kBAAmB,UACnB,kBAAmB,UACnB,OAAQ,UACR,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,SAAU,UAEZ,GAAIA,EAAO,WAAW,SAAS,oBAAoB,GAAK,CACtD,MAAO,UAET,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,OAAQ,SACV,CACF,EAIIuM,EAAU;AAAA;AAAA;AAAA,EAGhBvM,EAAO,WAAW,SAAS,qBAAqB,EAAI,wCAA0C,EAAE;AAAA,EAChGA,EAAO,WAAW,SAAS,oBAAoB,EAAI,kCAAoC,EAAE;AAAA,EACzFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,wCAA0C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAO1EA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkB/CA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjD,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,0EAEoBA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBtG,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoCAA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAelD,EAAE;AAAA;AAAA,MAEJA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYjD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAiBGA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7BA,EAAO,SAAS,SAAS,mBAAmB,EAAI,uCAAyC,EAAE;AAAA,EAC3FA,EAAO,SAAS,SAAS,gBAAgB,EAAI,sCAAwC,EAAE;AAAA,EACvFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,0CAA4C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiBvFA,EAAO,SAAS,SAAS,mBAAmB,EAAI;AAAA;AAAA;AAAA;AAAA,UAI5CA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgBlD,sEAAsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1E,EAAE;AAAA;AAAA,MAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA4B3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOH;AAAA;AAAA;AAAA;AAAA,EAIHA,EAAO,SAAS,SAAS,kBAAkB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqB7C,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQvCA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAmBlD,sEAAsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ5E,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAsBJ,OAAAoM,EAAM,KACJ,CAAE,KAAM,eAAgB,QAAS,KAAK,UAAUC,EAAa,KAAM,CAAC,EAAG,KAAM,SAAU,YAAa,2CACpG,CAAE,KAAM,WAAY,QAASE,EAAS,KAAM,SAAU,YAAa,iCACnE,CAAE,KAAM,YAAa,QAASC,EAAexM,CAAM,EAAG,KAAM,gBAAiB,YAAa,yBAC1F,CAAE,KAAM,eAAgB,QAASyM,EAAmBzM,CAAM,EAAG,KAAM,SAAU,YAAa,kCAC1F,CAAE,KAAM,aAAc,QAAS0M,IAAqB,KAAM,SAAU,YAAa,mBAAmB,EAItGN,EAAM,KAAK,CACT,KAAM,wBACN,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAqCT,KAAM,SACN,YAAa,+BACd,EAGDA,EAAM,KAAK,CACT,KAAM,aACN,QAASO,EAAmB3M,CAAM,EAClC,KAAM,SACN,YAAa,iCACd,EAEM,CACL,SAAUA,EAAO,SACjB,MAAAoM,EACA,YAAAC,EACA,OAAQG,EAAexM,CAAM,EAC7B,kBAAmB,CACjB,iCACA,+CACA,qEACA,wCACA,oDACA,gEACA,iDACA,mEAEF,cAAe,YACf,WAAY,WAEhB,CCnaA,eAAsB8M,GAAiB9M,EAAwD,CAC7F,MAAMoM,EAAyB,GAGzBC,EAAc,CAClB,GAAGC,EAAwBtM,CAAM,EACjC,aAAc,CACZ,cAAe,UACf,OAAQ,UACR,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,SAAU,UAEZ,GAAIA,EAAO,WAAW,SAAS,oBAAoB,GAAK,CACtD,MAAO,UAET,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,OAAQ,SACV,CACF,EAIIuM,EAAU;AAAA;AAAA,EAEhBvM,EAAO,WAAW,SAAS,qBAAqB,EAAI,wCAA0C,EAAE;AAAA,EAChGA,EAAO,WAAW,SAAS,oBAAoB,EAAI,kCAAoC,EAAE;AAAA,EACzFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,wCAA0C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAazFA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjD,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,0EAEoBA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAetG,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAOiDA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAMXA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAOmBA,EAAO,SAAS,SAAS,mBAAmB,EAAI,8CAAkD,EAAE,GAAGA,EAAO,SAAS,SAAS,gBAAgB,EAAI,6CAAiD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMtSA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUjD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOcA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMrBA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiB7BA,EAAO,SAAS,OAAS,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQ3B,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcVA,EAAO,SAAS,SAAS,mBAAmB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAO5CA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0BlD,gEAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpE,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6C3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUAA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAalD,EAAE;AAAA;AAAA,MAEJA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAajD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYRA,EAAO,SAAS,SAAS,wBAAwB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAW/CA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMlD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOR,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,UAAU,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBrC,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,kBAAkB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiB7C,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAelD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA2BJoM,EAAM,KACJ,CAAE,KAAM,eAAgB,QAAS,KAAK,UAAUC,EAAa,KAAM,CAAC,EAAG,KAAM,SAAU,YAAa,2CACpG,CAAE,KAAM,WAAY,QAASE,EAAS,KAAM,SAAU,YAAa,8BACnE,CAAE,KAAM,YAAa,QAASC,EAAexM,CAAM,EAAG,KAAM,gBAAiB,YAAa,yBAC1F,CAAE,KAAM,eAAgB,QAASyM,EAAmBzM,CAAM,EAAG,KAAM,SAAU,YAAa,kCAC1F,CAAE,KAAM,aAAc,QAAS0M,IAAqB,KAAM,SAAU,YAAa,mBAAmB,EAItG,MAAMK,EAAc;AAAA;AAAA,eAEP/M,EAAO,WAAW;AAAA,sBACXA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAUfA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcnCA,EAAO,SAAS,SAAS,mBAAmB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,SAK7C,EAAE;AAAA,QACLA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAM1C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaHA,EAAO,SAAS,SAAS,kBAAkB,EAAI,gBAAkB,EAAE;AAAA,UACnEA,EAAO,WAAW,SAAS,qBAAqB,EAAI,gBAAkB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYxEA,EAAO,SAAS,SAAS,kBAAkB,EAAI,iBAAmB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAY5E,OAAAoM,EAAM,KAAK,CACT,KAAM,0BACN,QAASW,EACT,KAAM,SACN,YAAa,oCACd,EAGDX,EAAM,KAAK,CACT,KAAM,aACN,QAASO,EAAmB3M,CAAM,EAClC,KAAM,SACN,YAAa,iCACd,EAEM,CACL,SAAUA,EAAO,SACjB,MAAAoM,EACA,YAAAC,EACA,OAAQG,EAAexM,CAAM,EAC7B,kBAAmB,CACjB,iCACA,sDACA,gEACA,uCACA,sDACA,8DACA,uDACA,+CACA,wCACA,wDAEF,cAAe,YACf,WAAY,WAEhB,CC5gBA,eAAsBgN,GAAmBhN,EAAwD,CAC/F,MAAMoM,EAAyB,GAGzBC,EAAc,CAClB,GAAGC,EAAwBtM,CAAM,EACjC,aAAc,CACZ,iBAAkB,UAClB,OAAQ,UACR,YAAa,SACb,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,SAAU,UAEZ,GAAIA,EAAO,WAAW,SAAS,oBAAoB,GAAK,CACtD,MAAO,UAET,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,OAAQ,SACV,CACF,EAIIuM,EAAU;AAAA;AAAA;AAAA,EAGhBvM,EAAO,WAAW,SAAS,qBAAqB,EAAI,wCAA0C,EAAE;AAAA,EAChGA,EAAO,WAAW,SAAS,oBAAoB,EAAI,kCAAoC,EAAE;AAAA,EACzFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,wCAA0C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAezFA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjD,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,0EAEoBA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBtG,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAuCEA,EAAO,WAAW,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA,QAG7C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAyDJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYlD,EAAE;AAAA;AAAA,QAEJA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYjD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,QAKJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,QAK3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAkB6DA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA,+CAI5CA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ3DA,EAAO,SAAS,SAAS,iBAAiB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,MAK5C,EAAE;AAAA;AAAA,MAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA,MAG3C;AAAA;AAAA,mEAE2DA,EAAO,WAAW;AAAA,KAChF;AAAA;AAAA;AAAA,IAGDA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAQjBA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAc5C,EAAE;AAAA;AAAA,IAEJA,EAAO,SAAS,SAAS,iBAAiB,EAAI;AAAA;AAAA;AAAA,QAG1CA,EAAO,WAAW,SAAS,qBAAqB,EAAI,sPAIlD,sGAEH;AAAA;AAAA;AAAA;AAAA;AAAA,IAKD,EAAE;AAAA;AAAA,IAEJA,EAAO,WAAW,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOjCA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAc5C,EAAE;AAAA;AAAA,IAEJA,EAAO,WAAW,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAe7C,EAAE;AAAA;AAAA;AAAA,EAGNA,EAAO,SAAS,SAAS,UAAU,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BrC,EAAE;AAAA;AAAA;AAAA,EAGJA,EAAO,SAAS,SAAS,iBAAiB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,8CAKFA,EAAO,WAAW;AAAA;AAAA;AAAA,EAG5D,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAiBJ,OAAAoM,EAAM,KACJ,CAAE,KAAM,eAAgB,QAAS,KAAK,UAAUC,EAAa,KAAM,CAAC,EAAG,KAAM,SAAU,YAAa,2CACpG,CAAE,KAAM,WAAY,QAASE,EAAS,KAAM,SAAU,YAAa,gCACnE,CAAE,KAAM,YAAa,QAASC,EAAexM,CAAM,EAAG,KAAM,gBAAiB,YAAa,yBAC1F,CAAE,KAAM,eAAgB,QAASyM,EAAmBzM,CAAM,EAAG,KAAM,SAAU,YAAa,kCAC1F,CAAE,KAAM,aAAc,QAAS0M,IAAqB,KAAM,SAAU,YAAa,mBAAmB,EAIlG1M,EAAO,WAAW,SAAS,gBAAgB,GA6C7CoM,EAAM,KAAK,CACT,KAAM,mBACN,QA9CkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCA+ClB,KAAM,SACN,YAAa,+BACd,EAIHA,EAAM,KAAK,CACT,KAAM,aACN,QAASO,EAAmB3M,CAAM,EAClC,KAAM,SACN,YAAa,iCACd,EAEM,CACL,SAAUA,EAAO,SACjB,MAAAoM,EACA,YAAAC,EACA,OAAQG,EAAexM,CAAM,EAC7B,kBAAmB,CACjB,iCACA,yEACA,4CACA,oDACA,wEACA,+CACA,wCACA,uDACA,yDAEF,cAAe,YACf,WAAY,eAEhB,CCxeA,eAAsBiN,GAAgBjN,EAAwD,CAC5F,MAAMoM,EAAyB,GAGzBC,EAAc,CAClB,GAAGC,EAAwBtM,CAAM,EACjC,aAAc,CACZ,QAAS,UACT,YAAa,SACb,KAAM,SACN,OAAQ,SACR,OAAQ,UACR,KAAM,SACN,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,SAAU,UAEZ,GAAIA,EAAO,WAAW,SAAS,oBAAoB,GAAK,CACtD,MAAO,UAET,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,aAAc,SACd,SAAU,UAEZ,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,OAAQ,UAEV,GAAIA,EAAO,SAAS,SAAS,kBAAkB,GAAK,CAClD,OAAQ,eACV,CACF,EAIIkN,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjBlN,EAAO,WAAW,SAAS,qBAAqB,EAAI,wCAA0C,EAAE;AAAA,EAChGA,EAAO,WAAW,SAAS,oBAAoB,EAAI,kCAAoC,EAAE;AAAA,EACzFA,EAAO,WAAW,SAAS,qBAAqB,EAAI,uCAAyC,EAAE;AAAA,EAC/FA,EAAO,WAAW,SAAS,qBAAqB,EAAI,sCAAwC,EAAE;AAAA,EAC9FA,EAAO,SAAS,SAAS,gBAAgB,EAAI,wCAA0C,EAAE;AAAA,EACzFA,EAAO,SAAS,SAAS,kBAAkB,EAAI,oCAAsC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BvFA,EAAO,WAAW,SAAS,oBAAoB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjD,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,0EAEoBA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BtG,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlD,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,kBAAkB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsB7C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAkDEA,EAAO,WAAW,SAAS,oBAAoB,EAAI,+HAGjD,EAAE;AAAA;AAAA,QAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA,QAIlD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA+CJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA,QAIlD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,QAKJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAmBzCA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA,YAGlD,EAAE;AAAA;AAAA;AAAA,QAGN,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQRA,EAAO,SAAS,SAAS,wBAAwB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BnD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiCEA,EAAO,WAAW,SAAS,oBAAoB,EAAI,+GAGjD,EAAE;AAAA;AAAA,UAEJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMlD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaZA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kJASmGA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAchK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBlD,EAAE;AAAA;AAAA,EAEJA,EAAO,SAAS,SAAS,kBAAkB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyB7C,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW3CA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMlD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASN,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqCJoM,EAAM,KACJ,CAAE,KAAM,eAAgB,QAAS,KAAK,UAAUC,EAAa,KAAM,CAAC,EAAG,KAAM,SAAU,YAAa,2CACpG,CAAE,KAAM,YAAa,QAASa,EAAU,KAAM,SAAU,YAAa,oCACrE,CAAE,KAAM,YAAa,QAASV,EAAexM,CAAM,EAAG,KAAM,gBAAiB,YAAa,yBAC1F,CAAE,KAAM,eAAgB,QAASyM,EAAmBzM,CAAM,EAAG,KAAM,SAAU,YAAa,kCAC1F,CAAE,KAAM,aAAc,QAAS0M,IAAqB,KAAM,SAAU,YAAa,mBAAmB,EAItG,MAAMS,EAAY;AAAA;AAAA;AAAA;AAAA;AAAA,aAKPnN,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA4BbA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiLlC,OAAAoM,EAAM,KACJ,CAAE,KAAM,oBAAqB,QAASe,EAAW,KAAM,SAAU,YAAa,8BAC9E,CAAE,KAAM,mBAAoB,QA1JbgC,KAAM,SAAU,YAAa,qCAAqC,EAInHf,EAAM,KAAK,CACT,KAAM,aACN,QAASO,EAAmB3M,CAAM,EAClC,KAAM,SACN,YAAa,iCACd,EAEM,CACL,SAAUA,EAAO,SACjB,MAAAoM,EACA,YAAAC,EACA,OAAQG,EAAexM,CAAM,EAC7B,kBAAmB,CACjB,iCACA,+CACA,uDACA,6CACA,mDACA,2CACA,6CACA,uDACA,yDAEF,cAAe,YACf,WAAY,SAEhB,CChxBA,eAAsBoN,GAAYpN,EAAwD,CACxF,MAAMoM,EAAyB,GAGzBC,EAAc,CAClB,GAAGC,EAAwBtM,CAAM,EACjC,IAAK,CACH,CAACA,EAAO,YAAY,cAAc,QAAQ,cAAe,GAAG,CAAC,EAAG,gBAElE,aAAc,CACZ,UAAW,UACX,SAAU,SACV,MAAO,SACP,aAAc,SACd,IAAO,SACP,OAAQ,UACR,GAAIA,EAAO,WAAW,SAAS,qBAAqB,GAAK,CACvD,iBAAkB,WAEpB,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,OAAQ,UAEV,GAAIA,EAAO,SAAS,SAAS,gBAAgB,GAAK,CAChD,WAAY,UACd,CACF,EAIIqN,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAgBLrN,EAAO,YAAY,cAAc,QAAQ,cAAe,GAAG,CAAC;AAAA,kBACrDA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAc0BA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgG9EA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkD3C,EAAE;AAAA;AAAA,EAEJA,EAAO,WAAW,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+B7C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcAA,EAAO,SAAS,SAAS,mBAAmB,EAAI,qEAAuE,EAAE;AAAA,MACzHA,EAAO,SAAS,SAAS,iBAAiB,EAAI,+DAAiE,EAAE;AAAA,MACjHA,EAAO,SAAS,SAAS,gBAAgB,EAAI,4DAA8D,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA+C3GA,EAAO,SAAS,SAAS,mBAAmB,EAAI,wDAA0D,EAAE;AAAA,QAC5GA,EAAO,SAAS,SAAS,iBAAiB,EAAI,mDAAqD,EAAE;AAAA,QACrGA,EAAO,SAAS,SAAS,gBAAgB,EAAI,2CAA6C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmC9FA,EAAO,SAAS,SAAS,mBAAmB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAY9C,EAAE;AAAA;AAAA,MAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAwB3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMH;AAAA;AAAA;AAAA;AAAA,kBAMHoM,EAAM,KACJ,CAAE,KAAM,eAAgB,QAAS,KAAK,UAAUC,EAAa,KAAM,CAAC,EAAG,KAAM,SAAU,YAAa,yCACpG,CAAE,KAAM,aAAc,QAASgB,EAAO,KAAM,SAAU,YAAa,oCACnE,CAAE,KAAM,YAAa,QAASb,EAAexM,CAAM,EAAG,KAAM,gBAAiB,YAAa,yBAC1F,CAAE,KAAM,eAAgB,QAASyM,EAAmBzM,CAAM,EAAG,KAAM,SAAU,YAAa,kCAC1F,CAAE,KAAM,aAAc,QAAS0M,IAAqB,KAAM,SAAU,YAAa,mBAAmB,EAItG,MAAMY,EAAgB;AAAA,EACtBtN,EAAO,WAAW,SAAS,qBAAqB,EAAI,0CAA4C,EAAE;AAAA,EAClGA,EAAO,SAAS,SAAS,gBAAgB,EAAI,wCAA0C,EAAE;AAAA,EACzFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,mCAAqC,EAAE;AAAA,EACpFA,EAAO,SAAS,SAAS,gBAAgB,EAAI,qCAAuC,EAAE;AAAA;AAAA;AAAA;AAAA,MAIlFA,EAAO,WAAW,SAAS,qBAAqB,EAAI,4BAA8B,iDAAiD;AAAA,MACnIA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA,MAI3C,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaJA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA;AAAA;AAAA;AAAA,KAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMCA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA;AAAA,KAGH;AAAA;AAAA;AAAA,IAGDA,EAAO,SAAS,SAAS,mBAAmB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAyB9C,EAAE;AAAA;AAAA,IAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAQiDA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAa9G,EAAE;AAAA;AAAA,IAEJA,EAAO,WAAW,SAAS,gBAAgB,EAAI;AAAA;AAAA,MAE7CA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBH;AAAA;AAAA,IAEC,EAAE;AAAA;AAAA,IAEJA,EAAO,SAAS,SAAS,gBAAgB,EAAI;AAAA;AAAA,MAE3CA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA;AAAA;AAAA,KAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAeCA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA;AAAA;AAAA;AAAA,KAKH;AAAA;AAAA,IAEC,EAAE;AAAA;AAAA;AAAA,+BAMAuN,EAAmB,GAAGvN,EAAO,WAAW,SAAS,qBAAqB,EAAI,0CAA4C,EAAE;AAAA;AAAA;AAAA;AAAA,MAI1HA,EAAO,WAAW,SAAS,qBAAqB,EAAI,4BAA8B,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAa9GA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA,KAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMCA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA,KAEH;AAAA;AAAA;AAAA;AAAA,MAICA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA;AAAA,KAGH;AAAA;AAAA;AAAA;AAAA,MAICA,EAAO,WAAW,SAAS,qBAAqB,EAAI;AAAA;AAAA,MAElD;AAAA;AAAA;AAAA;AAAA;AAAA,KAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAaH,OAAAoM,EAAM,KACJ,CAAE,KAAM,qBAAsB,QAASkB,EAAe,KAAM,SAAU,YAAa,iCACnF,CAAE,KAAM,wBAAyB,QAASC,EAAkB,KAAM,SAAU,YAAa,mCAAmC,EAI1HvN,EAAO,WAAW,SAAS,qBAAqB,GAwMlDoM,EAAM,KAAK,CACT,KAAM,kBACN,QAzMimCA0MjB,KAAM,SACN,YAAa,6BACd,EAIHA,EAAM,KAAK,CACT,KAAM,aACN,QAASO,EAAmB3M,CAAM,EAClC,KAAM,SACN,YAAa,iCACd,EAEM,CACL,SAAUA,EAAO,SACjB,MAAAoM,EACA,YAAAC,EACA,OAAQG,EAAexM,CAAM,EAC7B,kBAAmB,CACjB,iCACA,+CACA,uDACA,uDACA,sEACA,sDACA,iDACA,qDACA,0CAEF,cAAe,YACf,WAAY,QAEhB,CCx1BA,eAAsBwN,GAAiBC,EAA+D,CACpG,GAAI,CAACA,EAAc,SACjB,MAAM,IAAI,MAAM,8CAA8C,EAahE,MAAMC,EAVa,CACjB,aAAcvB,GACd,mBAAoBS,GACpB,eAAgBC,GAChB,aAAcC,GACd,cAAeE,GACf,WAAYC,GACZ,gBAAiBG,EAAA,EAGUK,EAAc,QAAQ,EACnD,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,oCAAoCD,EAAc,QAAQ,EAAE,EAG9E,GAAI,CAEF,OADiB,MAAMC,EAAUD,CAAa,CAEhD,OAAS3L,EAAO,CACd,cAAQ,MAAM,6BAA8BA,CAAK,EAC3C,IAAI,MAAM,gCAAgCA,aAAiB,MAAQA,EAAM,QAAU,eAAe,EAAE,CAC5G,CACF,CAGO,SAASwK,EAAwBtM,EAA4B,CAClE,MAAO,CACL,KAAMA,EAAO,YAAY,cAAc,QAAQ,cAAe,GAAG,EACjE,QAAS,QACT,YAAaA,EAAO,YACpB,KAAM,WACN,QAAS,CACP,MAAO,gBACP,IAAK,mBACL,KAAM,OACN,KAAM,WACN,WAAY,kBAEd,SAAU,CAAC,OAAQ,MAAO,qBAAsBA,EAAO,QAAQ,EAC/D,OAAQ,GACR,QAAS,MACT,gBAAiB,CACf,QAAS,SACT,OAAQ,UACR,KAAM,UACN,cAAe,UACf,WAAY,SACd,CAEJ,CAEO,SAASwM,EAAexM,EAAoC,CACjE,KAAM,CAAE,YAAA2N,EAAa,YAAAhM,EAAa,SAAAN,EAAU,WAAAC,EAAY,SAAAC,GAAavB,EAErE,MAAO,KAAK2N,CAAW;AAAA;AAAA,EAEvBhM,CAAW;AAAA;AAAA;AAAA,MAGPN,CAAQ;AAAA;AAAA;AAAA,EAGZC,EAAW,OAAS,EAAI;AAAA;AAAA,EAExBA,EAAW,IAAIrC,GAAK,KAAKA,EAAE,QAAQ,IAAK,GAAG,EAAE,QAAQ,QAASH,GAAKA,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK;AAAA,CAAI,CAAC;AAAA,EAC/F,EAAE;AAAA;AAAA,EAEJyC,EAAS,OAAS,EAAI;AAAA;AAAA,EAEtBA,EAAS,IAAI5C,GAAK,KAAKA,EAAE,QAAQ,IAAK,GAAG,EAAE,QAAQ,QAASG,GAAKA,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK;AAAA,CAAI,CAAC;AAAA,EAC7F,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2BJ6O,CAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAmCb,CAEO,SAASlB,EAAmBzM,EAAoC,CACrE,KAAM,CAAE,SAAAqB,EAAU,WAAAC,EAAY,SAAAC,CAAA,EAAavB,EAE3C,IAAI4N,EAAa,KAAK5N,EAAO,WAAW;AAAA;AAAA,EAGxC,OAAQqB,EAAA,CACN,IAAK,aACHuM,GAAc;AAAA;AAAA;AAAA;AAAA,EACd,MACF,IAAK,mBACHA,GAAc;AAAA;AAAA;AAAA,EACd,MACF,IAAK,aACHA,GAAc;AAAA;AAAA;AAAA;AAAA,EACd,MACF,IAAK,cACHA,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACd,MACF,QACEA,GAAc;AAAA;AAAA;AAAA,EAIlB,OAAItM,EAAW,SAAS,qBAAqB,IAC3CsM,GAAc;AAAA,yCAAoE5N,EAAO,YAAY,aAAa;AAAA;AAAA,2DAAoFA,EAAO,YAAY,aAAa;AAAA;AAAA,IAIpOsB,EAAW,SAAS,oBAAoB,GAAKA,EAAW,SAAS,gBAAgB,KACnFsM,GAAc;AAAA;AAAA;AAAA,GAIZtM,EAAW,SAAS,gBAAgB,IACtCsM,GAAc;AAAA;AAAA;AAAA;AAAA,GAIZtM,EAAW,SAAS,gBAAgB,IACtCsM,GAAc;AAAA;AAAA;AAAA;AAAA,GAIZrM,EAAS,SAAS,gBAAgB,IACpCqM,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIZrM,EAAS,SAAS,UAAU,IAC9BqM,GAAc;AAAA;AAAA;AAAA;AAAA,GAIhBA,GAAc;AAAA;AAAA;AAAA,EAEPA,CACT,CAEO,SAASlB,GAA4B,CAC1C,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CA0DT,CAEO,SAASC,EAAmB3M,EAAoC,CACrE,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAeQA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA,eAGlCA,EAAO,YAAY,aAAa;AAAA,OACxCA,EAAO,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAYvC,CCpSA,MAAM6N,GAAqC,CAAC,CAAE,OAAA3F,EAAQ,WAAAC,EAAY,UAAAlF,KAAgB,CAChF,KAAM,CAAE,MAAArC,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EACrB,CAACqL,EAAYC,CAAa,EAAI/K,WAAS,EAAK,EAC5C,CAAClB,EAAOkM,CAAQ,EAAIhL,WAAwB,IAAI,EAChD,CAACiL,EAAaC,CAAc,EAAIlL,WAAsB,IAAI,GAAK,EAErET,YAAU,IAAM,CACT3B,EAAM,mBACTuN,EAAA,CAEJ,EAAG,EAAE,EAEL,MAAMA,EAAiB,SAAY,CACjCJ,EAAc,EAAI,EAClBC,EAAS,IAAI,EACb5M,EAAQ,WAAW,EAAI,EAEvB,GAAI,CACF,MAAMW,EAAW,MAAMyL,GAAiB,CACtC,SAAU5M,EAAM,SAChB,WAAYA,EAAM,WAClB,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,WAAYA,EAAM,WAClB,YAAaA,EAAM,YACnB,YAAaA,EAAM,YACpB,EAEDQ,EAAQ,qBAAqBW,CAAQ,EACrCX,EAAQ,iBAAiB,CAAC,CAC5B,OAASgN,EAAK,CACZ,MAAMC,EAAeD,aAAe,MAAQA,EAAI,QAAU,8BAC1DJ,EAASK,CAAY,EACrBjN,EAAQ,SAASiN,CAAY,CAC/B,SACEN,EAAc,EAAK,EACnB3M,EAAQ,WAAW,EAAK,CAC1B,CACF,EAEMkN,EAAoB,SAAY,CACpC,GAAK1N,EAAM,kBAEX,GAAI,CAEF,MAAM2N,GAAS,MAAAC,GAAA,wBAAAC,CAAA,OAAM,QAAO,yBAAO,OAAAzP,OAAA,kBAAAyP,CAAA,4BAAG,QAChCC,EAAM,IAAIH,EAGhB3N,EAAM,kBAAkB,MAAM,QAAQ+N,GAAQ,CAC5CD,EAAI,KAAKC,EAAK,KAAMA,EAAK,OAAO,CAClC,CAAC,EAGD,MAAMC,EAAU,MAAMF,EAAI,cAAc,CAAE,KAAM,OAAQ,EAClDG,EAAM,OAAO,IAAI,gBAAgBD,CAAO,EACxCxP,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOyP,EACTzP,EAAE,SAAW,GAAGwB,EAAM,YAAY,cAAc,QAAQ,cAAe,GAAG,CAAC,OAC3E,SAAS,KAAK,YAAYxB,CAAC,EAC3BA,EAAE,QACF,SAAS,KAAK,YAAYA,CAAC,EAC3B,OAAO,IAAI,gBAAgByP,CAAG,CAChC,OAAS/M,EAAO,CACd,QAAQ,MAAM,mBAAoBA,CAAK,EACvC,MAAM,oCAAoC,CAC5C,CACF,EAEMgN,EAAiB,MAAOH,GAAc,CAC1C,GAAI,CACF,MAAM,UAAU,UAAU,UAAUA,EAAK,OAAO,EAChDT,EAAea,GAAQ,IAAI,IAAIA,CAAI,EAAE,IAAIJ,EAAK,IAAI,CAAC,EAGnD,WAAW,IAAM,CACfT,EAAea,GAAQ,CACrB,MAAMC,EAAS,IAAI,IAAID,CAAI,EAC3B,OAAAC,EAAO,OAAOL,EAAK,IAAI,EAChBK,CACT,CAAC,CACH,EAAG,GAAI,CACT,OAASlN,EAAO,CACd,QAAQ,MAAM,eAAgBA,CAAK,EACnC,MAAM,2CAA2C,CACnD,CACF,EAEMmN,EAAgB,SAAY,CAChC,GAAKrO,EAAM,kBAEX,GAAI,CACF,MAAMsO,EAAatO,EAAM,kBAAkB,MACxC,IAAI+N,GAAQ,YAAYA,EAAK,IAAI;AAAA,EAAKA,EAAK,OAAO,EAAE,EACpD,KAAK;AAAA;AAAA,KAAY,IAAI,OAAO,EAAE,EAAI;AAAA;AAAA,CAAM,EAE3C,MAAM,UAAU,UAAU,UAAUO,CAAU,EAC9C,MAAM,gCAAgC,CACxC,OAASpN,EAAO,CACd,QAAQ,MAAM,mBAAoBA,CAAK,EACvC,MAAM,sDAAsD,CAC9D,CACF,EAEMqN,EAAerG,GAAiB,CACpC,OAAQA,EAAA,CACN,IAAK,SAAU,OAAOtG,MAAC4M,GAAA,CAAQ,UAAU,UAAU,EACnD,IAAK,SAAU,OAAO5M,MAAC2I,EAAA,CAAS,UAAU,UAAU,EACpD,IAAK,gBAAiB,OAAO3I,MAAC2I,EAAA,CAAS,UAAU,UAAU,EAC3D,IAAK,SAAU,OAAO3I,MAAC6M,GAAA,CAAK,UAAU,UAAU,EAChD,QAAS,OAAO7M,MAAC2I,EAAA,CAAS,UAAU,UAAU,EAElD,EAEMmE,EAAoBxG,GAAiB,CACzC,OAAQA,EAAA,CACN,IAAK,SAAU,MAAO,gBACtB,IAAK,SAAU,MAAO,iBACtB,IAAK,gBAAiB,MAAO,kBAC7B,IAAK,SAAU,MAAO,kBACtB,QAAS,MAAO,gBAEpB,EAEA,GAAIgF,GAAc7K,EAChB,OACEmB,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,oCAEtD,EACAA,MAAC,KAAE,UAAU,wBAAwB,qFAErC,GACF,EAEAA,MAAC,OAAI,UAAU,sBACb,eAAC,OAAI,UAAU,oEAAoE,EACrF,EAEA4B,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAAC,KAAE,0CAA8B,EACjC4B,OAAC,KAAE,UAAU,eAAe,wBAAYxD,EAAM,SAAS,kBAAgBA,EAAM,WAAW,OAAO,mBAAiBA,EAAM,SAAS,OAAO,aAAS,GACjJ,GACF,EAIJ,GAAIkB,EACF,OACEsC,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC,OAAI,UAAU,mBACb,SAAAA,MAAC,MAAG,UAAU,wCAAwC,6BAEtD,EACF,EAEA4B,OAACyE,EAAA,CAAM,KAAK,QAAQ,MAAM,mBACxB,UAAArG,MAAC,KAAG,SAAAV,CAAA,CAAM,EACVU,MAAC,OAAI,UAAU,OACb,SAAAA,MAACsD,EAAA,CAAO,QAASqI,EAAgB,QAAQ,UAAU,qBAEnD,EACF,GACF,EAEA/J,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAACsD,EAAA,CAAO,QAASqC,EAAY,QAAQ,UAAU,KAAK,KAAK,KAAM3F,MAAC4H,EAAA,EAAU,EAAI,0BAE9E,QACC,QAAI,GACP,GACF,EAIJ,MAAMrI,EAAWnB,EAAM,kBACvB,OAAKmB,EAGHqC,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,mCAEtD,EACA4B,OAAC,KAAE,UAAU,wBAAwB,wCACPrC,EAAS,SAAS,4CAChD,GACF,EAGAqC,OAAC,OAAI,UAAU,6CACb,UAAA5B,MAACoE,EAAA,CACC,SAAAxC,OAAC4D,EAAA,CAAY,UAAU,cACrB,UAAAxF,MAAC,OAAI,UAAU,2CACZ,SAAAT,EAAS,MAAM,OAClB,EACAS,MAAC,OAAI,UAAU,wBAAwB,2BAAe,GACxD,EACF,EAEAA,MAACoE,EAAA,CACC,SAAAxC,OAAC4D,EAAA,CAAY,UAAU,cACrB,UAAAxF,MAAC,OAAI,UAAU,yCACZ,SAAAT,EAAS,cACZ,EACAS,MAAC,OAAI,UAAU,wBAAwB,gCAAoB,GAC7D,EACF,EAEAA,MAACoE,EAAA,CACC,SAAAxC,OAAC4D,EAAA,CAAY,UAAU,cACrB,UAAAxF,MAAC,OAAI,UAAU,qDACZ,SAAAT,EAAS,WACZ,EACAS,MAAC,OAAI,UAAU,wBAAwB,4BAAgB,GACzD,EACF,GACF,SAGCoE,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAlF,MAACmF,EAAA,CAAU,MAAO,EAAG,kCAAsB,EAC3CnF,MAACuF,GAAgB,2EAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,uBACb,UAAA5B,MAACsD,EAAA,CACC,QAASwI,EACT,QAAQ,UACR,KAAK,KACL,WAAOiB,EAAA,EAAS,EACjB,+BAID/M,MAACsD,EAAA,CACC,QAASmJ,EACT,QAAQ,UACR,KAAK,KACL,WAAOO,GAAA,EAAK,EACb,2BAED,EACF,EACF,GACF,SAGC5I,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAtD,OAACuD,EAAA,CAAU,MAAO,EAAG,8BAAkB5F,EAAS,MAAM,OAAO,KAAC,EAC9DS,MAACuF,GAAgB,wDAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAAxF,MAAC,OAAI,UAAU,YACZ,SAAAT,EAAS,MAAM,IAAI,CAAC4M,EAAMnJ,IACzBpB,OAAC,OAAgB,UAAU,oDACzB,UAAAA,OAAC,OAAI,UAAU,yDACb,UAAAA,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC,OAAI,UAAW8M,EAAiBX,EAAK,IAAI,EACvC,SAAAQ,EAAYR,EAAK,IAAI,EACxB,SACC,OACC,UAAAnM,MAAC,OAAI,UAAU,gCAAiC,SAAAmM,EAAK,KAAK,EAC1DnM,MAAC,OAAI,UAAU,wBAAyB,WAAK,YAAY,GAC3D,GACF,EAEA4B,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC,QAAK,UAAW,yCACfmM,EAAK,OAAS,SAAW,4BACzBA,EAAK,OAAS,SAAW,8BACzBA,EAAK,OAAS,gBAAkB,gCAChC,2BACF,GACG,WAAK,KACR,EAEAnM,MAACsD,EAAA,CACC,QAAS,IAAMgJ,EAAeH,CAAI,EAClC,QAAQ,QACR,KAAK,KACL,KAAMV,EAAY,IAAIU,EAAK,IAAI,EAAInM,MAAC4G,EAAA,EAAY,EAAK5G,MAACgN,GAAA,EAAK,EAE1D,SAAAvB,EAAY,IAAIU,EAAK,IAAI,EAAI,UAAY,QAC5C,EACF,GACF,EAEAnM,MAAC,OAAI,UAAU,MACb,SAAAA,MAAC,OAAI,UAAU,yEACb,SAAAA,MAAC,QAAM,SAAAmM,EAAK,QAAQ,EACtB,EACF,IArCQnJ,CAsCV,CACD,EACH,EACF,GACF,SAGCoB,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAlF,MAACmF,EAAA,CAAU,MAAO,EAAG,8BAAkB,EACvCnF,MAACuF,GAAgB,sEAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAAxF,MAAC,OAAI,UAAU,YACZ,SAAAT,EAAS,kBAAkB,IAAI,CAAC0N,EAAajK,IAC5CpB,OAAC,OAAgB,UAAU,6BACzB,UAAA5B,MAAC,OAAI,UAAU,kHACZ,SAAAgD,EAAQ,EACX,EACAhD,MAAC,KAAE,UAAU,wBAAyB,SAAAiN,CAAA,CAAY,IAJ1CjK,CAKV,CACD,EACH,EACF,GACF,EAGAhD,MAACqG,GAAM,KAAK,UAAU,MAAM,mCAC1B,SAAAzE,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,KAAE,kBAAMrC,EAAS,SAAS,oDAAgD,EAC3EqC,OAAC,OAAI,UAAU,UACb,UAAA5B,MAAC,UAAO,4BAAgB,EACxB4B,OAAC,MAAG,UAAU,uCACZ,UAAA5B,MAAC,MAAG,4DAAgD,EACpDA,MAAC,MAAG,qDAAyC,EAC7CA,MAAC,MAAG,oCAAwB,EAC5BA,MAAC,MAAG,8CAAkC,EACtCA,MAAC,MAAG,oDAAwC,GAC9C,GACF,GACF,EACF,EAGA4B,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAACsD,EAAA,CACC,QAASqC,EACT,QAAQ,UACR,KAAK,KACL,WAAOiC,EAAA,EAAU,EAClB,4BAID5H,MAAC,OAAI,UAAU,iBACb,SAAAA,MAACsD,EAAA,CACC,QAASoC,EACT,QAAQ,UACR,KAAK,KACN,8BAED,CACF,GACF,GACF,EA7LoB,IA+LxB,ECjXMwH,GAAsC,CAAC,CAAE,OAAAxH,EAAQ,WAAAC,EAAY,QAAAwH,KAAc,CAC/E,KAAM,CAAE,MAAA/O,CAAA,EAAU6B,EAAA,EACZ,CAACmN,EAAWC,CAAY,EAAI7M,WAAS,CAAC,EACtC,CAAC8M,EAAWC,CAAY,EAAI/M,WAAS,EAAK,EAC1C,CAACgN,EAAMC,CAAO,EAAIjN,WAAmB,EAAE,EACvC,CAACkN,EAAeC,CAAgB,EAAInN,WAAS,EAAK,EAElDjB,EAAWnB,EAAM,kBACvB,GAAI,CAACmB,EAAU,OAAO,KAEtB,MAAMqO,EAAa,CACjB,CAAE,KAAM,oBAAqB,QAAS,SAASxP,EAAM,WAAW,GAAI,YAAa,4BACjF,CAAE,KAAM,gBAAiB,QAAS,gCAAiC,YAAa,+BAChF,CAAE,KAAM,uBAAwB,QAAS,cAAe,YAAa,6BACrE,CAAE,KAAM,oBAAqB,QAAS,uBAAwB,YAAa,2BAC3E,CAAE,KAAM,sBAAuB,QAAS,kBAAmB,YAAa,iCACxE,CAAE,KAAM,gBAAiB,QAAS,gBAAiB,YAAa,yBAChE,CAAE,KAAM,eAAgB,QAAS,WAAY,YAAa,oBAAoB,EAG1EyP,EAAS,CAACC,EAAiBxH,EAAqC,SAAW,CAE/E,MAAMyH,EAAW,IADC,IAAI,OAAO,oBACC,KAAKD,CAAO,GAC1CL,EAAQlB,GAAQ,CAAC,GAAGA,EAAMwB,CAAQ,CAAC,CACrC,EAEMC,EAAoB,MAAO5O,GAAmC,CAClE,MAAMoD,EAAcoL,EAAWxO,CAAI,EAUnC,OATAyO,EAAO,aAAarL,EAAY,IAAI,GAAI,MAAM,EAC9CqL,EAAO,YAAYrL,EAAY,OAAO,GAAI,MAAM,EAGhD,MAAM,IAAI,QAAQyL,GAAW,WAAWA,EAAS,IAAO,KAAK,SAAW,GAAI,CAAC,EAG7D,KAAK,SAAW,IAG9BJ,EAAO,gBAAgBrL,EAAY,IAAI,GAAI,SAAS,EAC7C,KAEPqL,EAAO,aAAarL,EAAY,IAAI,GAAI,OAAO,EACxC,GAEX,EAEM0L,EAAuB,SAAY,CACvC,GAAI,CAAAZ,EAEJ,CAAAC,EAAa,EAAI,EACjBE,EAAQ,EAAE,EACVI,EAAO,8BAA+B,MAAM,EAE5C,GAAI,CACF,QAASM,EAAI,EAAGA,EAAIP,EAAW,OAAQO,IAIrC,GAHAd,EAAac,CAAC,EAGV,CAFY,MAAMH,EAAkBG,CAAC,EAE3B,CACZN,EAAO,4DAA6D,OAAO,EAC3EN,EAAa,EAAK,EAClB,MACF,CAGFM,EAAO,6CAA8C,SAAS,EAC9DF,EAAiB,EAAI,CAEvB,OAASrO,EAAO,CACduO,EAAO,gBAAgBvO,CAAK,GAAI,OAAO,CACzC,SACEiO,EAAa,EAAK,CACpB,EACF,EAEMa,EAAoB,IAAM,CAE9B,MAAMC,EAAc9O,EAAS,kBAC1B,IAAI,CAAC0N,EAAajK,IAAU,UAAUA,EAAQ,CAAC,KAAKiK,CAAW,EAAE,EACjE,KAAK;AAAA,CAAI,EAENqB,EAAO,IAAI,KAAK,CAAC;AAAA;AAAA,+BAA+ClQ,EAAM,WAAW;AAAA;AAAA,EAAOiQ,CAAW;AAAA,CAAI,EAAG,CAC9G,KAAM,aACP,EAEKhC,EAAM,IAAI,gBAAgBiC,CAAI,EAC9B1R,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOyP,EACTzP,EAAE,SAAW,WACb,SAAS,KAAK,YAAYA,CAAC,EAC3BA,EAAE,QACF,SAAS,KAAK,YAAYA,CAAC,EAC3B,IAAI,gBAAgByP,CAAG,CACzB,EAEA,OACEzK,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,OAAI,UAAU,mBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,2BAEtD,EACA4B,OAAC,KAAE,UAAU,wBAAwB,gCACfrC,EAAS,SAAS,mFACxC,GACF,EAGAqC,OAAC,OAAI,UAAU,6CACb,UAAAA,OAACwC,EAAA,CAAK,UAAU,WACd,UAAAxC,OAACsD,EAAA,CACC,UAAAtD,OAACuD,EAAA,CAAU,MAAO,EAAG,UAAU,8BAC7B,UAAAnF,MAACuO,GAAA,CAAS,UAAU,2BAA2B,EAC/CvO,MAAC,QAAK,2BAAe,GACvB,EACAA,MAACuF,GAAgB,yEAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,wBACb,UAAA5B,MAAC,KAAE,UAAU,OAAO,sBAAU,EAC9B4B,OAAC,MAAG,UAAU,YACZ,UAAA5B,MAAC,MAAG,gDAAoC,EACxCA,MAAC,MAAG,sCAA0B,EAC9BA,MAAC,MAAG,yCAA6B,EACjCA,MAAC,MAAG,wCAA4B,GAClC,GACF,EAEAA,MAACqG,GAAM,KAAK,OACV,eAAC,KAAE,UAAU,UAAU,2GAEvB,EACF,EAEArG,MAACsD,EAAA,CACC,QAAS4K,EACT,SAAUZ,EACV,QAAQ,UACR,UAAS,GACT,KAAMA,EAAYtN,MAACwO,GAAA,EAAM,QAAM3B,GAAA,EAAK,EACpC,QAASS,EAER,WAAY,gBAAkB,yBACjC,EACF,EACF,GACF,SAEClJ,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAtD,OAACuD,EAAA,CAAU,MAAO,EAAG,UAAU,8BAC7B,UAAAnF,MAAC+M,EAAA,CAAS,UAAU,wBAAwB,EAC5C/M,MAAC,QAAK,wBAAY,GACpB,EACAA,MAACuF,GAAgB,8DAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,wBACb,UAAA5B,MAAC,KAAE,UAAU,OAAO,qCAAyB,EAC7C4B,OAAC,MAAG,UAAU,YACZ,UAAA5B,MAAC,MAAG,8CAAkC,EACtCA,MAAC,MAAG,yCAA6B,EACjCA,MAAC,MAAG,6CAAiC,EACrCA,MAAC,MAAG,8CAAkC,GACxC,GACF,EAEA4B,OAAC,OAAI,UAAU,YACb,UAAA5B,MAACsD,EAAA,CACC,QAAS8K,EACT,QAAQ,UACR,UAAS,GACT,WAAOrB,EAAA,EAAS,EACjB,mCAID/M,MAACsD,EAAA,CACC,QAAQ,QACR,UAAS,GACT,WAAOmL,GAAA,EAAa,EACpB,QAAS,IAAM,OAAO,KAAK,gBAAgBlP,EAAS,QAAQ,OAAQ,QAAQ,EAC7E,wCAED,EACF,GACF,EACF,GACF,GACF,GAGE+N,GAAaE,EAAK,OAAS,WAC1BpJ,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAlF,MAACmF,EAAA,CAAU,MAAO,EAAG,0BAAc,QAClCI,EAAA,CACE,SAAA+H,EAAY,sBAAwBI,EAAgB,mBAAqB,gBAC5E,GACF,SACClI,EAAA,CAEC,UAAA5D,OAAC,OAAI,UAAU,OACb,UAAAA,OAAC,OAAI,UAAU,+DACb,UAAA5B,MAAC,QAAK,oBAAQ,SACb,QAAM,UAAAsN,EAAYF,EAAY,EAAIM,EAAgBE,EAAW,OAASR,EAAY,EAAE,OAAKQ,EAAW,QAAO,GAC9G,EAEA5N,MAAC,OAAI,UAAU,YACZ,SAAA4N,EAAW,IAAI,CAACxO,EAAM4D,IACrBpB,OAAC,OAAgB,UAAU,8BACzB,UAAA5B,MAAC,OAAI,UAAW,2EACdgD,EAAQoK,EAAY,0BACpBpK,IAAUoK,GAAaE,EAAY,0CACnCtK,IAAUoK,GAAaM,EAAgB,0BACvC,2BACF,GACG,SAAA1K,EAAQoK,GAAaM,EAAgB1N,MAAC4G,EAAA,CAAY,UAAU,UAAU,EAAK5D,EAAQ,EACtF,EACApB,OAAC,OAAI,UAAU,SACb,UAAA5B,MAAC,OAAI,UAAW,uBACdgD,GAASoK,EAAY,gBAAkB,eACzC,GACG,SAAAhO,EAAK,KACR,EACAY,MAAC,OAAI,UAAW,WACdgD,GAASoK,EAAY,gBAAkB,eACzC,GACG,SAAAhO,EAAK,YACR,GACF,IApBQ4D,CAqBV,CACD,EACH,GACF,EAGApB,OAAC,OAAI,UAAU,uFACZ,UAAA4L,EAAK,SAAW,GAAK,CAACF,SACpB,OAAI,UAAU,gBAAgB,0CAA8B,EAE9DE,EAAK,IAAI,CAACkB,EAAK1L,IACdhD,MAAC,OAAgB,UAAU,sBACxB,SAAA0O,CAAA,EADO1L,CAEV,CACD,EACAsK,GACC1L,OAAC,OAAI,UAAU,8BACb,UAAA5B,MAAC,OAAI,UAAU,kDAAkD,EACjEA,MAAC,QAAK,sBAAU,GAClB,GAEJ,GACF,GACF,EAID0N,GACC1N,MAACqG,EAAA,CAAM,KAAK,UAAU,MAAM,kBAC1B,SAAAzE,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,KAAE,kBAAMrC,EAAS,SAAS,0CAAsC,EACjEqC,OAAC,OAAI,UAAU,UACb,UAAA5B,MAAC,UAAO,yBAAa,EACrB4B,OAAC,MAAG,UAAU,uCACZ,UAAA5B,MAAC,MAAG,qCAAyB,EAC7BA,MAAC,MAAG,sCAA0B,EAC9BA,MAAC,MAAG,kCAAsB,EAC1BA,MAAC,MAAG,8CAAkC,EACtCA,MAAC,MAAG,mCAAuB,GAC7B,GACF,QACC,OAAI,UAAU,kCACb,SAAA4B,OAAC,KAAE,UAAU,yBACX,UAAA5B,MAAC,UAAO,uBAAW,EAAS,uFAC9B,EACF,GACF,EACF,SAIDoE,EAAA,CACC,UAAApE,MAACkF,GACC,SAAAlF,MAACmF,EAAA,CAAU,MAAO,EAAG,sBAAU,EACjC,EACAnF,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,gDACb,UAAAA,OAAC,OACC,UAAA5B,MAAC,MAAG,UAAU,iCAAiC,0BAAc,EAC7D4B,OAAC,MAAG,UAAU,0BACZ,UAAA5B,MAAC,MAAG,kDAAsC,EAC1CA,MAAC,MAAG,sDAA0C,EAC9CA,MAAC,MAAG,wCAA4B,EAChCA,MAAC,MAAG,uCAA2B,GACjC,GACF,SACC,OACC,UAAAA,MAAC,MAAG,UAAU,iCAAiC,sBAAU,EACzD4B,OAAC,MAAG,UAAU,0BACZ,UAAA5B,MAAC,MAAG,oCAAwB,EAC5BA,MAAC,MAAG,8BAAkB,EACtBA,MAAC,MAAG,6BAAiB,EACrBA,MAAC,MAAG,6BAAiB,GACvB,GACF,GACF,EACF,GACF,EAGA4B,OAAC,OAAI,UAAU,4BACb,UAAA5B,MAACsD,EAAA,CACC,QAASqC,EACT,QAAQ,UACR,KAAK,KACL,WAAOiC,EAAA,EAAU,EAClB,2BAIDhG,OAAC,OAAI,UAAU,iBACZ,UAAAuL,GACCnN,MAACsD,EAAA,CACC,QAASoC,EACT,QAAQ,QACR,KAAK,KACN,wBAKH1F,MAACsD,EAAA,CACC,QAASoC,EACT,QAAQ,UACR,KAAK,KACL,SAAU4H,EAET,WAAgB,WAAa,sBAChC,EACF,GACF,GACF,CAEJ,EC9VMqB,GAAqC,CAAC,CAAE,WAAAhJ,KAAiB,CAC7D,KAAM,CAAE,MAAAvH,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EAErBV,EAAWnB,EAAM,kBACvB,GAAI,CAACmB,EAAU,OAAO,KAEtB,MAAMqP,EAAkB,IAAM,CAC5BhQ,EAAQ,aACV,EAEMiQ,EAAwB,IAAM,CAClC,MAAMC,EAAU,CACd,YAAa1Q,EAAM,YACnB,YAAaA,EAAM,YACnB,SAAUA,EAAM,SAChB,WAAYA,EAAM,WAClB,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,WAAYA,EAAM,WAClB,cAAemB,EAAS,cACxB,WAAYA,EAAS,MAAM,OAC3B,kBAAmBA,EAAS,kBAC5B,YAAa,IAAI,OAAO,aAAY,EAGhC+O,EAAO,IAAI,KAAK,CAAC,KAAK,UAAUQ,EAAS,KAAM,CAAC,CAAC,EAAG,CACxD,KAAM,mBACP,EAEKzC,EAAM,IAAI,gBAAgBiC,CAAI,EAC9B1R,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOyP,EACTzP,EAAE,SAAW,GAAGwB,EAAM,WAAW,gBACjC,SAAS,KAAK,YAAYxB,CAAC,EAC3BA,EAAE,QACF,SAAS,KAAK,YAAYA,CAAC,EAC3B,IAAI,gBAAgByP,CAAG,CACzB,EAEM0C,EAAe,CACnB,CAAE,KAAM,KAAM,MAAO,oBAAqB,YAAa,SAASxP,EAAS,QAAQ,IACjF,CAAE,KAAM,IAAK,MAAO,iBAAkB,YAAa,cAAcnB,EAAM,WAAW,MAAM,eACxF,CAAE,KAAM,IAAK,MAAO,iBAAkB,YAAa,YAAYA,EAAM,SAAS,MAAM,aACpF,CAAE,KAAM,MAAO,MAAO,qBAAsB,YAAa,GAAGA,EAAM,UAAU,qBAC5E,CAAE,KAAM,KAAM,MAAO,qBAAsB,YAAa,GAAGmB,EAAS,MAAM,MAAM,kBAChF,CAAE,KAAM,KAAM,MAAO,kBAAmB,YAAa,uCAAuC,EAGxFyP,EAAY,CAChB,CACE,MAAO,oBACP,YAAa,oEACb,KAAMhP,MAACiP,GAAA,CAAS,UAAU,UAAU,EACpC,OAAQ,sBAEV,CACE,MAAO,0BACP,YAAa,gEACb,KAAMjP,MAACkP,GAAA,CAAc,UAAU,UAAU,EACzC,OAAQ,kBAEV,CACE,MAAO,uBACP,YAAa,4DACb,KAAMlP,MAACyO,GAAA,CAAa,UAAU,UAAU,EACxC,OAAQ,iBACV,EAGIU,EAAY,CAChB,CACE,MAAO,gBACP,YAAa,4DACb,IAAK,WAEP,CACE,MAAO,YACP,YAAa,sDACb,IAAK,cAEP,CACE,MAAO,WACP,YAAa,8CACb,IAAK,aAEP,CACE,MAAO,UACP,YAAa,mDACb,IAAK,WACP,EAGF,OACEvN,OAAC,OAAI,UAAU,8BAEb,UAAAA,OAAC,OAAI,UAAU,cACb,UAAA5B,MAAC,OAAI,UAAU,oFACb,eAAC4G,EAAA,CAAY,UAAU,qBAAqB,EAC9C,EACA5G,MAAC,MAAG,UAAU,wCAAwC,+BAEtD,EACA4B,OAAC,KAAE,UAAU,6BAA6B,kBACnC5B,MAAC,QAAK,UAAU,iCAAkC,WAAM,YAAY,EAAO,6CAClF,EACA4B,OAAC,KAAE,UAAU,gBAAgB,wCACCrC,EAAS,SAAS,8CAChD,GACF,QAGC,OAAI,UAAU,uDACZ,SAAAwP,EAAa,IAAI,CAACK,EAAapM,IAC9BhD,MAACoE,GAAiB,UAAU,cAC1B,SAAAxC,OAAC4D,EAAA,CAAY,UAAU,OACrB,UAAAxF,MAAC,OAAI,UAAU,gBAAiB,SAAAoP,EAAY,KAAK,EACjDpP,MAAC,MAAG,UAAU,mCAAoC,WAAY,MAAM,EACpEA,MAAC,KAAE,UAAU,wBAAyB,WAAY,YAAY,GAChE,GALSgD,CAMX,CACD,EACH,SAGCoB,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAlF,MAACmF,EAAA,CAAU,MAAO,EAAG,2BAAe,EACpCnF,MAACuF,GAAgB,qEAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAA5D,OAAC,OAAI,UAAU,wCACb,UAAAA,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OACC,UAAA5B,MAAC,MAAG,UAAU,oCAAoC,oCAAwB,EAC1E4B,OAAC,OAAI,UAAU,uCACb,UAAAA,OAAC,KAAE,UAAA5B,MAAC,UAAO,qBAAS,EAAS,IAAET,EAAS,UAAS,SAChD,KAAE,UAAAS,MAAC,UAAO,uBAAW,EAAS,IAAE5B,EAAM,YAAW,SACjD,KAAE,UAAA4B,MAAC,UAAO,sBAAU,EAAS,IAAE5B,EAAM,UAAS,SAC9C,KAAE,UAAA4B,MAAC,UAAO,uBAAW,EAAS,IAAET,EAAS,eAAc,GAC1D,GACF,SAEC,OACC,UAAAS,MAAC,MAAG,UAAU,oCAAoC,4BAAgB,EAClE4B,OAAC,OAAI,UAAU,uCACb,UAAAA,OAAC,KAAE,UAAA5B,MAAC,UAAO,wBAAY,EAAS,IAAET,EAAS,MAAM,QAAO,SACvD,KAAE,UAAAS,MAAC,UAAO,yBAAa,EAAS,IAAET,EAAS,MAAM,UAAYpD,EAAE,OAAS,QAAQ,EAAE,QAAO,SACzF,KAAE,UAAA6D,MAAC,UAAO,yBAAa,EAAS,IAAET,EAAS,MAAM,UAAYpD,EAAE,OAAS,QAAQ,EAAE,QAAO,SACzF,KAAE,UAAA6D,MAAC,UAAO,0BAAc,EAAS,IAAET,EAAS,MAAM,UAAYpD,EAAE,OAAS,eAAe,EAAE,QAAO,GACpG,GACF,GACF,EAEAyF,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OACC,UAAA5B,MAAC,MAAG,UAAU,oCAAoC,2BAAe,EACjEA,MAAC,OAAI,UAAU,iBACZ,SAAA5B,EAAM,WAAW,IAAKiJ,GACrBrH,MAAC,QAAoB,UAAU,mFAC5B,SAAAqH,EAAS,QAAQ,IAAK,GAAG,EAAE,QAAQ,QAAS/K,GAAKA,EAAE,aAAa,GADxD+K,CAEX,CACD,EACH,GACF,EAECjJ,EAAM,SAAS,OAAS,UACtB,OACC,UAAA4B,MAAC,MAAG,UAAU,oCAAoC,+BAAmB,EACrEA,MAAC,OAAI,UAAU,iBACZ,SAAA5B,EAAM,SAAS,IAAK4J,GACnBhI,MAAC,QAAmB,UAAU,+EAC3B,SAAAgI,EAAQ,QAAQ,IAAK,GAAG,EAAE,QAAQ,QAAS1L,GAAKA,EAAE,aAAa,GADvD0L,CAEX,CACD,EACH,GACF,GAEJ,GACF,EACF,GACF,SAGC5D,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAlF,MAACmF,EAAA,CAAU,MAAO,EAAG,wBAAY,EACjCnF,MAACuF,GAAgB,kEAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAAxF,MAAC,OAAI,UAAU,YACZ,SAAAgP,EAAU,IAAI,CAAC5P,EAAM4D,IACpBpB,OAAC,OAAgB,UAAU,oFACzB,UAAA5B,MAAC,OAAI,UAAU,sGACZ,SAAAZ,EAAK,KACR,EACAwC,OAAC,OAAI,UAAU,SACb,UAAA5B,MAAC,MAAG,UAAU,4BAA6B,SAAAZ,EAAK,MAAM,EACtDY,MAAC,KAAE,UAAU,6BAA8B,WAAK,YAAY,GAC9D,QACC,OAAI,UAAU,gBACb,SAAA4B,OAAC,QAAK,UAAU,uCAAwC,UAAAxC,EAAK,OAAO,MAAE,EACxE,IAVQ4D,CAWV,CACD,EACH,EACF,GACF,SAGCoB,EAAA,CACC,UAAAxC,OAACsD,EAAA,CACC,UAAAlF,MAACmF,EAAA,CAAU,MAAO,EAAG,+BAAmB,EACxCnF,MAACuF,GAAgB,iEAEjB,GACF,EACAvF,MAACwF,EAAA,CACC,SAAAxF,MAAC,OAAI,UAAU,wCACZ,SAAAmP,EAAU,IAAI,CAACE,EAAUrM,IACxBpB,OAAC,OAAgB,UAAU,oGACzB,UAAA5B,MAACiP,GAAA,CAAS,UAAU,wBAAwB,SAC3C,OACC,UAAAjP,MAAC,MAAG,UAAU,4BAA6B,SAAAqP,EAAS,MAAM,EAC1DrP,MAAC,KAAE,UAAU,wBAAyB,WAAS,YAAY,GAC7D,IALQgD,CAMV,CACD,EACH,EACF,GACF,EAGApB,OAAC,OAAI,UAAU,8DACb,UAAA5B,MAACsD,EAAA,CACC,QAASuL,EACT,QAAQ,UACR,KAAK,KACL,WAAO9B,EAAA,EAAS,EACjB,sCAID/M,MAACsD,EAAA,CACC,QAASsL,EACT,QAAQ,UACR,KAAK,KACL,WAAOU,GAAA,EAAO,EACf,mCAED,EACF,QAGClL,EAAA,CAAK,UAAU,iEACd,SAAAxC,OAAC4D,EAAA,CAAY,UAAU,mBACrB,UAAAxF,MAAC0H,GAAA,CAAK,UAAU,yCAAyC,EACzD1H,MAAC,MAAG,UAAU,uCAAuC,4CAAgC,EACrFA,MAAC,KAAE,UAAU,qBAAqB,oIAGlC,EACA4B,OAAC,OAAI,UAAU,gCACb,UAAA5B,MAACsD,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,KAAMtD,MAACuP,GAAA,EAAO,EAAI,0BAEtD,EACAvP,MAACsD,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,KAAMtD,MAACkP,GAAA,EAAc,EAAI,0BAE7D,GACF,GACF,EACF,EAGAtN,OAAC,OAAI,UAAU,oCACb,UAAA5B,MAAC,KAAE,iFAAqE,EACxEA,MAAC,KAAE,UAAU,OAAO,8FAAkF,GACxG,GACF,CAEJ,ECjRMwP,GAA+B,IAAM,CACzC,KAAM,CAAE,MAAApR,EAAO,QAAAQ,CAAA,EAAYqB,EAAA,EAErBwP,EAAa,IAAM,CACJ7Q,EAAQ,sBACZ,SACbA,EAAQ,UAEZ,EAEM8Q,EAAiB,IAAM,CAC3B9Q,EAAQ,cACV,EAEM+Q,EAAa,IAAM,EAEnBvR,EAAM,cAAgB,GAAKA,EAAM,cAAgB,IACnDQ,EAAQ,UAEZ,EAEMgR,EAAmBxQ,GAAiB,CACpCR,EAAQ,YAAYQ,CAAI,GAC1BR,EAAQ,SAASQ,CAAI,CAEzB,EAEMyQ,EAAoB,IAAM,CAC9B,MAAMC,EAAc,CAClB,OAAQL,EACR,WAAYC,EACZ,OAAQC,EACR,UAAWvR,EAAM,UACjB,QAASA,EAAM,cAAgB,GAAKA,EAAM,cAAgB,GAG5D,OAAQA,EAAM,aACZ,IAAK,GACH,OAAO4B,MAACyF,GAAA,CAAe,GAAGqK,CAAA,CAAa,EACzC,IAAK,GACH,OAAO9P,MAACmH,GAAA,CAAiB,GAAG2I,CAAA,CAAa,EAC3C,IAAK,GACH,OAAO9P,MAAC6H,GAAA,CAAe,GAAGiI,CAAA,CAAa,EACzC,IAAK,GACH,OAAO9P,MAACsI,GAAA,CAAoB,GAAGwH,CAAA,CAAa,EAC9C,IAAK,GACH,OAAO9P,MAAC8I,GAAA,CAAa,GAAGgH,CAAA,CAAa,EACvC,IAAK,GACH,OAAO9P,MAACqL,GAAA,CAAe,GAAGyE,CAAA,CAAa,EACzC,IAAK,GACH,OAAO9P,MAACkN,GAAA,CAAgB,GAAG4C,CAAA,CAAa,EAC1C,IAAK,GACH,OAAO9P,MAAC2O,GAAA,CAAe,GAAGmB,CAAA,CAAa,EACzC,QACE,OAAO9P,MAACyF,GAAA,CAAe,GAAGqK,CAAA,CAAa,EAE7C,EAEM,CAAE,KAAAxP,CAAA,EAASmB,EAAA,EAEjB,aACG,OAAI,UAAU,oDACb,SAAAG,OAAC,OAAI,UAAU,oBAEb,UAAAA,OAAC,OAAI,UAAU,wCACb,UAAAA,OAAC,OAAI,UAAU,qBACb,UAAA5B,MAAC,MAAG,UAAU,wCAAwC,2CAEtD,EACAA,MAAC,KAAE,UAAU,0CAA0C,4HAGvD,GACF,QACC,OAAI,UAAU,OACb,SAAAA,MAAC+B,KAAY,EACf,GACF,EAGCzB,SACE,OAAI,UAAU,wDACb,SAAAsB,OAAC,OAAI,UAAU,oBACb,UAAA5B,MAAC,OAAI,UAAU,gBACb,SAAAA,MAAC,OAAI,UAAU,wBAAwB,KAAK,eAAe,QAAQ,YACjE,SAAAA,MAAC,QAAK,SAAS,UAAU,EAAE,mIAAmI,SAAS,UAAU,EACnL,EACF,QACC,OAAI,UAAU,OACb,SAAA4B,OAAC,KAAE,UAAU,wBAAwB,2BACrB5B,MAAC,QAAK,UAAU,cAAe,WAAK,KAAK,EAAO,8FAChE,EACF,GACF,EACF,EAIFA,MAAC,OAAI,UAAU,OACb,SAAAA,MAACuC,GAAA,CACC,YAAanE,EAAM,YACnB,WAAYL,GACZ,eAAgBK,EAAM,eACtB,YAAawR,EACb,SAAUxR,EAAM,YAEpB,EAGCA,EAAM,OACL4B,MAAC,OAAI,UAAU,OACb,SAAAA,MAAC,OAAI,UAAU,iDACb,SAAA4B,OAAC,OAAI,UAAU,OACb,UAAA5B,MAAC,OAAI,UAAU,gBACb,SAAAA,MAAC,OAAI,UAAU,uBAAuB,QAAQ,YAAY,KAAK,eAC7D,SAAAA,MAAC,QAAK,SAAS,UAAU,EAAE,0NAA0N,SAAS,UAAU,EAC1Q,EACF,EACA4B,OAAC,OAAI,UAAU,OACb,UAAA5B,MAAC,MAAG,UAAU,mCAAmC,iBAEjD,EACAA,MAAC,OAAI,UAAU,4BACZ,WAAM,MACT,EACAA,MAAC,OAAI,UAAU,OACb,SAAAA,MAAC,UACC,KAAK,SACL,QAAS,IAAMpB,EAAQ,SAAS,IAAI,EACpC,UAAU,sDACX,oBAED,CACF,GACF,GACF,EACF,EACF,EAIFoB,MAAC,OAAI,UAAU,oCACZ,aACH,EAGA4B,OAAC,OAAI,UAAU,yCACb,UAAA5B,MAAC,KAAE,yGAGH,EACA4B,OAAC,OAAI,UAAU,iBACb,UAAA5B,MAAC,KAAE,KAAK,IAAI,UAAU,sBAAsB,yBAAa,QACxD,KAAE,KAAK,IAAI,UAAU,sBAAsB,oBAAQ,QACnD,KAAE,KAAK,IAAI,UAAU,sBAAsB,kBAAM,QACjD,KAAE,KAAK,IAAI,UAAU,sBAAsB,mBAAO,GACrD,GACF,GACF,EACF,CAEJ,EC3KA,SAAS+P,IAAM,CACb,OACE/P,MAACK,GAAA,CACC,SAAAL,MAAC6B,GAAA,CACC,eAACrD,GAAA,CACC,SAAAwB,MAAC,OAAI,UAAU,MACb,SAAAA,MAACwP,GAAA,EAAmB,EACtB,EACF,EACF,EACF,CAEJ,CCdAQ,GAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,aACnDC,GAAM,WAAN,CACC,SAAAjQ,MAAC+P,KAAI,EACP,CACF","names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","PLATFORMS","PLATFORM_OPTIONS","key","config","PRIORITY_OPTIONS","FEATURE_OPTIONS","TEAM_SIZE_OPTIONS","COMPLEXITY_OPTIONS","VALIDATION_RULES","STEPS","TOTAL_STEPS","STORAGE_KEYS","initialConfiguration","initialState","wizardReducer","state","action","WizardContext","createContext","WizardProvider","children","dispatch","useReducer","actions","platform","priorities","features","teamSize","complexity","name","description","step","loading","error","solution","nextStep","errors","dataToSave","stored","parsedData","timestamp","stateData","useEffect","jsx","useWizard","context","useContext","AuthContext","AuthProvider","user","setUser","useState","isLoading","setIsLoading","checkAuthStatus","handleOAuthCallback","token","response","userData","urlParams","code","exchangeCodeForToken","storedState","data","value","clientId","redirectUri","authUrl","useAuth","LoginPage","login","jsxs","PrivateRoute","isAuthenticated","UserProfile","logout","isDropdownOpen","setIsDropdownOpen","Fragment","r","o","clsx","Stepper","currentStep","totalSteps","completedSteps","onStepClick","disabled","getStepStatus","stepNumber","canClickStep","index","status","isClickable","Check","ChevronRight","_a","Button","variant","size","icon","iconPosition","fullWidth","className","props","baseStyles","variants","sizes","iconSizes","isDisabled","Loader2","Card","padding","shadow","border","hover","selected","onClick","paddingStyles","shadowStyles","borderStyles","hoverStyles","selectedStyles","clickableStyles","disabledStyles","CardHeader","CardTitle","level","Tag","sizeStyles","CardDescription","CardContent","Step1Platform","onNext","onPrevious","handlePlatformSelect","validation","option","platformConfig","isSelected","Clock","Zap","Users","req","Alert","type","title","dismissible","onDismiss","icons","Info","CheckCircle","AlertCircle","XCircle","styles","Icon","style","X","Step2Priorities","handlePriorityToggle","priority","currentPriorities","selectedCount","minCount","maxCount","Star","canSelect","ArrowLeft","Step3Features","onSkip","handleFeatureToggle","feature","currentFeatures","handleSelectAll","supportedFeatures","handleClearAll","isSupported","Step4Configuration","handleTeamSizeSelect","handleComplexitySelect","handleProjectNameChange","handleDescriptionChange","FileText","opt","_b","Step5Review","selectedPriorities","selectedFeatures","teamSizeOption","complexityOption","handleEditSection","getEstimatedTime","baseHours","featureMultiplier","teamMultiplier","totalHours","Edit3","Settings","generateDiscordBot","files","packageJson","generateBasePackageJson","indexJs","generateReadme","generateEnvExample","generateGitignore","generateDockerfile","generateTelegramBot","generateWhatsAppBot","generateSlackApp","appManifest","generateTwitterBot","generateWebChat","serverJs","indexHtml","generateCLI","cliJs","chatManagerJs","sessionManagerJs","generateSolution","configuration","generator","projectName","envContent","Step6Generate","generating","setGenerating","setError","copiedFiles","setCopiedFiles","handleGenerate","err","errorMessage","handleDownloadZip","JSZip","__vitePreload","__vite_default__","zip","file","content","url","handleCopyFile","prev","newSet","handleCopyAll","allContent","getFileIcon","Package","Play","getFileTypeColor","Download","Copy","instruction","Step7AutoSetup","canSkip","setupStep","setSetupStep","isRunning","setIsRunning","logs","setLogs","setupComplete","setSetupComplete","setupSteps","addLog","message","logEntry","simulateSetupStep","resolve","handleStartAutoSetup","i","handleManualSetup","setupScript","blob","Terminal","Pause","ExternalLink","log","Step8Complete","handleStartOver","handleDownloadSummary","summary","achievements","nextSteps","BookOpen","MessageSquare","resources","achievement","resource","Repeat","Github","ChatManagerBuilder","handleNext","handlePrevious","handleSkip","handleStepClick","renderCurrentStep","commonProps","App","ReactDOM","React"],"ignoreList":[0,1,2,9],"sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react-dom/client.js","../../src/types/constants.ts","../../src/contexts/WizardContext.tsx","../../src/components/auth/AuthProvider.tsx","../../src/components/auth/LoginPage.tsx","../../src/components/auth/PrivateRoute.tsx","../../src/components/layout/UserProfile.tsx","../../../node_modules/clsx/dist/clsx.mjs","../../src/components/shared/Stepper.tsx","../../src/components/shared/Button.tsx","../../src/components/shared/Card.tsx","../../src/components/steps/Step1Platform.tsx","../../src/components/shared/Alert.tsx","../../src/components/steps/Step2Priorities.tsx","../../src/components/steps/Step3Features.tsx","../../src/components/steps/Step4Configuration.tsx","../../src/components/steps/Step5Review.tsx","../../src/generators/discord.ts","../../src/generators/telegram.ts","../../src/generators/whatsapp.ts","../../src/generators/slack.ts","../../src/generators/twitter.ts","../../src/generators/webchat.ts","../../src/generators/cli.ts","../../src/generators/index.ts","../../src/components/steps/Step6Generate.tsx","../../src/components/steps/Step7AutoSetup.tsx","../../src/components/steps/Step8Complete.tsx","../../src/components/ChatManagerBuilder.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { PlatformConfig, SelectionOption, Platform, Priority, Feature, TeamSize, Complexity } from './index';\n\n// Platform configurations\nexport const PLATFORMS: Record<Platform, PlatformConfig> = {\n  'discord-js': {\n    name: 'discord-js',\n    displayName: 'Discord Bot',\n    icon: '🎮',\n    description: 'Build Discord bots with powerful slash commands and server management',\n    requirements: ['Node.js 16+', 'Discord Developer Account', 'Bot Token'],\n    estimatedTime: '2-4 hours',\n    complexity: 'intermediate',\n    supportedFeatures: ['conversation-branching', 'context-awareness', 'custom-commands', 'webhooks', 'ai-integration'],\n    defaultPriorities: ['session-management', 'real-time-sync', 'error-handling']\n  },\n  'telegram-bot-api': {\n    name: 'telegram-bot-api',\n    displayName: 'Telegram Bot',\n    icon: '✈️',\n    description: 'Create Telegram bots with inline keyboards and file handling',\n    requirements: ['Node.js 16+', 'Telegram Bot Token from @BotFather'],\n    estimatedTime: '1-3 hours',\n    complexity: 'basic',\n    supportedFeatures: ['file-attachments', 'custom-commands', 'ai-integration', 'multi-language'],\n    defaultPriorities: ['message-persistence', 'session-management']\n  },\n  'whatsapp-web': {\n    name: 'whatsapp-web',\n    displayName: 'WhatsApp Bot',\n    icon: '📱',\n    description: 'WhatsApp automation using web interface',\n    requirements: ['Node.js 16+', 'Chrome/Chromium', 'WhatsApp Account'],\n    estimatedTime: '3-5 hours',\n    complexity: 'advanced',\n    supportedFeatures: ['file-attachments', 'context-awareness', 'backup-restore'],\n    defaultPriorities: ['message-persistence', 'session-management', 'error-handling', 'scalability']\n  },\n  'slack-bolt': {\n    name: 'slack-bolt',\n    displayName: 'Slack App',\n    icon: '💼',\n    description: 'Enterprise Slack applications with Bolt framework',\n    requirements: ['Node.js 16+', 'Slack App Configuration', 'Workspace Admin Access'],\n    estimatedTime: '4-6 hours',\n    complexity: 'advanced',\n    supportedFeatures: ['conversation-branching', 'context-awareness', 'custom-commands', 'webhooks', 'ai-integration'],\n    defaultPriorities: ['user-authentication', 'real-time-sync', 'scalability']\n  },\n  'twitter-api': {\n    name: 'twitter-api',\n    displayName: 'Twitter Bot',\n    icon: '🐦',\n    description: 'Twitter automation and engagement bot',\n    requirements: ['Node.js 16+', 'Twitter Developer Account', 'API Keys'],\n    estimatedTime: '2-4 hours',\n    complexity: 'intermediate',\n    supportedFeatures: ['ai-integration'],\n    defaultPriorities: ['error-handling']\n  },\n  'web-chat': {\n    name: 'web-chat',\n    displayName: 'Web Chat Widget',\n    icon: '💬',\n    description: 'Embeddable web chat interface with real-time messaging',\n    requirements: ['Node.js 16+', 'Socket.io', 'Web Server'],\n    estimatedTime: '4-8 hours',\n    complexity: 'expert',\n    supportedFeatures: ['conversation-branching', 'context-awareness', 'multi-language', 'file-attachments', 'ai-integration', 'backup-restore'],\n    defaultPriorities: ['real-time-sync', 'user-authentication', 'message-persistence', 'scalability']\n  },\n  'cli-interface': {\n    name: 'cli-interface',\n    displayName: 'CLI Tool',\n    icon: '⌨️',\n    description: 'Command-line interface for chat session management',\n    requirements: ['Node.js 16+', 'Terminal/Command Prompt'],\n    estimatedTime: '1-2 hours',\n    complexity: 'basic',\n    supportedFeatures: ['custom-commands', 'backup-restore', 'context-awareness'],\n    defaultPriorities: ['session-management', 'error-handling']\n  }\n};\n\n// Selection options for different steps\nexport const PLATFORM_OPTIONS: SelectionOption<Platform>[] = Object.entries(PLATFORMS).map(([key, config]) => ({\n  value: key as Platform,\n  label: config.displayName,\n  description: config.description,\n  icon: config.icon\n}));\n\nexport const PRIORITY_OPTIONS: SelectionOption<Priority>[] = [\n  {\n    value: 'message-persistence',\n    label: 'Message Persistence',\n    description: 'Store and retrieve chat messages reliably',\n    icon: '💾',\n    recommended: true\n  },\n  {\n    value: 'session-management',\n    label: 'Session Management',\n    description: 'Handle user sessions and context switching',\n    icon: '🔄',\n    recommended: true\n  },\n  {\n    value: 'user-authentication',\n    label: 'User Authentication',\n    description: 'Secure user identification and authorization',\n    icon: '🔐'\n  },\n  {\n    value: 'real-time-sync',\n    label: 'Real-time Sync',\n    description: 'Live message synchronization across clients',\n    icon: '⚡',\n    recommended: true\n  },\n  {\n    value: 'error-handling',\n    label: 'Error Handling',\n    description: 'Robust error recovery and logging',\n    icon: '🚦'\n  },\n  {\n    value: 'error-handling',\n    label: 'Error Handling',\n    description: 'Robust error recovery and reporting',\n    icon: '🛡️',\n    recommended: true\n  },\n  {\n    value: 'scalability',\n    label: 'Scalability',\n    description: 'Handle increasing load and users',\n    icon: '📈'\n  }\n];\n\nexport const FEATURE_OPTIONS: SelectionOption<Feature>[] = [\n  {\n    value: 'conversation-branching',\n    label: 'Conversation Branching',\n    description: 'Support multiple conversation threads',\n    icon: '🌳'\n  },\n  {\n    value: 'context-awareness',\n    label: 'Context Awareness',\n    description: 'Remember conversation history and context',\n    icon: '🧠'\n  },\n  {\n    value: 'multi-language',\n    label: 'Multi-language Support',\n    description: 'International language support',\n    icon: '🌍'\n  },\n  {\n    value: 'file-attachments',\n    label: 'File Attachments',\n    description: 'Upload and share files in conversations',\n    icon: '📎'\n  },\n  {\n    value: 'custom-commands',\n    label: 'Custom Commands',\n    description: 'Define custom bot commands and responses',\n    icon: '⚙️'\n  },\n  {\n    value: 'webhooks',\n    label: 'Webhooks Integration',\n    description: 'Connect with external services via webhooks',\n    icon: '🔗'\n  },\n  {\n    value: 'ai-integration',\n    label: 'AI Integration',\n    description: 'Integrate with AI services for smart responses',\n    icon: '🤖'\n  },\n  {\n    value: 'backup-restore',\n    label: 'Backup & Restore',\n    description: 'Data backup and recovery capabilities',\n    icon: '💿'\n  }\n];\n\nexport const TEAM_SIZE_OPTIONS: SelectionOption<TeamSize>[] = [\n  {\n    value: 'solo',\n    label: 'Solo Developer',\n    description: 'Individual developer working alone',\n    icon: '👤'\n  },\n  {\n    value: 'small',\n    label: 'Small Team (2-5)',\n    description: 'Small development team',\n    icon: '👥'\n  },\n  {\n    value: 'medium',\n    label: 'Medium Team (6-15)',\n    description: 'Medium-sized development team',\n    icon: '👨‍👩‍👧‍👦'\n  },\n  {\n    value: 'large',\n    label: 'Large Team (16-50)',\n    description: 'Large development organization',\n    icon: '🏢'\n  },\n  {\n    value: 'enterprise',\n    label: 'Enterprise (50+)',\n    description: 'Enterprise-level organization',\n    icon: '🏙️'\n  }\n];\n\nexport const COMPLEXITY_OPTIONS: SelectionOption<Complexity>[] = [\n  {\n    value: 'basic',\n    label: 'Basic',\n    description: 'Simple setup with essential features',\n    icon: '🟢'\n  },\n  {\n    value: 'intermediate',\n    label: 'Intermediate',\n    description: 'Moderate complexity with additional features',\n    icon: '🟡'\n  },\n  {\n    value: 'advanced',\n    label: 'Advanced',\n    description: 'Complex setup with enterprise features',\n    icon: '🟠'\n  },\n  {\n    value: 'expert',\n    label: 'Expert',\n    description: 'Full-featured, production-ready solution',\n    icon: '🔴'\n  }\n];\n\n// Validation rules\nexport const VALIDATION_RULES = {\n  PRIORITIES: {\n    MIN: 2,\n    MAX: 4\n  },\n  FEATURES: {\n    MIN: 0,\n    MAX: 8\n  },\n  PROJECT_NAME: {\n    MIN_LENGTH: 3,\n    MAX_LENGTH: 50,\n    PATTERN: /^[a-zA-Z0-9\\-_\\s]+$/\n  },\n  DESCRIPTION: {\n    MIN_LENGTH: 10,\n    MAX_LENGTH: 500\n  }\n};\n\n// Step configuration\nexport const STEPS = [\n  { id: 1, title: 'Platform', description: 'Choose your chat platform' },\n  { id: 2, title: 'Priorities', description: 'Select key priorities' },\n  { id: 3, title: 'Features', description: 'Pick desired features' },\n  { id: 4, title: 'Configuration', description: 'Set team & complexity' },\n  { id: 5, title: 'Review', description: 'Review your choices' },\n  { id: 6, title: 'Generate', description: 'Get your solution' },\n  { id: 7, title: 'Setup', description: 'Auto-setup (optional)' },\n  { id: 8, title: 'Complete', description: 'You\\'re all set!' }\n];\n\nexport const TOTAL_STEPS = STEPS.length;\n\n// Local storage keys\nexport const STORAGE_KEYS = {\n  CONFIGURATION: 'chat-mgmt-config',\n  WIZARD_STATE: 'chat-mgmt-wizard-state',\n  ANALYTICS: 'chat-mgmt-analytics'\n} as const;\n\n// API endpoints (for future backend integration)\nexport const API_ENDPOINTS = {\n  GENERATE: '/api/generate',\n  VALIDATE: '/api/validate',\n  DOWNLOAD: '/api/download',\n  SETUP: '/api/setup'\n} as const;","import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { WizardState, BuildConfiguration, GeneratedSolution, AppError } from '@/types';\nimport { STORAGE_KEYS, TOTAL_STEPS } from '@/types/constants';\n\n// Initial state\nconst initialConfiguration: BuildConfiguration = {\n  platform: null,\n  priorities: [],\n  features: [],\n  teamSize: null,\n  complexity: null,\n  projectName: '',\n  description: ''\n};\n\nconst initialState: WizardState = {\n  ...initialConfiguration,\n  currentStep: 1,\n  completedSteps: [],\n  isLoading: false,\n  error: null,\n  generatedSolution: null\n};\n\n// Action types\ntype WizardAction =\n  | { type: 'SET_PLATFORM'; payload: WizardState['platform'] }\n  | { type: 'SET_PRIORITIES'; payload: WizardState['priorities'] }\n  | { type: 'SET_FEATURES'; payload: WizardState['features'] }\n  | { type: 'SET_TEAM_SIZE'; payload: WizardState['teamSize'] }\n  | { type: 'SET_COMPLEXITY'; payload: WizardState['complexity'] }\n  | { type: 'SET_PROJECT_NAME'; payload: string }\n  | { type: 'SET_DESCRIPTION'; payload: string }\n  | { type: 'SET_CURRENT_STEP'; payload: number }\n  | { type: 'ADD_COMPLETED_STEP'; payload: number }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'SET_GENERATED_SOLUTION'; payload: GeneratedSolution | null }\n  | { type: 'RESET_WIZARD' }\n  | { type: 'LOAD_FROM_STORAGE'; payload: Partial<WizardState> };\n\n// Reducer function\nfunction wizardReducer(state: WizardState, action: WizardAction): WizardState {\n  switch (action.type) {\n    case 'SET_PLATFORM':\n      return { ...state, platform: action.payload };\n    \n    case 'SET_PRIORITIES':\n      return { ...state, priorities: action.payload };\n    \n    case 'SET_FEATURES':\n      return { ...state, features: action.payload };\n    \n    case 'SET_TEAM_SIZE':\n      return { ...state, teamSize: action.payload };\n    \n    case 'SET_COMPLEXITY':\n      return { ...state, complexity: action.payload };\n    \n    case 'SET_PROJECT_NAME':\n      return { ...state, projectName: action.payload };\n    \n    case 'SET_DESCRIPTION':\n      return { ...state, description: action.payload };\n    \n    case 'SET_CURRENT_STEP':\n      return { ...state, currentStep: action.payload };\n    \n    case 'ADD_COMPLETED_STEP':\n      if (!state.completedSteps.includes(action.payload)) {\n        return {\n          ...state,\n          completedSteps: [...state.completedSteps, action.payload].sort()\n        };\n      }\n      return state;\n    \n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    \n    case 'SET_GENERATED_SOLUTION':\n      return { ...state, generatedSolution: action.payload };\n    \n    case 'RESET_WIZARD':\n      return initialState;\n    \n    case 'LOAD_FROM_STORAGE':\n      return { ...state, ...action.payload };\n    \n    default:\n      return state;\n  }\n}\n\n// Context interface\ninterface WizardContextType {\n  state: WizardState;\n  actions: {\n    setPlatform: (platform: WizardState['platform']) => void;\n    setPriorities: (priorities: WizardState['priorities']) => void;\n    setFeatures: (features: WizardState['features']) => void;\n    setTeamSize: (teamSize: WizardState['teamSize']) => void;\n    setComplexity: (complexity: WizardState['complexity']) => void;\n    setProjectName: (name: string) => void;\n    setDescription: (description: string) => void;\n    setCurrentStep: (step: number) => void;\n    addCompletedStep: (step: number) => void;\n    setLoading: (loading: boolean) => void;\n    setError: (error: string | null) => void;\n    setGeneratedSolution: (solution: GeneratedSolution | null) => void;\n    resetWizard: () => void;\n    nextStep: () => void;\n    previousStep: () => void;\n    goToStep: (step: number) => void;\n    canGoToStep: (step: number) => boolean;\n    validateCurrentStep: () => { isValid: boolean; errors: string[] };\n    saveToStorage: () => void;\n    loadFromStorage: () => void;\n  };\n}\n\n// Create context\nconst WizardContext = createContext<WizardContextType | undefined>(undefined);\n\n// Provider component\ninterface WizardProviderProps {\n  children: ReactNode;\n}\n\nexport function WizardProvider({ children }: WizardProviderProps) {\n  const [state, dispatch] = useReducer(wizardReducer, initialState);\n\n  // Actions\n  const actions = {\n    setPlatform: (platform: WizardState['platform']) => \n      dispatch({ type: 'SET_PLATFORM', payload: platform }),\n    \n    setPriorities: (priorities: WizardState['priorities']) =>\n      dispatch({ type: 'SET_PRIORITIES', payload: priorities }),\n    \n    setFeatures: (features: WizardState['features']) =>\n      dispatch({ type: 'SET_FEATURES', payload: features }),\n    \n    setTeamSize: (teamSize: WizardState['teamSize']) =>\n      dispatch({ type: 'SET_TEAM_SIZE', payload: teamSize }),\n    \n    setComplexity: (complexity: WizardState['complexity']) =>\n      dispatch({ type: 'SET_COMPLEXITY', payload: complexity }),\n    \n    setProjectName: (name: string) =>\n      dispatch({ type: 'SET_PROJECT_NAME', payload: name }),\n    \n    setDescription: (description: string) =>\n      dispatch({ type: 'SET_DESCRIPTION', payload: description }),\n    \n    setCurrentStep: (step: number) =>\n      dispatch({ type: 'SET_CURRENT_STEP', payload: step }),\n    \n    addCompletedStep: (step: number) =>\n      dispatch({ type: 'ADD_COMPLETED_STEP', payload: step }),\n    \n    setLoading: (loading: boolean) =>\n      dispatch({ type: 'SET_LOADING', payload: loading }),\n    \n    setError: (error: string | null) =>\n      dispatch({ type: 'SET_ERROR', payload: error }),\n    \n    setGeneratedSolution: (solution: GeneratedSolution | null) =>\n      dispatch({ type: 'SET_GENERATED_SOLUTION', payload: solution }),\n    \n    resetWizard: () => {\n      dispatch({ type: 'RESET_WIZARD' });\n      localStorage.removeItem(STORAGE_KEYS.WIZARD_STATE);\n    },\n    \n    nextStep: () => {\n      if (state.currentStep < TOTAL_STEPS) {\n        const nextStep = state.currentStep + 1;\n        dispatch({ type: 'ADD_COMPLETED_STEP', payload: state.currentStep });\n        dispatch({ type: 'SET_CURRENT_STEP', payload: nextStep });\n      }\n    },\n    \n    previousStep: () => {\n      if (state.currentStep > 1) {\n        dispatch({ type: 'SET_CURRENT_STEP', payload: state.currentStep - 1 });\n      }\n    },\n    \n    goToStep: (step: number) => {\n      if (step >= 1 && step <= TOTAL_STEPS) {\n        dispatch({ type: 'SET_CURRENT_STEP', payload: step });\n      }\n    },\n    \n    canGoToStep: (step: number): boolean => {\n      // Can always go to the first step\n      if (step === 1) return true;\n      \n      // Can go to a step if the previous step is completed\n      return state.completedSteps.includes(step - 1) || step <= state.currentStep;\n    },\n    \n    validateCurrentStep: (): { isValid: boolean; errors: string[] } => {\n      const errors: string[] = [];\n      \n      switch (state.currentStep) {\n        case 1: // Platform selection\n          if (!state.platform) {\n            errors.push('Please select a platform');\n          }\n          break;\n          \n        case 2: // Priority selection\n          if (state.priorities.length < 2) {\n            errors.push('Please select at least 2 priorities');\n          }\n          if (state.priorities.length > 4) {\n            errors.push('Please select no more than 4 priorities');\n          }\n          break;\n          \n        case 3: // Feature selection (optional, so no validation needed)\n          break;\n          \n        case 4: // Team and complexity\n          if (!state.teamSize) {\n            errors.push('Please select team size');\n          }\n          if (!state.complexity) {\n            errors.push('Please select complexity level');\n          }\n          if (!state.projectName.trim()) {\n            errors.push('Please enter a project name');\n          }\n          if (state.projectName.length < 3) {\n            errors.push('Project name must be at least 3 characters');\n          }\n          if (!state.description.trim()) {\n            errors.push('Please enter a project description');\n          }\n          if (state.description.length < 10) {\n            errors.push('Project description must be at least 10 characters');\n          }\n          break;\n          \n        case 5: // Review (always valid)\n          break;\n          \n        default:\n          break;\n      }\n      \n      return {\n        isValid: errors.length === 0,\n        errors\n      };\n    },\n    \n    saveToStorage: () => {\n      try {\n        const dataToSave = {\n          ...state,\n          timestamp: new Date().toISOString()\n        };\n        localStorage.setItem(STORAGE_KEYS.WIZARD_STATE, JSON.stringify(dataToSave));\n      } catch (error) {\n        console.warn('Failed to save wizard state to localStorage:', error);\n      }\n    },\n    \n    loadFromStorage: () => {\n      try {\n        const stored = localStorage.getItem(STORAGE_KEYS.WIZARD_STATE);\n        if (stored) {\n          const parsedData = JSON.parse(stored);\n          // Remove timestamp before loading\n          const { timestamp, ...stateData } = parsedData;\n          dispatch({ type: 'LOAD_FROM_STORAGE', payload: stateData });\n        }\n      } catch (error) {\n        console.warn('Failed to load wizard state from localStorage:', error);\n      }\n    }\n  };\n\n  // Auto-save to localStorage whenever state changes\n  useEffect(() => {\n    actions.saveToStorage();\n  }, [state]);\n\n  // Load from localStorage on mount\n  useEffect(() => {\n    actions.loadFromStorage();\n  }, []);\n\n  return (\n    <WizardContext.Provider value={{ state, actions }}>\n      {children}\n    </WizardContext.Provider>\n  );\n}\n\n// Hook to use the wizard context\nexport function useWizard() {\n  const context = useContext(WizardContext);\n  if (context === undefined) {\n    throw new Error('useWizard must be used within a WizardProvider');\n  }\n  return context;\n}\n\nexport default WizardContext;","import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ninterface User {\n  id: string;\n  login: string;\n  name: string;\n  avatar_url: string;\n  email?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  login: () => void;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing authentication on mount\n    checkAuthStatus();\n    \n    // Handle OAuth callback\n    handleOAuthCallback();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('github_access_token');\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n\n      // Verify token with GitHub API\n      const response = await fetch('https://api.github.com/user', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/vnd.github.v3+json',\n        },\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        setUser({\n          id: userData.id.toString(),\n          login: userData.login,\n          name: userData.name || userData.login,\n          avatar_url: userData.avatar_url,\n          email: userData.email,\n        });\n      } else {\n        // Token is invalid, remove it\n        localStorage.removeItem('github_access_token');\n      }\n    } catch (error) {\n      console.error('Failed to check auth status:', error);\n      localStorage.removeItem('github_access_token');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOAuthCallback = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const state = urlParams.get('state');\n\n    if (code && state) {\n      // Clear the URL parameters\n      window.history.replaceState({}, document.title, window.location.pathname);\n      \n      // Exchange code for access token\n      exchangeCodeForToken(code, state);\n    }\n  };\n\n  const exchangeCodeForToken = async (code: string, state: string) => {\n    try {\n      setIsLoading(true);\n      \n      // Verify state to prevent CSRF\n      const storedState = localStorage.getItem('github_oauth_state');\n      if (state !== storedState) {\n        throw new Error('Invalid state parameter');\n      }\n\n      // Note: In a production app, this should be done on your backend\n      // For GitHub Pages, we'll use GitHub's direct token exchange\n      const response = await fetch('https://github.com/login/oauth/access_token', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          client_id: import.meta.env.VITE_GITHUB_CLIENT_ID,\n          client_secret: import.meta.env.VITE_GITHUB_CLIENT_SECRET,\n          code,\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (data.access_token) {\n        localStorage.setItem('github_access_token', data.access_token);\n        localStorage.removeItem('github_oauth_state');\n        await checkAuthStatus();\n      } else {\n        throw new Error('Failed to exchange code for token');\n      }\n    } catch (error) {\n      console.error('OAuth callback error:', error);\n      localStorage.removeItem('github_oauth_state');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = () => {\n    // Generate random state for CSRF protection\n    const state = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    localStorage.setItem('github_oauth_state', state);\n\n    const clientId = import.meta.env.VITE_GITHUB_CLIENT_ID;\n    const redirectUri = import.meta.env.VITE_GITHUB_REDIRECT_URI || window.location.origin + '/auth/callback';\n    \n    const authUrl = new URL('https://github.com/login/oauth/authorize');\n    authUrl.searchParams.set('client_id', clientId);\n    authUrl.searchParams.set('redirect_uri', redirectUri);\n    authUrl.searchParams.set('scope', 'user:email read:user');\n    authUrl.searchParams.set('state', state);\n\n    window.location.href = authUrl.toString();\n  };\n\n  const logout = () => {\n    localStorage.removeItem('github_access_token');\n    localStorage.removeItem('github_oauth_state');\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    isLoading,\n    login,\n    logout,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","import React from 'react';\nimport { useAuth } from './AuthProvider';\n\nexport const LoginPage: React.FC = () => {\n  const { login, isLoading } = useAuth();\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-xl p-8\">\n        <div className=\"text-center mb-8\">\n          <div className=\"mx-auto h-16 w-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mb-4\">\n            <svg className=\"h-8 w-8 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Chat Session Manager\n          </h1>\n          <p className=\"text-gray-600\">\n            Build amazing chat experiences across multiple platforms\n          </p>\n        </div>\n\n        <div className=\"space-y-6\">\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-3\">\n              🚀 What you can build:\n            </h2>\n            <ul className=\"text-sm text-gray-700 space-y-2\">\n              <li className=\"flex items-center\">\n                <span className=\"text-purple-500 mr-2\">💬</span>\n                Discord bots with slash commands\n              </li>\n              <li className=\"flex items-center\">\n                <span className=\"text-blue-500 mr-2\">📱</span>\n                Telegram automation bots\n              </li>\n              <li className=\"flex items-center\">\n                <span className=\"text-green-500 mr-2\">💬</span>\n                WhatsApp business integrations\n              </li>\n              <li className=\"flex items-center\">\n                <span className=\"text-indigo-500 mr-2\">🏢</span>\n                Slack workspace applications\n              </li>\n              <li className=\"flex items-center\">\n                <span className=\"text-blue-400 mr-2\">🐦</span>\n                Twitter engagement bots\n              </li>\n              <li className=\"flex items-center\">\n                <span className=\"text-orange-500 mr-2\">🌐</span>\n                Real-time web chat widgets\n              </li>\n              <li className=\"flex items-center\">\n                <span className=\"text-gray-600 mr-2\">⌨️</span>\n                Command-line chat tools\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600 mb-4\">\n              Sign in with GitHub to access your chat session history and configurations\n            </p>\n            \n            <button\n              onClick={login}\n              disabled={isLoading}\n              className=\"w-full bg-gray-900 hover:bg-gray-800 disabled:opacity-50 disabled:cursor-not-allowed text-white font-medium py-3 px-4 rounded-lg transition duration-200 flex items-center justify-center space-x-2\"\n            >\n              {isLoading ? (\n                <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n              ) : (\n                <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n              <span>Continue with GitHub</span>\n            </button>\n\n            <div className=\"mt-4 pt-4 border-t border-gray-200\">\n              <p className=\"text-xs text-gray-500\">\n                By signing in, you agree to our terms of service and privacy policy.\n                Your GitHub information is used only for authentication and session management.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { useAuth } from './AuthProvider';\nimport { LoginPage } from './LoginPage';\n\ninterface PrivateRouteProps {\n  children: React.ReactNode;\n}\n\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return <LoginPage />;\n  }\n\n  return <>{children}</>;\n};","import React, { useState } from 'react';\nimport { useAuth } from '../auth/AuthProvider';\n\nexport const UserProfile: React.FC = () => {\n  const { user, logout } = useAuth();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  if (!user) return null;\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n        className=\"flex items-center space-x-3 bg-white border border-gray-200 rounded-lg px-3 py-2 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n      >\n        <img\n          src={user.avatar_url}\n          alt={user.name}\n          className=\"h-8 w-8 rounded-full\"\n        />\n        <div className=\"text-left min-w-0\">\n          <p className=\"text-sm font-medium text-gray-900 truncate\">\n            {user.name}\n          </p>\n          <p className=\"text-xs text-gray-500 truncate\">\n            @{user.login}\n          </p>\n        </div>\n        <svg\n          className={`h-4 w-4 text-gray-400 transition-transform ${\n            isDropdownOpen ? 'rotate-180' : ''\n          }`}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n\n      {isDropdownOpen && (\n        <>\n          {/* Backdrop */}\n          <div\n            className=\"fixed inset-0 z-10\"\n            onClick={() => setIsDropdownOpen(false)}\n          />\n          \n          {/* Dropdown menu */}\n          <div className=\"absolute right-0 mt-2 w-56 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n            <div className=\"px-4 py-3 border-b border-gray-200\">\n              <p className=\"text-sm font-medium text-gray-900\">\n                {user.name}\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                @{user.login}\n              </p>\n              {user.email && (\n                <p className=\"text-sm text-gray-500\">\n                  {user.email}\n                </p>\n              )}\n            </div>\n\n            <div className=\"py-1\">\n              <button\n                className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                onClick={() => {\n                  window.open(`https://github.com/${user.login}`, '_blank');\n                  setIsDropdownOpen(false);\n                }}\n              >\n                <svg className=\"h-4 w-4 mr-3 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\" clipRule=\"evenodd\" />\n                </svg>\n                View GitHub Profile\n              </button>\n\n              <button\n                className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                onClick={() => {\n                  // TODO: Add settings/preferences functionality\n                  alert('Settings coming soon!');\n                  setIsDropdownOpen(false);\n                }}\n              >\n                <svg className=\"h-4 w-4 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                Settings\n              </button>\n            </div>\n\n            <div className=\"border-t border-gray-200 py-1\">\n              <button\n                onClick={() => {\n                  logout();\n                  setIsDropdownOpen(false);\n                }}\n                className=\"flex items-center w-full px-4 py-2 text-sm text-red-700 hover:bg-red-50\"\n              >\n                <svg className=\"h-4 w-4 mr-3 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n                Sign out\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from 'react';\nimport { Check, ChevronRight } from 'lucide-react';\nimport { StepperProps } from '@/types';\nimport { STEPS } from '@/types/constants';\nimport { clsx } from 'clsx';\n\nconst Stepper: React.FC<StepperProps> = ({\n  currentStep,\n  totalSteps,\n  completedSteps,\n  onStepClick,\n  disabled = false\n}) => {\n  const getStepStatus = (stepNumber: number) => {\n    if (completedSteps.includes(stepNumber)) return 'completed';\n    if (stepNumber === currentStep) return 'current';\n    if (stepNumber < currentStep) return 'completed';\n    return 'upcoming';\n  };\n\n  const canClickStep = (stepNumber: number) => {\n    if (disabled) return false;\n    // Allow clicking on current step, completed steps, or the next step\n    return stepNumber <= currentStep || completedSteps.includes(stepNumber - 1);\n  };\n\n  return (\n    <nav aria-label=\"Progress\" className=\"mb-8\">\n      <ol className=\"flex items-center justify-center space-x-2 sm:space-x-4\">\n        {STEPS.slice(0, totalSteps).map((step, index) => {\n          const stepNumber = step.id;\n          const status = getStepStatus(stepNumber);\n          const isClickable = canClickStep(stepNumber);\n          \n          return (\n            <li key={step.id} className=\"flex items-center\">\n              {/* Step Circle */}\n              <button\n                type=\"button\"\n                onClick={() => isClickable ? onStepClick(stepNumber) : undefined}\n                disabled={!isClickable}\n                className={clsx(\n                  'relative flex items-center justify-center w-10 h-10 rounded-full text-sm font-medium transition-all duration-200',\n                  {\n                    // Completed step\n                    'bg-primary-600 text-white hover:bg-primary-700': \n                      status === 'completed' && isClickable,\n                    'bg-primary-600 text-white': \n                      status === 'completed' && !isClickable,\n                    \n                    // Current step\n                    'bg-primary-600 text-white ring-4 ring-primary-200': \n                      status === 'current',\n                    \n                    // Upcoming step\n                    'bg-gray-200 text-gray-500 hover:bg-gray-300': \n                      status === 'upcoming' && isClickable,\n                    'bg-gray-200 text-gray-500': \n                      status === 'upcoming' && !isClickable,\n                  },\n                  {\n                    'cursor-pointer': isClickable && !disabled,\n                    'cursor-not-allowed opacity-50': disabled,\n                    'cursor-default': !isClickable && !disabled,\n                  }\n                )}\n                aria-current={status === 'current' ? 'step' : undefined}\n              >\n                {status === 'completed' ? (\n                  <Check className=\"w-5 h-5\" aria-hidden=\"true\" />\n                ) : (\n                  <span className=\"text-xs\">{stepNumber}</span>\n                )}\n                \n                {/* Screen reader text */}\n                <span className=\"sr-only\">\n                  {status === 'completed' \n                    ? `Step ${stepNumber} ${step.title}, completed`\n                    : status === 'current' \n                    ? `Step ${stepNumber} ${step.title}, current step`\n                    : `Step ${stepNumber} ${step.title}`\n                  }\n                </span>\n              </button>\n              \n              {/* Step Label - Hidden on mobile */}\n              <div className=\"hidden sm:block ml-3\">\n                <div\n                  className={clsx(\n                    'text-sm font-medium transition-colors duration-200',\n                    {\n                      'text-primary-600': status === 'current' || status === 'completed',\n                      'text-gray-500': status === 'upcoming',\n                    }\n                  )}\n                >\n                  {step.title}\n                </div>\n                <div className=\"text-xs text-gray-400\">\n                  {step.description}\n                </div>\n              </div>\n              \n              {/* Connector Arrow */}\n              {index < STEPS.slice(0, totalSteps).length - 1 && (\n                <ChevronRight \n                  className={clsx(\n                    'w-5 h-5 mx-2 sm:mx-4 transition-colors duration-200',\n                    {\n                      'text-primary-600': stepNumber < currentStep || completedSteps.includes(stepNumber),\n                      'text-gray-300': stepNumber >= currentStep && !completedSteps.includes(stepNumber),\n                    }\n                  )}\n                  aria-hidden=\"true\"\n                />\n              )}\n            </li>\n          );\n        })}\n      </ol>\n      \n      {/* Mobile Step Info */}\n      <div className=\"sm:hidden mt-4 text-center\">\n        <div className=\"text-sm font-medium text-primary-600\">\n          Step {currentStep}: {STEPS[currentStep - 1]?.title}\n        </div>\n        <div className=\"text-xs text-gray-500\">\n          {STEPS[currentStep - 1]?.description}\n        </div>\n      </div>\n      \n      {/* Progress Bar */}\n      <div className=\"mt-6 bg-gray-200 rounded-full h-2 overflow-hidden\">\n        <div\n          className=\"bg-primary-600 h-2 rounded-full transition-all duration-500 ease-out\"\n          style={{\n            width: `${((completedSteps.length + (currentStep > completedSteps.length ? 0.5 : 0)) / totalSteps) * 100}%`\n          }}\n        />\n      </div>\n      \n      {/* Progress Text */}\n      <div className=\"mt-2 text-center text-sm text-gray-500\">\n        Step {currentStep} of {totalSteps}\n        {completedSteps.length > 0 && (\n          <span className=\"ml-2\">\n            ({completedSteps.length} completed)\n          </span>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Stepper;","import React from 'react';\nimport { clsx } from 'clsx';\nimport { Loader2 } from 'lucide-react';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';\n  size?: 'sm' | 'md' | 'lg';\n  loading?: boolean;\n  icon?: React.ReactNode;\n  iconPosition?: 'left' | 'right';\n  fullWidth?: boolean;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  disabled = false,\n  icon,\n  iconPosition = 'left',\n  fullWidth = false,\n  className,\n  ...props\n}) => {\n  const baseStyles = clsx(\n    'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed',\n    {\n      'w-full': fullWidth,\n    }\n  );\n\n  const variants = {\n    primary: 'bg-primary-600 hover:bg-primary-700 text-white focus:ring-primary-500 shadow-sm',\n    secondary: 'bg-gray-600 hover:bg-gray-700 text-white focus:ring-gray-500 shadow-sm',\n    outline: 'border border-gray-300 bg-white hover:bg-gray-50 text-gray-700 focus:ring-primary-500',\n    ghost: 'bg-transparent hover:bg-gray-100 text-gray-700 focus:ring-gray-500',\n    danger: 'bg-red-600 hover:bg-red-700 text-white focus:ring-red-500 shadow-sm',\n  };\n\n  const sizes = {\n    sm: 'px-3 py-1.5 text-sm rounded-md',\n    md: 'px-4 py-2 text-sm rounded-md',\n    lg: 'px-6 py-3 text-base rounded-lg',\n  };\n\n  const iconSizes = {\n    sm: 'w-4 h-4',\n    md: 'w-5 h-5',\n    lg: 'w-5 h-5',\n  };\n\n  const isDisabled = disabled || loading;\n\n  return (\n    <button\n      className={clsx(\n        baseStyles,\n        variants[variant],\n        sizes[size],\n        className\n      )}\n      disabled={isDisabled}\n      {...props}\n    >\n      {loading && (\n        <Loader2 className={clsx('animate-spin', iconSizes[size], {\n          'mr-2': children && iconPosition === 'left',\n          'ml-2': children && iconPosition === 'right',\n        })} />\n      )}\n      \n      {!loading && icon && iconPosition === 'left' && (\n        <span className={clsx(iconSizes[size], { 'mr-2': children })}>\n          {icon}\n        </span>\n      )}\n      \n      {children}\n      \n      {!loading && icon && iconPosition === 'right' && (\n        <span className={clsx(iconSizes[size], { 'ml-2': children })}>\n          {icon}\n        </span>\n      )}\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport { clsx } from 'clsx';\n\ninterface CardProps {\n  children: React.ReactNode;\n  className?: string;\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n  shadow?: 'none' | 'sm' | 'md' | 'lg';\n  border?: boolean;\n  hover?: boolean;\n  selected?: boolean;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nconst Card: React.FC<CardProps> = ({\n  children,\n  className,\n  padding = 'md',\n  shadow = 'sm',\n  border = true,\n  hover = false,\n  selected = false,\n  onClick,\n  disabled = false,\n}) => {\n  const isClickable = !!onClick && !disabled;\n\n  const baseStyles = 'bg-white rounded-lg transition-all duration-200';\n  \n  const paddingStyles = {\n    none: '',\n    sm: 'p-3',\n    md: 'p-4',\n    lg: 'p-6',\n  };\n\n  const shadowStyles = {\n    none: '',\n    sm: 'shadow-sm',\n    md: 'shadow-md',\n    lg: 'shadow-lg',\n  };\n\n  const borderStyles = border ? 'border border-gray-200' : '';\n  \n  const hoverStyles = hover && !disabled ? 'hover:shadow-md hover:-translate-y-0.5' : '';\n  \n  const selectedStyles = selected ? 'ring-2 ring-primary-500 border-primary-300' : '';\n  \n  const clickableStyles = isClickable ? 'cursor-pointer' : '';\n  \n  const disabledStyles = disabled ? 'opacity-50 cursor-not-allowed' : '';\n\n  return (\n    <div\n      className={clsx(\n        baseStyles,\n        paddingStyles[padding],\n        shadowStyles[shadow],\n        borderStyles,\n        hoverStyles,\n        selectedStyles,\n        clickableStyles,\n        disabledStyles,\n        className\n      )}\n      onClick={isClickable ? onClick : undefined}\n      role={isClickable ? 'button' : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n      onKeyDown={isClickable ? (e) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          onClick?.();\n        }\n      } : undefined}\n    >\n      {children}\n    </div>\n  );\n};\n\n// Card subcomponents\ninterface CardHeaderProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardHeader: React.FC<CardHeaderProps> = ({ children, className }) => (\n  <div className={clsx('mb-4', className)}>\n    {children}\n  </div>\n);\n\ninterface CardTitleProps {\n  children: React.ReactNode;\n  className?: string;\n  level?: 1 | 2 | 3 | 4;\n}\n\nexport const CardTitle: React.FC<CardTitleProps> = ({ \n  children, \n  className, \n  level = 3 \n}) => {\n  const Tag = `h${level}` as keyof JSX.IntrinsicElements;\n  \n  const sizeStyles = {\n    1: 'text-2xl',\n    2: 'text-xl',\n    3: 'text-lg',\n    4: 'text-base',\n  };\n\n  return (\n    <Tag className={clsx('font-semibold text-gray-900', sizeStyles[level], className)}>\n      {children}\n    </Tag>\n  );\n};\n\ninterface CardDescriptionProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardDescription: React.FC<CardDescriptionProps> = ({ \n  children, \n  className \n}) => (\n  <p className={clsx('text-sm text-gray-600', className)}>\n    {children}\n  </p>\n);\n\ninterface CardContentProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardContent: React.FC<CardContentProps> = ({ children, className }) => (\n  <div className={className}>\n    {children}\n  </div>\n);\n\ninterface CardFooterProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardFooter: React.FC<CardFooterProps> = ({ children, className }) => (\n  <div className={clsx('mt-4 pt-4 border-t border-gray-200', className)}>\n    {children}\n  </div>\n);\n\nexport default Card;","import React from 'react';\nimport { Platform, StepProps } from '@/types';\nimport { PLATFORM_OPTIONS, PLATFORMS } from '@/types/constants';\nimport { useWizard } from '@/contexts/WizardContext';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle } from '@/components/shared/Card';\nimport { Clock, Users, Zap } from 'lucide-react';\n\nconst Step1Platform: React.FC<StepProps> = ({ onNext, onPrevious }) => {\n  const { state, actions } = useWizard();\n  \n  const handlePlatformSelect = (platform: Platform) => {\n    actions.setPlatform(platform);\n  };\n\n  const validation = actions.validateCurrentStep();\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Choose Your Platform\n        </h2>\n        <p className=\"text-lg text-gray-600\">\n          Select the platform where you want to build your chat session management solution.\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {PLATFORM_OPTIONS.map((option) => {\n          const platformConfig = PLATFORMS[option.value];\n          const isSelected = state.platform === option.value;\n          \n          return (\n            <Card\n              key={option.value}\n              selected={isSelected}\n              onClick={() => handlePlatformSelect(option.value)}\n              hover\n              className=\"h-full\"\n            >\n              <CardContent>\n                <div className=\"text-center mb-4\">\n                  <div className=\"text-4xl mb-3\" role=\"img\" aria-label={option.label}>\n                    {option.icon}\n                  </div>\n                  <CardTitle level={3}>{option.label}</CardTitle>\n                  <CardDescription className=\"mt-2\">\n                    {option.description}\n                  </CardDescription>\n                </div>\n                \n                {/* Platform Stats */}\n                <div className=\"space-y-3 mb-4\">\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Clock className=\"w-4 h-4 mr-2 text-gray-400\" />\n                    <span>{platformConfig.estimatedTime}</span>\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Zap className=\"w-4 h-4 mr-2 text-gray-400\" />\n                    <span className=\"capitalize\">{platformConfig.complexity} complexity</span>\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Users className=\"w-4 h-4 mr-2 text-gray-400\" />\n                    <span>{platformConfig.supportedFeatures.length} supported features</span>\n                  </div>\n                </div>\n\n                {/* Requirements */}\n                <div className=\"border-t pt-3\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Requirements:</h4>\n                  <ul className=\"text-xs text-gray-600 space-y-1\">\n                    {platformConfig.requirements.map((req, index) => (\n                      <li key={index} className=\"flex items-center\">\n                        <div className=\"w-1 h-1 bg-gray-400 rounded-full mr-2 flex-shrink-0\" />\n                        {req}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                \n                {/* Selection Indicator */}\n                {isSelected && (\n                  <div className=\"mt-4 p-2 bg-primary-50 rounded-lg\">\n                    <div className=\"text-sm font-medium text-primary-700 text-center\">\n                      ✓ Selected\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Popular Platforms Highlight */}\n      <div className=\"mt-8 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n        <h3 className=\"text-sm font-medium text-blue-900 mb-2\">💡 Popular Choices</h3>\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 text-sm\">\n          <div>\n            <span className=\"font-medium text-blue-800\">Beginners:</span>\n            <span className=\"text-blue-700 ml-1\">Telegram Bot, CLI Tool</span>\n          </div>\n          <div>\n            <span className=\"font-medium text-blue-800\">Enterprise:</span>\n            <span className=\"text-blue-700 ml-1\">Slack App, Web Chat</span>\n          </div>\n          <div>\n            <span className=\"font-medium text-blue-800\">Gaming:</span>\n            <span className=\"text-blue-700 ml-1\">Discord Bot</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Validation Errors */}\n      {!validation.isValid && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <h4 className=\"text-sm font-medium text-red-800 mb-2\">Please complete this step:</h4>\n          <ul className=\"text-sm text-red-700 space-y-1\">\n            {validation.errors.map((error, index) => (\n              <li key={index} className=\"flex items-center\">\n                <div className=\"w-1 h-1 bg-red-400 rounded-full mr-2 flex-shrink-0\" />\n                {error}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-6\">\n        <div>\n          {/* First step, no previous button */}\n        </div>\n        \n        <div className=\"flex space-x-3\">\n          <Button\n            onClick={onNext}\n            disabled={!validation.isValid}\n            variant=\"primary\"\n            size=\"lg\"\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step1Platform;","import React from 'react';\nimport { clsx } from 'clsx';\nimport { AlertCircle, CheckCircle, Info, XCircle, X } from 'lucide-react';\n\ninterface AlertProps {\n  type?: 'info' | 'success' | 'warning' | 'error';\n  title?: string;\n  children: React.ReactNode;\n  dismissible?: boolean;\n  onDismiss?: () => void;\n  className?: string;\n}\n\nconst Alert: React.FC<AlertProps> = ({\n  type = 'info',\n  title,\n  children,\n  dismissible = false,\n  onDismiss,\n  className,\n}) => {\n  const icons = {\n    info: Info,\n    success: CheckCircle,\n    warning: AlertCircle,\n    error: XCircle,\n  };\n\n  const styles = {\n    info: {\n      container: 'bg-blue-50 border-blue-200 text-blue-800',\n      icon: 'text-blue-400',\n      title: 'text-blue-800',\n    },\n    success: {\n      container: 'bg-green-50 border-green-200 text-green-800',\n      icon: 'text-green-400',\n      title: 'text-green-800',\n    },\n    warning: {\n      container: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n      icon: 'text-yellow-400',\n      title: 'text-yellow-800',\n    },\n    error: {\n      container: 'bg-red-50 border-red-200 text-red-800',\n      icon: 'text-red-400',\n      title: 'text-red-800',\n    },\n  };\n\n  const Icon = icons[type];\n  const style = styles[type];\n\n  return (\n    <div\n      className={clsx(\n        'border rounded-lg p-4',\n        style.container,\n        className\n      )}\n      role=\"alert\"\n    >\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <Icon className={clsx('w-5 h-5', style.icon)} aria-hidden=\"true\" />\n        </div>\n        \n        <div className=\"ml-3 flex-1\">\n          {title && (\n            <h3 className={clsx('text-sm font-medium', style.title)}>\n              {title}\n            </h3>\n          )}\n          \n          <div className={clsx('text-sm', title ? 'mt-2' : '')}>\n            {children}\n          </div>\n        </div>\n        \n        {dismissible && onDismiss && (\n          <div className=\"ml-auto pl-3\">\n            <div className=\"-mx-1.5 -my-1.5\">\n              <button\n                type=\"button\"\n                onClick={onDismiss}\n                className={clsx(\n                  'inline-flex rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors',\n                  {\n                    'text-blue-500 hover:bg-blue-100 focus:ring-blue-600': type === 'info',\n                    'text-green-500 hover:bg-green-100 focus:ring-green-600': type === 'success',\n                    'text-yellow-500 hover:bg-yellow-100 focus:ring-yellow-600': type === 'warning',\n                    'text-red-500 hover:bg-red-100 focus:ring-red-600': type === 'error',\n                  }\n                )}\n                aria-label=\"Dismiss\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;","import React from 'react';\nimport { Priority, StepProps } from '@/types';\nimport { PRIORITY_OPTIONS, VALIDATION_RULES } from '@/types/constants';\nimport { useWizard } from '@/contexts/WizardContext';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle } from '@/components/shared/Card';\nimport Alert from '@/components/shared/Alert';\nimport { Star, ArrowLeft } from 'lucide-react';\n\nconst Step2Priorities: React.FC<StepProps> = ({ onNext, onPrevious }) => {\n  const { state, actions } = useWizard();\n  \n  const handlePriorityToggle = (priority: Priority) => {\n    const currentPriorities = state.priorities;\n    const isSelected = currentPriorities.includes(priority);\n    \n    if (isSelected) {\n      // Remove if already selected\n      actions.setPriorities(currentPriorities.filter(p => p !== priority));\n    } else {\n      // Add if not at maximum\n      if (currentPriorities.length < VALIDATION_RULES.PRIORITIES.MAX) {\n        actions.setPriorities([...currentPriorities, priority]);\n      }\n    }\n  };\n\n  const validation = actions.validateCurrentStep();\n  const selectedCount = state.priorities.length;\n  const minCount = VALIDATION_RULES.PRIORITIES.MIN;\n  const maxCount = VALIDATION_RULES.PRIORITIES.MAX;\n  const remainingSelections = maxCount - selectedCount;\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Set Your Priorities\n        </h2>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Choose {minCount}-{maxCount} key priorities for your chat session management system.\n        </p>\n        \n        {/* Selection Counter */}\n        <div className=\"inline-flex items-center px-4 py-2 bg-gray-100 rounded-full\">\n          <span className=\"text-sm font-medium text-gray-700\">\n            Selected: {selectedCount}/{maxCount}\n          </span>\n          {selectedCount >= minCount && (\n            <Star className=\"w-4 h-4 ml-2 text-yellow-500 fill-current\" />\n          )}\n        </div>\n      </div>\n\n      {/* Priority Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {PRIORITY_OPTIONS.map((option) => {\n          const isSelected = state.priorities.includes(option.value);\n          const canSelect = !isSelected && selectedCount < maxCount;\n          const disabled = !isSelected && !canSelect;\n          \n          return (\n            <Card\n              key={option.value}\n              selected={isSelected}\n              onClick={() => handlePriorityToggle(option.value)}\n              hover={!disabled}\n              disabled={disabled}\n              className=\"h-full relative\"\n            >\n              <CardContent>\n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"text-2xl flex-shrink-0\" role=\"img\" aria-label={option.label}>\n                    {option.icon}\n                  </div>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle level={4} className=\"text-base\">\n                        {option.label}\n                      </CardTitle>\n                      \n                      {/* Badges */}\n                      <div className=\"flex items-center space-x-1\">\n                        {option.recommended && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                            <Star className=\"w-3 h-3 mr-1 fill-current\" />\n                            Recommended\n                          </span>\n                        )}\n                        \n                        {isSelected && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800\">\n                            ✓ Selected\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <CardDescription className=\"mt-2\">\n                      {option.description}\n                    </CardDescription>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Helpful Tips */}\n      <Alert type=\"info\" title=\"💡 Selection Tips\">\n        <div className=\"space-y-2 text-sm\">\n          <p>\n            <strong>Recommended priorities</strong> are marked with a star and are commonly needed for most chat systems.\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-3\">\n            <div>\n              <span className=\"font-medium\">For beginners:</span>\n              <span className=\"ml-1\">Focus on Message Persistence and Session Management</span>\n            </div>\n            <div>\n              <span className=\"font-medium\">For enterprises:</span>\n              <span className=\"ml-1\">Consider User Authentication and Scalability</span>\n            </div>\n          </div>\n        </div>\n      </Alert>\n\n      {/* Selection Progress */}\n      {selectedCount > 0 && selectedCount < minCount && (\n        <Alert type=\"warning\">\n          Please select at least {minCount - selectedCount} more priorit{minCount - selectedCount === 1 ? 'y' : 'ies'} to continue.\n        </Alert>\n      )}\n\n      {selectedCount === maxCount && (\n        <Alert type=\"success\">\n          Great! You've selected the maximum number of priorities. You can still change your selection if needed.\n        </Alert>\n      )}\n\n      {/* Validation Errors */}\n      {!validation.isValid && (\n        <Alert type=\"error\" title=\"Please complete this step:\">\n          <ul className=\"space-y-1\">\n            {validation.errors.map((error, index) => (\n              <li key={index} className=\"flex items-center\">\n                <div className=\"w-1 h-1 bg-red-400 rounded-full mr-2 flex-shrink-0\" />\n                {error}\n              </li>\n            ))}\n          </ul>\n        </Alert>\n      )}\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-6\">\n        <Button\n          onClick={onPrevious}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<ArrowLeft />}\n        >\n          Previous\n        </Button>\n        \n        <div className=\"flex space-x-3\">\n          <Button\n            onClick={onNext}\n            disabled={!validation.isValid}\n            variant=\"primary\"\n            size=\"lg\"\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step2Priorities;","import React from 'react';\nimport { Feature, StepProps } from '@/types';\nimport { FEATURE_OPTIONS, PLATFORMS } from '@/types/constants';\nimport { useWizard } from '@/contexts/WizardContext';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle } from '@/components/shared/Card';\nimport Alert from '@/components/shared/Alert';\nimport { ArrowLeft, Info } from 'lucide-react';\n\nconst Step3Features: React.FC<StepProps> = ({ onNext, onPrevious, onSkip }) => {\n  const { state, actions } = useWizard();\n  \n  const handleFeatureToggle = (feature: Feature) => {\n    const currentFeatures = state.features;\n    const isSelected = currentFeatures.includes(feature);\n    \n    if (isSelected) {\n      // Remove if already selected\n      actions.setFeatures(currentFeatures.filter(f => f !== feature));\n    } else {\n      // Add feature\n      actions.setFeatures([...currentFeatures, feature]);\n    }\n  };\n\n  const handleSelectAll = () => {\n    if (state.platform) {\n      const platformConfig = PLATFORMS[state.platform];\n      const supportedFeatures = FEATURE_OPTIONS\n        .filter(option => platformConfig.supportedFeatures.includes(option.value))\n        .map(option => option.value);\n      actions.setFeatures(supportedFeatures);\n    }\n  };\n\n  const handleClearAll = () => {\n    actions.setFeatures([]);\n  };\n\n  const validation = actions.validateCurrentStep();\n  const selectedCount = state.features.length;\n  \n  // Get platform-specific info\n  const platformConfig = state.platform ? PLATFORMS[state.platform] : null;\n  const supportedFeatures = platformConfig?.supportedFeatures || [];\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Choose Features\n        </h2>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Select additional features to enhance your chat session management system.\n        </p>\n        \n        {/* Selection Counter and Actions */}\n        <div className=\"flex flex-col sm:flex-row items-center justify-center space-y-2 sm:space-y-0 sm:space-x-4\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-gray-100 rounded-full\">\n            <span className=\"text-sm font-medium text-gray-700\">\n              Selected: {selectedCount} feature{selectedCount !== 1 ? 's' : ''}\n            </span>\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            <Button\n              onClick={handleSelectAll}\n              variant=\"outline\"\n              size=\"sm\"\n              disabled={!platformConfig}\n            >\n              Select All Supported\n            </Button>\n            <Button\n              onClick={handleClearAll}\n              variant=\"outline\"\n              size=\"sm\"\n              disabled={selectedCount === 0}\n            >\n              Clear All\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Platform Compatibility Info */}\n      {platformConfig && (\n        <Alert type=\"info\" className=\"mb-6\">\n          <div className=\"flex items-start space-x-2\">\n            <Info className=\"w-5 h-5 text-blue-400 flex-shrink-0 mt-0.5\" />\n            <div>\n              <p className=\"font-medium\">Platform Compatibility</p>\n              <p className=\"text-sm mt-1\">\n                {platformConfig.displayName} supports {supportedFeatures.length} out of {FEATURE_OPTIONS.length} available features.\n                Features not supported by your platform will be shown as disabled.\n              </p>\n            </div>\n          </div>\n        </Alert>\n      )}\n\n      {/* Features Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {FEATURE_OPTIONS.map((option) => {\n          const isSelected = state.features.includes(option.value);\n          const isSupported = !platformConfig || supportedFeatures.includes(option.value);\n          \n          return (\n            <Card\n              key={option.value}\n              selected={isSelected}\n              onClick={isSupported ? () => handleFeatureToggle(option.value) : undefined}\n              hover={isSupported}\n              disabled={!isSupported}\n              className=\"h-full relative\"\n            >\n              <CardContent>\n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"text-2xl flex-shrink-0\" role=\"img\" aria-label={option.label}>\n                    {option.icon}\n                  </div>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle level={4} className={`text-base ${!isSupported ? 'text-gray-400' : ''}`}>\n                          {option.label}\n                        </CardTitle>\n                        <CardDescription className={`mt-2 ${!isSupported ? 'text-gray-400' : ''}`}>\n                          {option.description}\n                        </CardDescription>\n                      </div>\n                      \n                      {/* Status Badges */}\n                      <div className=\"flex flex-col items-end space-y-1 ml-2\">\n                        {isSelected && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800\">\n                            ✓ Selected\n                          </span>\n                        )}\n                        \n                        {!isSupported && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-500\">\n                            Not Supported\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Disabled Overlay */}\n                {!isSupported && (\n                  <div className=\"absolute inset-0 bg-gray-50 bg-opacity-50 rounded-lg pointer-events-none\" />\n                )}\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Feature Categories */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-8\">\n        <div className=\"bg-green-50 p-4 rounded-lg\">\n          <h4 className=\"font-medium text-green-800 mb-2\">🤖 AI & Automation</h4>\n          <p className=\"text-sm text-green-600\">\n            AI Integration, Custom Commands\n          </p>\n        </div>\n        <div className=\"bg-blue-50 p-4 rounded-lg\">\n          <h4 className=\"font-medium text-blue-800 mb-2\">🔗 Integration</h4>\n          <p className=\"text-sm text-blue-600\">\n            Webhooks, File Attachments\n          </p>\n        </div>\n        <div className=\"bg-purple-50 p-4 rounded-lg\">\n          <h4 className=\"font-medium text-purple-800 mb-2\">🧠 Intelligence</h4>\n          <p className=\"text-sm text-purple-600\">\n            Context Awareness, Conversation Branching\n          </p>\n        </div>\n        <div className=\"bg-orange-50 p-4 rounded-lg\">\n          <h4 className=\"font-medium text-orange-800 mb-2\">🌍 Global</h4>\n          <p className=\"text-sm text-orange-600\">\n            Multi-language, Backup & Restore\n          </p>\n        </div>\n      </div>\n\n      {/* Selection Summary */}\n      {selectedCount > 0 && (\n        <Alert type=\"success\">\n          <p>\n            Great! You've selected {selectedCount} feature{selectedCount !== 1 ? 's' : ''}.\n            You can continue to configure your team settings, or add/remove features as needed.\n          </p>\n        </Alert>\n      )}\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-6\">\n        <Button\n          onClick={onPrevious}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<ArrowLeft />}\n        >\n          Previous\n        </Button>\n        \n        <div className=\"flex space-x-3\">\n          {onSkip && (\n            <Button\n              onClick={onSkip}\n              variant=\"ghost\"\n              size=\"lg\"\n            >\n              Skip Features\n            </Button>\n          )}\n          \n          <Button\n            onClick={onNext}\n            variant=\"primary\"\n            size=\"lg\"\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step3Features;","import React from 'react';\nimport { TeamSize, Complexity, StepProps } from '@/types';\nimport { TEAM_SIZE_OPTIONS, COMPLEXITY_OPTIONS, VALIDATION_RULES } from '@/types/constants';\nimport { useWizard } from '@/contexts/WizardContext';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle } from '@/components/shared/Card';\nimport Alert from '@/components/shared/Alert';\nimport { ArrowLeft, Users, Zap, FileText } from 'lucide-react';\n\nconst Step4Configuration: React.FC<StepProps> = ({ onNext, onPrevious }) => {\n  const { state, actions } = useWizard();\n  \n  const handleTeamSizeSelect = (teamSize: TeamSize) => {\n    actions.setTeamSize(teamSize);\n  };\n\n  const handleComplexitySelect = (complexity: Complexity) => {\n    actions.setComplexity(complexity);\n  };\n\n  const handleProjectNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    actions.setProjectName(e.target.value);\n  };\n\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    actions.setDescription(e.target.value);\n  };\n\n  const validation = actions.validateCurrentStep();\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-8\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Project Configuration\n        </h2>\n        <p className=\"text-lg text-gray-600\">\n          Configure your team size, project complexity, and provide basic project information.\n        </p>\n      </div>\n\n      {/* Team Size Selection */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Users className=\"w-5 h-5 text-gray-600\" />\n          <h3 className=\"text-xl font-semibold text-gray-900\">Team Size</h3>\n        </div>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4\">\n          {TEAM_SIZE_OPTIONS.map((option) => {\n            const isSelected = state.teamSize === option.value;\n            \n            return (\n              <Card\n                key={option.value}\n                selected={isSelected}\n                onClick={() => handleTeamSizeSelect(option.value)}\n                hover\n                className=\"text-center\"\n              >\n                <CardContent className=\"p-4\">\n                  <div className=\"text-3xl mb-2\" role=\"img\" aria-label={option.label}>\n                    {option.icon}\n                  </div>\n                  <CardTitle level={4} className=\"text-sm font-medium\">\n                    {option.label}\n                  </CardTitle>\n                  <CardDescription className=\"text-xs mt-1\">\n                    {option.description}\n                  </CardDescription>\n                  \n                  {isSelected && (\n                    <div className=\"mt-2 text-xs font-medium text-primary-600\">\n                      ✓ Selected\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Complexity Selection */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Zap className=\"w-5 h-5 text-gray-600\" />\n          <h3 className=\"text-xl font-semibold text-gray-900\">Complexity Level</h3>\n        </div>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {COMPLEXITY_OPTIONS.map((option) => {\n            const isSelected = state.complexity === option.value;\n            \n            return (\n              <Card\n                key={option.value}\n                selected={isSelected}\n                onClick={() => handleComplexitySelect(option.value)}\n                hover\n                className=\"text-center\"\n              >\n                <CardContent className=\"p-4\">\n                  <div className=\"text-3xl mb-2\" role=\"img\" aria-label={option.label}>\n                    {option.icon}\n                  </div>\n                  <CardTitle level={4} className=\"text-sm font-medium\">\n                    {option.label}\n                  </CardTitle>\n                  <CardDescription className=\"text-xs mt-1\">\n                    {option.description}\n                  </CardDescription>\n                  \n                  {isSelected && (\n                    <div className=\"mt-2 text-xs font-medium text-primary-600\">\n                      ✓ Selected\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Project Information */}\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <FileText className=\"w-5 h-5 text-gray-600\" />\n          <h3 className=\"text-xl font-semibold text-gray-900\">Project Information</h3>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Project Name */}\n          <div>\n            <label htmlFor=\"projectName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Project Name *\n            </label>\n            <input\n              type=\"text\"\n              id=\"projectName\"\n              value={state.projectName}\n              onChange={handleProjectNameChange}\n              placeholder=\"e.g., my-chat-bot, customer-support-system\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              maxLength={VALIDATION_RULES.PROJECT_NAME.MAX_LENGTH}\n            />\n            <div className=\"mt-1 flex justify-between text-xs text-gray-500\">\n              <span>\n                {state.projectName.length < VALIDATION_RULES.PROJECT_NAME.MIN_LENGTH \n                  ? `Minimum ${VALIDATION_RULES.PROJECT_NAME.MIN_LENGTH} characters`\n                  : 'Good!'\n                }\n              </span>\n              <span>\n                {state.projectName.length}/{VALIDATION_RULES.PROJECT_NAME.MAX_LENGTH}\n              </span>\n            </div>\n          </div>\n\n          {/* Project Description */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Description *\n            </label>\n            <textarea\n              id=\"description\"\n              rows={4}\n              value={state.description}\n              onChange={handleDescriptionChange}\n              placeholder=\"Briefly describe what your chat system will do...\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none\"\n              maxLength={VALIDATION_RULES.DESCRIPTION.MAX_LENGTH}\n            />\n            <div className=\"mt-1 flex justify-between text-xs text-gray-500\">\n              <span>\n                {state.description.length < VALIDATION_RULES.DESCRIPTION.MIN_LENGTH \n                  ? `Minimum ${VALIDATION_RULES.DESCRIPTION.MIN_LENGTH} characters`\n                  : 'Good!'\n                }\n              </span>\n              <span>\n                {state.description.length}/{VALIDATION_RULES.DESCRIPTION.MAX_LENGTH}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Configuration Preview */}\n      {(state.teamSize || state.complexity) && (\n        <Alert type=\"info\" title=\"Configuration Preview\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            {state.teamSize && (\n              <div>\n                <span className=\"font-medium\">Team Size:</span>\n                <span className=\"ml-1\">\n                  {TEAM_SIZE_OPTIONS.find(opt => opt.value === state.teamSize)?.label}\n                </span>\n              </div>\n            )}\n            \n            {state.complexity && (\n              <div>\n                <span className=\"font-medium\">Complexity:</span>\n                <span className=\"ml-1\">\n                  {COMPLEXITY_OPTIONS.find(opt => opt.value === state.complexity)?.label}\n                </span>\n              </div>\n            )}\n          </div>\n          \n          {state.teamSize === 'enterprise' && state.complexity === 'expert' && (\n            <div className=\"mt-2 p-2 bg-yellow-50 rounded border border-yellow-200\">\n              <p className=\"text-sm text-yellow-800\">\n                ⚡ This configuration will generate a comprehensive, production-ready solution with advanced enterprise features.\n              </p>\n            </div>\n          )}\n        </Alert>\n      )}\n\n      {/* Validation Errors */}\n      {!validation.isValid && (\n        <Alert type=\"error\" title=\"Please complete the following:\">\n          <ul className=\"space-y-1\">\n            {validation.errors.map((error, index) => (\n              <li key={index} className=\"flex items-center text-sm\">\n                <div className=\"w-1 h-1 bg-red-400 rounded-full mr-2 flex-shrink-0\" />\n                {error}\n              </li>\n            ))}\n          </ul>\n        </Alert>\n      )}\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-6\">\n        <Button\n          onClick={onPrevious}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<ArrowLeft />}\n        >\n          Previous\n        </Button>\n        \n        <div className=\"flex space-x-3\">\n          <Button\n            onClick={onNext}\n            disabled={!validation.isValid}\n            variant=\"primary\"\n            size=\"lg\"\n          >\n            Review Configuration\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step4Configuration;","import React from 'react';\nimport { StepProps } from '@/types';\nimport { PLATFORMS, PRIORITY_OPTIONS, FEATURE_OPTIONS, TEAM_SIZE_OPTIONS, COMPLEXITY_OPTIONS } from '@/types/constants';\nimport { useWizard } from '@/contexts/WizardContext';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle, CardHeader } from '@/components/shared/Card';\nimport Alert from '@/components/shared/Alert';\nimport { ArrowLeft, Clock, Users, Zap, Settings, FileText, CheckCircle, Edit3 } from 'lucide-react';\n\nconst Step5Review: React.FC<StepProps> = ({ onNext, onPrevious }) => {\n  const { state, actions } = useWizard();\n  \n  const platformConfig = state.platform ? PLATFORMS[state.platform] : null;\n  const selectedPriorities = PRIORITY_OPTIONS.filter(opt => state.priorities.includes(opt.value));\n  const selectedFeatures = FEATURE_OPTIONS.filter(opt => state.features.includes(opt.value));\n  const teamSizeOption = TEAM_SIZE_OPTIONS.find(opt => opt.value === state.teamSize);\n  const complexityOption = COMPLEXITY_OPTIONS.find(opt => opt.value === state.complexity);\n\n  const handleEditSection = (step: number) => {\n    actions.goToStep(step);\n  };\n\n  // Calculate estimated setup time based on selections\n  const getEstimatedTime = () => {\n    if (!platformConfig) return 'Unknown';\n    \n    const baseHours = {\n      'basic': 2,\n      'intermediate': 4,\n      'advanced': 6,\n      'expert': 8\n    }[state.complexity || 'basic'];\n    \n    const featureMultiplier = 1 + (state.features.length * 0.1);\n    const teamMultiplier = {\n      'solo': 1,\n      'small': 0.8,\n      'medium': 0.6,\n      'large': 0.5,\n      'enterprise': 0.4\n    }[state.teamSize || 'solo'];\n    \n    const totalHours = Math.ceil(baseHours * featureMultiplier * teamMultiplier);\n    \n    if (totalHours < 2) return '1-2 hours';\n    if (totalHours < 4) return '2-4 hours';\n    if (totalHours < 8) return '4-8 hours';\n    return '8+ hours';\n  };\n\n  const validation = actions.validateCurrentStep();\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Review Your Configuration\n        </h2>\n        <p className=\"text-lg text-gray-600\">\n          Please review your selections before generating your chat session management solution.\n        </p>\n      </div>\n\n      {/* Configuration Summary Cards */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        \n        {/* Platform Card */}\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"text-2xl\">{platformConfig?.icon}</div>\n                <CardTitle level={3}>Platform</CardTitle>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => handleEditSection(1)}\n                icon={<Edit3 />}\n              >\n                Edit\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div>\n                <h4 className=\"font-medium text-gray-900\">{platformConfig?.displayName}</h4>\n                <CardDescription>{platformConfig?.description}</CardDescription>\n              </div>\n              \n              <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                <div className=\"flex items-center\">\n                  <Clock className=\"w-4 h-4 mr-1\" />\n                  <span>{platformConfig?.estimatedTime}</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <Zap className=\"w-4 h-4 mr-1\" />\n                  <span className=\"capitalize\">{platformConfig?.complexity}</span>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Priorities Card */}\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle level={3}>Priorities ({state.priorities.length})</CardTitle>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => handleEditSection(2)}\n                icon={<Edit3 />}\n              >\n                Edit\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {selectedPriorities.map((priority) => (\n                <div key={priority.value} className=\"flex items-center space-x-2\">\n                  <span className=\"text-lg\">{priority.icon}</span>\n                  <span className=\"text-sm font-medium\">{priority.label}</span>\n                  {priority.recommended && (\n                    <span className=\"text-xs bg-yellow-100 text-yellow-800 px-1.5 py-0.5 rounded\">\n                      Recommended\n                    </span>\n                  )}\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Features Card */}\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle level={3}>Features ({state.features.length})</CardTitle>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => handleEditSection(3)}\n                icon={<Edit3 />}\n              >\n                Edit\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            {state.features.length > 0 ? (\n              <div className=\"space-y-2\">\n                {selectedFeatures.map((feature) => (\n                  <div key={feature.value} className=\"flex items-center space-x-2\">\n                    <span className=\"text-lg\">{feature.icon}</span>\n                    <span className=\"text-sm font-medium\">{feature.label}</span>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <CardDescription>No additional features selected</CardDescription>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Configuration Card */}\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle level={3}>Configuration</CardTitle>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => handleEditSection(4)}\n                icon={<Edit3 />}\n              >\n                Edit\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center space-x-2\">\n                <Users className=\"w-4 h-4 text-gray-500\" />\n                <span className=\"text-sm font-medium\">Team:</span>\n                <span className=\"text-sm\">{teamSizeOption?.label}</span>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <Zap className=\"w-4 h-4 text-gray-500\" />\n                <span className=\"text-sm font-medium\">Complexity:</span>\n                <span className=\"text-sm\">{complexityOption?.label}</span>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <Clock className=\"w-4 h-4 text-gray-500\" />\n                <span className=\"text-sm font-medium\">Est. Time:</span>\n                <span className=\"text-sm\">{getEstimatedTime()}</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Project Information */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <FileText className=\"w-5 h-5 text-gray-600\" />\n              <CardTitle level={3}>Project Information</CardTitle>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => handleEditSection(4)}\n              icon={<Edit3 />}\n            >\n              Edit\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            <div>\n              <span className=\"text-sm font-medium text-gray-700\">Project Name:</span>\n              <p className=\"text-gray-900 font-mono bg-gray-50 px-2 py-1 rounded mt-1\">\n                {state.projectName}\n              </p>\n            </div>\n            \n            <div>\n              <span className=\"text-sm font-medium text-gray-700\">Description:</span>\n              <p className=\"text-gray-900 mt-1\">\n                {state.description}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Generation Preview */}\n      <Alert type=\"info\" title=\"What You'll Get\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium\">Generated Files:</h4>\n            <ul className=\"space-y-1\">\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                Complete source code\n              </li>\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                Configuration files\n              </li>\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                Package.json with dependencies\n              </li>\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                Documentation & README\n              </li>\n            </ul>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium\">Setup Options:</h4>\n            <ul className=\"space-y-1\">\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-blue-500 mr-2\" />\n                Download as ZIP\n              </li>\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-blue-500 mr-2\" />\n                Copy to clipboard\n              </li>\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-blue-500 mr-2\" />\n                Auto-setup (optional)\n              </li>\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"w-4 h-4 text-blue-500 mr-2\" />\n                Step-by-step instructions\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Alert>\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-6\">\n        <Button\n          onClick={onPrevious}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<ArrowLeft />}\n        >\n          Previous\n        </Button>\n        \n        <div className=\"flex space-x-3\">\n          <Button\n            onClick={onNext}\n            variant=\"primary\"\n            size=\"lg\"\n            icon={<Settings />}\n          >\n            Generate Solution\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step5Review;","import { BuildConfiguration, GeneratedSolution, GeneratedFile } from '@/types';\nimport { generateBasePackageJson, generateReadme, generateEnvExample, generateGitignore, generateDockerfile } from './index';\n\nexport async function generateDiscordBot(config: BuildConfiguration): Promise<GeneratedSolution> {\n  const files: GeneratedFile[] = [];\n  \n  // Package.json\n  const packageJson = {\n    ...generateBasePackageJson(config),\n    dependencies: {\n      'discord.js': '^14.13.0',\n      dotenv: '^16.3.1',\n      ...(config.priorities.includes('message-persistence') && {\n        mongoose: '^7.4.1',\n      }),\n      ...(config.priorities.includes('session-management') && {\n        redis: '^4.6.7',\n      }),\n      ...(config.features.includes('ai-integration') && {\n        openai: '^3.3.0',\n      }),\n    },\n  };\n\n  // Main index.js\n  const indexJs = `const { Client, GatewayIntentBits, REST, Routes } = require('discord.js');\nconst dotenv = require('dotenv');\n${config.priorities.includes('message-persistence') ? \"const mongoose = require('mongoose');\" : ''}\n${config.priorities.includes('session-management') ? \"const redis = require('redis');\" : ''}\n${config.features.includes('ai-integration') ? \"const { OpenAI } = require('openai');\" : ''}\n\ndotenv.config();\n\n// Initialize Discord client\nconst client = new Client({\n  intents: [\n    GatewayIntentBits.Guilds,\n    GatewayIntentBits.GuildMessages,\n    GatewayIntentBits.MessageContent,\n    ${config.features.includes('context-awareness') ? 'GatewayIntentBits.GuildMembers,' : ''}\n  ],\n});\n\n${config.priorities.includes('session-management') ? `\n// Initialize Redis client\nconst redisClient = redis.createClient({\n  url: process.env.REDIS_URL || 'redis://localhost:6379'\n});\n\nredisClient.on('error', (err) => console.log('Redis Client Error', err));\nredisClient.connect();\n` : ''}\n\n${config.priorities.includes('message-persistence') ? `\n// Initialize MongoDB\nmongoose.connect(process.env.DATABASE_URL || 'mongodb://localhost:27017/${config.projectName.toLowerCase()}');\n\nconst messageSchema = new mongoose.Schema({\n  messageId: String,\n  guildId: String,\n  channelId: String,\n  userId: String,\n  content: String,\n  timestamp: { type: Date, default: Date.now },\n  sessionId: String,\n});\n\nconst Message = mongoose.model('Message', messageSchema);\n` : ''}\n\n${config.features.includes('ai-integration') ? `\n// Initialize OpenAI\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n` : ''}\n\n// Commands\nconst commands = [\n  {\n    name: 'hello',\n    description: 'Replies with a greeting',\n  },\n  ${config.features.includes('conversation-branching') ? `\n  {\n    name: 'thread',\n    description: 'Create a new conversation thread',\n  },\n  ` : ''}\n  ${config.features.includes('context-awareness') ? `\n  {\n    name: 'context',\n    description: 'Show conversation context',\n  },\n  ` : ''}\n];\n\n// Register slash commands\nconst rest = new REST({ version: '10' }).setToken(process.env.DISCORD_TOKEN);\n\n(async () => {\n  try {\n    console.log('Started refreshing application (/) commands.');\n    \n    await rest.put(\n      Routes.applicationCommands(process.env.DISCORD_CLIENT_ID),\n      { body: commands },\n    );\n    \n    console.log('Successfully reloaded application (/) commands.');\n  } catch (error) {\n    console.error(error);\n  }\n})();\n\n// Event handlers\nclient.once('ready', () => {\n  console.log(\\`Ready! Logged in as \\${client.user.tag}\\`);\n});\n\nclient.on('interactionCreate', async (interaction) => {\n  if (!interaction.isChatInputCommand()) return;\n\n  const { commandName } = interaction;\n\n  try {\n    switch (commandName) {\n      case 'hello':\n        await interaction.reply('Hello! I\\\\'m your chat session manager.');\n        break;\n        \n      ${config.features.includes('conversation-branching') ? `\n      case 'thread':\n        const thread = await interaction.channel.threads.create({\n          name: \\`Thread-\\${Date.now()}\\`,\n          autoArchiveDuration: 60,\n          reason: 'New conversation thread',\n        });\n        await interaction.reply(\\`Created new thread: <#\\${thread.id}>\\`);\n        break;\n      ` : ''}\n      \n      ${config.features.includes('context-awareness') ? `\n      case 'context':\n        // Get recent messages for context\n        const messages = await interaction.channel.messages.fetch({ limit: 5 });\n        const context = messages.map(m => \\`\\${m.author.username}: \\${m.content}\\`).join('\\\\n');\n        await interaction.reply(\\`Recent context:\\\\n\\\\\\`\\\\\\`\\\\\\`\\\\n\\${context}\\\\n\\\\\\`\\\\\\`\\\\\\`\\`);\n        break;\n      ` : ''}\n      \n      default:\n        await interaction.reply('Unknown command');\n    }\n\n    ${config.priorities.includes('session-management') ? `\n    // Store session data\n    const sessionId = \\`\\${interaction.guildId}-\\${interaction.user.id}\\`;\n    await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify({\n      userId: interaction.user.id,\n      guildId: interaction.guildId,\n      lastCommand: commandName,\n      timestamp: Date.now(),\n    }));\n    ` : ''}\n\n  } catch (error) {\n    console.error('Error handling interaction:', error);\n    await interaction.reply({ content: 'There was an error executing this command!', ephemeral: true });\n  }\n});\n\n${config.priorities.includes('message-persistence') ? `\nclient.on('messageCreate', async (message) => {\n  if (message.author.bot) return;\n\n  try {\n    // Save message to database\n    const newMessage = new Message({\n      messageId: message.id,\n      guildId: message.guild?.id,\n      channelId: message.channel.id,\n      userId: message.author.id,\n      content: message.content,\n      sessionId: \\`\\${message.guild?.id}-\\${message.author.id}\\`,\n    });\n    \n    await newMessage.save();\n  } catch (error) {\n    console.error('Error saving message:', error);\n  }\n});\n` : ''}\n\n// Error handling\nprocess.on('unhandledRejection', (error) => {\n  console.error('Unhandled promise rejection:', error);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error);\n  process.exit(1);\n});\n\n// Start the bot\nclient.login(process.env.DISCORD_TOKEN);`;\n\n  files.push(\n    { path: 'package.json', content: JSON.stringify(packageJson, null, 2), type: 'config', description: 'Package configuration with dependencies' },\n    { path: 'index.js', content: indexJs, type: 'source', description: 'Main Discord bot application' },\n    { path: 'README.md', content: generateReadme(config), type: 'documentation', description: 'Project documentation' },\n    { path: '.env.example', content: generateEnvExample(config), type: 'config', description: 'Environment variables template' },\n    { path: '.gitignore', content: generateGitignore(), type: 'config', description: 'Git ignore rules' },\n  );\n\n  // Add additional files based on features\n  if (config.features.includes('custom-commands')) {\n    const commandsJs = `// Custom command handlers\nconst customCommands = {\n  // Add your custom commands here\n  ping: {\n    name: 'ping',\n    description: 'Check bot latency',\n    execute: async (interaction) => {\n      const sent = await interaction.reply({ content: 'Pinging...', fetchReply: true });\n      const latency = sent.createdTimestamp - interaction.createdTimestamp;\n      await interaction.editReply(\\`Pong! Latency is \\${latency}ms.\\`);\n    },\n  },\n};\n\nmodule.exports = customCommands;`;\n\n    files.push({\n      path: 'src/commands.js',\n      content: commandsJs,\n      type: 'source',\n      description: 'Custom command definitions'\n    });\n  }\n\n  if (config.features.includes('webhooks')) {\n    const webhookJs = `const express = require('express');\nconst crypto = require('crypto');\n\nconst app = express();\napp.use(express.json());\n\n// Webhook verification middleware\nconst verifyWebhook = (req, res, next) => {\n  const signature = req.headers['x-webhook-signature'];\n  const expectedSignature = crypto\n    .createHmac('sha256', process.env.WEBHOOK_SECRET)\n    .update(JSON.stringify(req.body))\n    .digest('hex');\n  \n  if (signature !== \\`sha256=\\${expectedSignature}\\`) {\n    return res.status(401).json({ error: 'Unauthorized' });\n  }\n  \n  next();\n};\n\n// Webhook endpoint\napp.post('/webhook', verifyWebhook, (req, res) => {\n  const { type, data } = req.body;\n  \n  // Process webhook data\n  console.log('Received webhook:', type, data);\n  \n  // Send to Discord channel if needed\n  // client.channels.cache.get(CHANNEL_ID).send(\\`Webhook received: \\${type}\\`);\n  \n  res.json({ success: true });\n});\n\nconst PORT = process.env.WEBHOOK_PORT || 3001;\napp.listen(PORT, () => {\n  console.log(\\`Webhook server running on port \\${PORT}\\`);\n});\n\nmodule.exports = app;`;\n\n    files.push({\n      path: 'src/webhook.js',\n      content: webhookJs,\n      type: 'source',\n      description: 'Webhook server for external integrations'\n    });\n  }\n\n  // Add Docker support\n  files.push({\n    path: 'Dockerfile',\n    content: generateDockerfile(config),\n    type: 'config',\n    description: 'Docker container configuration'\n  });\n\n  return {\n    platform: config.platform,\n    files,\n    packageJson,\n    readme: generateReadme(config),\n    setupInstructions: [\n      '1. Install Node.js 18+ and npm',\n      '2. Run \"npm install\" to install dependencies',\n      '3. Copy .env.example to .env and fill in your Discord bot token',\n      '4. Create a Discord application at https://discord.com/developers/applications',\n      '5. Create a bot and copy the token to your .env file',\n      '6. Invite the bot to your server with appropriate permissions',\n      '7. Run \"npm run dev\" to start development server',\n      '8. Use slash commands in your Discord server to test the bot'\n    ],\n    estimatedTime: '2-4 hours',\n    complexity: 'intermediate',\n  };\n}","import { BuildConfiguration, GeneratedSolution, GeneratedFile } from '@/types';\nimport { generateBasePackageJson, generateReadme, generateEnvExample, generateGitignore, generateDockerfile } from './index';\n\nexport async function generateTelegramBot(config: BuildConfiguration): Promise<GeneratedSolution> {\n  const files: GeneratedFile[] = [];\n  \n  // Package.json\n  const packageJson = {\n    ...generateBasePackageJson(config),\n    dependencies: {\n      'node-telegram-bot-api': '^0.63.0',\n      dotenv: '^16.3.1',\n      ...(config.priorities.includes('message-persistence') && {\n        mongoose: '^7.4.1',\n      }),\n      ...(config.priorities.includes('session-management') && {\n        redis: '^4.6.7',\n      }),\n      ...(config.features.includes('ai-integration') && {\n        openai: '^3.3.0',\n      }),\n    },\n  };\n\n  // Main index.js\n  const indexJs = `const TelegramBot = require('node-telegram-bot-api');\nconst dotenv = require('dotenv');\n${config.priorities.includes('message-persistence') ? \"const mongoose = require('mongoose');\" : ''}\n${config.priorities.includes('session-management') ? \"const redis = require('redis');\" : ''}\n${config.features.includes('ai-integration') ? \"const { OpenAI } = require('openai');\" : ''}\n\ndotenv.config();\n\n// Initialize Telegram bot\nconst bot = new TelegramBot(process.env.TELEGRAM_TOKEN, { polling: true });\n\n${config.priorities.includes('session-management') ? `\n// Initialize Redis client\nconst redisClient = redis.createClient({\n  url: process.env.REDIS_URL || 'redis://localhost:6379'\n});\n\nredisClient.on('error', (err) => console.log('Redis Client Error', err));\nredisClient.connect();\n` : ''}\n\n${config.priorities.includes('message-persistence') ? `\n// Initialize MongoDB\nmongoose.connect(process.env.DATABASE_URL || 'mongodb://localhost:27017/${config.projectName.toLowerCase()}');\n\nconst messageSchema = new mongoose.Schema({\n  messageId: Number,\n  chatId: Number,\n  userId: Number,\n  username: String,\n  text: String,\n  timestamp: { type: Date, default: Date.now },\n  sessionId: String,\n});\n\nconst Message = mongoose.model('Message', messageSchema);\n` : ''}\n\n${config.features.includes('ai-integration') ? `\n// Initialize OpenAI\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n` : ''}\n\n// Bot commands\nbot.onText(/\\\\/start/, async (msg) => {\n  const chatId = msg.chat.id;\n  const welcomeMessage = \\`\nWelcome to ${config.projectName}!\n\nAvailable commands:\n/start - Show this welcome message\n/help - Get help\n${config.features.includes('context-awareness') ? '/context - Show conversation context' : ''}\n${config.features.includes('custom-commands') ? '/custom - Run custom command' : ''}\n${config.features.includes('ai-integration') ? '/ask - Ask AI a question' : ''}\n\nType any message to interact with the bot!\n  \\`;\n  \n  await bot.sendMessage(chatId, welcomeMessage);\n  \n  ${config.priorities.includes('session-management') ? `\n  // Initialize user session\n  const sessionId = \\`telegram-\\${msg.from.id}\\`;\n  await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify({\n    userId: msg.from.id,\n    chatId: chatId,\n    username: msg.from.username,\n    startedAt: Date.now(),\n  }));\n  ` : ''}\n});\n\nbot.onText(/\\\\/help/, async (msg) => {\n  const chatId = msg.chat.id;\n  const helpText = \\`\n${config.projectName} Help\n\nThis bot helps you manage chat sessions with the following features:\n\\${config.priorities.map(p => \\`• \\${p.replace('-', ' ').replace(/\\\\\\\\b\\\\\\\\w/g, l => l.toUpperCase())}\\`).join('\\\\\\\\n')}\n\nFor more information, contact the administrator.\n  \\`;\n  \n  await bot.sendMessage(chatId, helpText);\n});\n\n${config.features.includes('context-awareness') ? `\nbot.onText(/\\\\/context/, async (msg) => {\n  const chatId = msg.chat.id;\n  const sessionId = \\`telegram-\\${msg.from.id}\\`;\n  \n  try {\n    ${config.priorities.includes('session-management') ? `\n    const sessionData = await redisClient.get(\\`session:\\${sessionId}\\`);\n    if (sessionData) {\n      const session = JSON.parse(sessionData);\n      await bot.sendMessage(chatId, \\`Session started: \\${new Date(session.startedAt).toLocaleString()}\\`);\n    }\n    ` : ''}\n    \n    ${config.priorities.includes('message-persistence') ? `\n    const recentMessages = await Message.find({ \n      chatId: chatId \n    }).sort({ timestamp: -1 }).limit(5);\n    \n    if (recentMessages.length > 0) {\n      const context = recentMessages.reverse().map(m => \n        \\`\\${m.username || 'User'}: \\${m.text}\\`\n      ).join('\\\\n');\n      await bot.sendMessage(chatId, \\`Recent context:\\\\n\\\\n\\${context}\\`);\n    } else {\n      await bot.sendMessage(chatId, 'No recent context found.');\n    }\n    ` : 'await bot.sendMessage(chatId, \"Context tracking not enabled.\");'}\n  } catch (error) {\n    console.error('Error getting context:', error);\n    await bot.sendMessage(chatId, 'Error retrieving context.');\n  }\n});\n` : ''}\n\n${config.features.includes('ai-integration') ? `\nbot.onText(/\\\\/ask (.+)/, async (msg, match) => {\n  const chatId = msg.chat.id;\n  const question = match[1];\n  \n  try {\n    await bot.sendMessage(chatId, 'Thinking...', { reply_to_message_id: msg.message_id });\n    \n    const completion = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        { role: \"system\", content: \"You are a helpful assistant integrated into a Telegram bot.\" },\n        { role: \"user\", content: question }\n      ],\n      max_tokens: 500\n    });\n    \n    const answer = completion.choices[0].message.content;\n    await bot.sendMessage(chatId, answer, { \n      parse_mode: 'Markdown',\n      reply_to_message_id: msg.message_id \n    });\n    \n  } catch (error) {\n    console.error('AI Error:', error);\n    await bot.sendMessage(chatId, 'Sorry, I encountered an error processing your request.');\n  }\n});\n` : ''}\n\n// Handle all text messages\nbot.on('message', async (msg) => {\n  // Skip if it's a command (starts with /)\n  if (msg.text && msg.text.startsWith('/')) return;\n  \n  const chatId = msg.chat.id;\n  const sessionId = \\`telegram-\\${msg.from.id}\\`;\n  \n  try {\n    ${config.priorities.includes('message-persistence') ? `\n    // Save message to database\n    const newMessage = new Message({\n      messageId: msg.message_id,\n      chatId: chatId,\n      userId: msg.from.id,\n      username: msg.from.username || msg.from.first_name,\n      text: msg.text,\n      sessionId: sessionId,\n    });\n    \n    await newMessage.save();\n    ` : ''}\n    \n    ${config.priorities.includes('session-management') ? `\n    // Update session\n    const sessionData = await redisClient.get(\\`session:\\${sessionId}\\`);\n    if (sessionData) {\n      const session = JSON.parse(sessionData);\n      session.lastActivity = Date.now();\n      session.messageCount = (session.messageCount || 0) + 1;\n      await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify(session));\n    }\n    ` : ''}\n    \n    // Simple echo response (customize as needed)\n    if (msg.text) {\n      await bot.sendMessage(chatId, \\`You said: \"\\${msg.text}\"\\`);\n    }\n    \n  } catch (error) {\n    console.error('Error processing message:', error);\n  }\n});\n\n${config.features.includes('file-attachments') ? `\n// Handle file uploads\nbot.on('photo', async (msg) => {\n  const chatId = msg.chat.id;\n  const photo = msg.photo[msg.photo.length - 1]; // Get highest resolution\n  \n  try {\n    const fileInfo = await bot.getFile(photo.file_id);\n    const fileUrl = \\`https://api.telegram.org/file/bot\\${process.env.TELEGRAM_TOKEN}/\\${fileInfo.file_path}\\`;\n    \n    await bot.sendMessage(chatId, \\`Photo received! File URL: \\${fileUrl}\\`);\n    \n    // Here you could download and process the file\n    // const response = await fetch(fileUrl);\n    // const buffer = await response.buffer();\n    // ... process the file\n    \n  } catch (error) {\n    console.error('Error handling photo:', error);\n    await bot.sendMessage(chatId, 'Error processing your photo.');\n  }\n});\n\nbot.on('document', async (msg) => {\n  const chatId = msg.chat.id;\n  const document = msg.document;\n  \n  try {\n    const fileInfo = await bot.getFile(document.file_id);\n    const fileUrl = \\`https://api.telegram.org/file/bot\\${process.env.TELEGRAM_TOKEN}/\\${fileInfo.file_path}\\`;\n    \n    await bot.sendMessage(chatId, \\`Document received: \\${document.file_name}\\\\nSize: \\${document.file_size} bytes\\`);\n    \n  } catch (error) {\n    console.error('Error handling document:', error);\n    await bot.sendMessage(chatId, 'Error processing your document.');\n  }\n});\n` : ''}\n\n// Error handling\nbot.on('polling_error', (error) => {\n  console.error('Polling error:', error);\n});\n\nprocess.on('unhandledRejection', (error) => {\n  console.error('Unhandled promise rejection:', error);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error);\n  process.exit(1);\n});\n\nconsole.log('Telegram bot started successfully!');`;\n\n  files.push(\n    { path: 'package.json', content: JSON.stringify(packageJson, null, 2), type: 'config', description: 'Package configuration with dependencies' },\n    { path: 'index.js', content: indexJs, type: 'source', description: 'Main Telegram bot application' },\n    { path: 'README.md', content: generateReadme(config), type: 'documentation', description: 'Project documentation' },\n    { path: '.env.example', content: generateEnvExample(config), type: 'config', description: 'Environment variables template' },\n    { path: '.gitignore', content: generateGitignore(), type: 'config', description: 'Git ignore rules' },\n  );\n\n  // Add custom commands file\n  if (config.features.includes('custom-commands')) {\n    const customCommandsJs = `// Custom command handlers for Telegram bot\nconst customCommands = {\n  // Example custom command\n  '/status': async (bot, msg) => {\n    const chatId = msg.chat.id;\n    const uptime = process.uptime();\n    const uptimeString = new Date(uptime * 1000).toISOString().substr(11, 8);\n    \n    await bot.sendMessage(chatId, \\`\n🤖 Bot Status:\nUptime: \\${uptimeString}\nMemory Usage: \\${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)} MB\nNode.js: \\${process.version}\n    \\`);\n  },\n  \n  '/weather': async (bot, msg) => {\n    const chatId = msg.chat.id;\n    // Integrate with weather API\n    await bot.sendMessage(chatId, 'Weather feature not implemented yet. Add your weather API integration here!');\n  },\n  \n  // Add your custom commands here\n};\n\nmodule.exports = customCommands;`;\n\n    files.push({\n      path: 'src/customCommands.js',\n      content: customCommandsJs,\n      type: 'source',\n      description: 'Custom command definitions'\n    });\n  }\n\n  // Add Docker support\n  files.push({\n    path: 'Dockerfile',\n    content: generateDockerfile(config),\n    type: 'config',\n    description: 'Docker container configuration'\n  });\n\n  return {\n    platform: config.platform,\n    files,\n    packageJson,\n    readme: generateReadme(config),\n    setupInstructions: [\n      '1. Install Node.js 18+ and npm',\n      '2. Run \"npm install\" to install dependencies',\n      '3. Create a Telegram bot by messaging @BotFather on Telegram',\n      '4. Copy the bot token from @BotFather',\n      '5. Copy .env.example to .env and add your bot token',\n      '6. Run \"npm run dev\" to start development server',\n      '7. Start a chat with your bot on Telegram',\n      '8. Send /start to begin interacting with your bot'\n    ],\n    estimatedTime: '1-3 hours',\n    complexity: 'basic',\n  };\n}","import { BuildConfiguration, GeneratedSolution, GeneratedFile } from '@/types';\nimport { generateBasePackageJson, generateReadme, generateEnvExample, generateGitignore, generateDockerfile } from './index';\n\nexport async function generateWhatsAppBot(config: BuildConfiguration): Promise<GeneratedSolution> {\n  const files: GeneratedFile[] = [];\n  \n  // Package.json\n  const packageJson = {\n    ...generateBasePackageJson(config),\n    dependencies: {\n      'whatsapp-web.js': '^1.22.2',\n      'qrcode-terminal': '^0.12.0',\n      dotenv: '^16.3.1',\n      ...(config.priorities.includes('message-persistence') && {\n        mongoose: '^7.4.1',\n      }),\n      ...(config.priorities.includes('session-management') && {\n        redis: '^4.6.7',\n      }),\n      ...(config.features.includes('ai-integration') && {\n        openai: '^3.3.0',\n      }),\n    },\n  };\n\n  // Main index.js\n  const indexJs = `const { Client, LocalAuth } = require('whatsapp-web.js');\nconst qrcode = require('qrcode-terminal');\nconst dotenv = require('dotenv');\n${config.priorities.includes('message-persistence') ? \"const mongoose = require('mongoose');\" : ''}\n${config.priorities.includes('session-management') ? \"const redis = require('redis');\" : ''}\n${config.features.includes('ai-integration') ? \"const { OpenAI } = require('openai');\" : ''}\n\ndotenv.config();\n\n// Initialize WhatsApp client with local authentication\nconst client = new Client({\n  authStrategy: new LocalAuth({\n    clientId: \"${config.projectName.toLowerCase()}\",\n    dataPath: './sessions'\n  }),\n  puppeteer: {\n    headless: true,\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-dev-shm-usage',\n      '--disable-accelerated-2d-canvas',\n      '--no-first-run',\n      '--no-zygote',\n      '--single-process',\n      '--disable-gpu'\n    ]\n  }\n});\n\n${config.priorities.includes('session-management') ? `\n// Initialize Redis client\nconst redisClient = redis.createClient({\n  url: process.env.REDIS_URL || 'redis://localhost:6379'\n});\n\nredisClient.on('error', (err) => console.log('Redis Client Error', err));\nredisClient.connect();\n` : ''}\n\n${config.priorities.includes('message-persistence') ? `\n// Initialize MongoDB\nmongoose.connect(process.env.DATABASE_URL || 'mongodb://localhost:27017/${config.projectName.toLowerCase()}');\n\nconst messageSchema = new mongoose.Schema({\n  messageId: String,\n  from: String,\n  to: String,\n  body: String,\n  timestamp: { type: Date, default: Date.now },\n  isGroup: Boolean,\n  groupName: String,\n  sessionId: String,\n  hasMedia: Boolean,\n  mediaType: String,\n});\n\nconst Message = mongoose.model('Message', messageSchema);\n` : ''}\n\n${config.features.includes('ai-integration') ? `\n// Initialize OpenAI\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n` : ''}\n\n// Event handlers\nclient.on('qr', (qr) => {\n  console.log('Scan the QR code below to login:');\n  qrcode.generate(qr, { small: true });\n  console.log('Or use your phone to scan the QR code in the terminal above.');\n});\n\nclient.on('authenticated', () => {\n  console.log('WhatsApp authenticated successfully!');\n});\n\nclient.on('auth_failure', (msg) => {\n  console.error('Authentication failed:', msg);\n});\n\nclient.on('ready', () => {\n  console.log('WhatsApp client is ready!');\n  console.log('Bot is now active and listening for messages.');\n});\n\nclient.on('disconnected', (reason) => {\n  console.log('WhatsApp client disconnected:', reason);\n});\n\n// Message handling\nclient.on('message_create', async (message) => {\n  // Skip messages sent by this bot\n  if (message.fromMe) return;\n  \n  const contact = await message.getContact();\n  const chat = await message.getChat();\n  const sessionId = \\`whatsapp-\\${contact.number}\\`;\n  \n  try {\n    ${config.priorities.includes('message-persistence') ? `\n    // Save message to database\n    const newMessage = new Message({\n      messageId: message.id._serialized,\n      from: contact.number,\n      to: message.to,\n      body: message.body,\n      isGroup: chat.isGroup,\n      groupName: chat.isGroup ? chat.name : null,\n      sessionId: sessionId,\n      hasMedia: message.hasMedia,\n      mediaType: message.hasMedia ? message.type : null,\n    });\n    \n    await newMessage.save();\n    ` : ''}\n    \n    ${config.priorities.includes('session-management') ? `\n    // Update session\n    const sessionData = await redisClient.get(\\`session:\\${sessionId}\\`);\n    const session = sessionData ? JSON.parse(sessionData) : {\n      contactNumber: contact.number,\n      contactName: contact.pushname || contact.name,\n      startedAt: Date.now(),\n    };\n    \n    session.lastActivity = Date.now();\n    session.messageCount = (session.messageCount || 0) + 1;\n    await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify(session));\n    ` : ''}\n    \n  } catch (error) {\n    console.error('Error processing message:', error);\n  }\n});\n\nclient.on('message', async (message) => {\n  const contact = await message.getContact();\n  const chat = await message.getChat();\n  \n  // Command handling\n  const command = message.body.toLowerCase().trim();\n  \n  switch (command) {\n    case '!help':\n      await message.reply(\\`\nWelcome to ${config.projectName}!\n\nAvailable commands:\n!help - Show this help message\n!status - Show bot status\n${config.features.includes('context-awareness') ? '!context - Show conversation context' : ''}\n${config.features.includes('ai-integration') ? '!ask [question] - Ask AI a question' : ''}\n${config.features.includes('backup-restore') ? '!backup - Backup your conversation data' : ''}\n\nJust send a regular message to chat with the bot!\n      \\`);\n      break;\n      \n    case '!status':\n      const uptime = process.uptime();\n      const uptimeString = new Date(uptime * 1000).toISOString().substr(11, 8);\n      await message.reply(\\`\n🤖 Bot Status:\nUptime: \\${uptimeString}\nContact: \\${contact.pushname || contact.name}\nChat Type: \\${chat.isGroup ? 'Group' : 'Individual'}\n      \\`);\n      break;\n      \n    ${config.features.includes('context-awareness') ? `\n    case '!context':\n      try {\n        const sessionId = \\`whatsapp-\\${contact.number}\\`;\n        ${config.priorities.includes('message-persistence') ? `\n        const recentMessages = await Message.find({\n          $or: [\n            { from: contact.number },\n            { to: contact.number }\n          ]\n        }).sort({ timestamp: -1 }).limit(5);\n        \n        if (recentMessages.length > 0) {\n          const context = recentMessages.reverse().map(m => \n            \\`\\${m.from === contact.number ? 'You' : 'Bot'}: \\${m.body}\\`\n          ).join('\\\\n');\n          await message.reply(\\`Recent context:\\\\n\\\\n\\${context}\\`);\n        } else {\n          await message.reply('No recent context found.');\n        }\n        ` : 'await message.reply(\"Message persistence not enabled for context.\");'}\n      } catch (error) {\n        console.error('Error getting context:', error);\n        await message.reply('Error retrieving context.');\n      }\n      break;\n    ` : ''}\n    \n    ${config.features.includes('ai-integration') ? `\n    default:\n      if (command.startsWith('!ask ')) {\n        const question = message.body.slice(5);\n        try {\n          await chat.sendStateTyping();\n          \n          const completion = await openai.chat.completions.create({\n            model: \"gpt-3.5-turbo\",\n            messages: [\n              { role: \"system\", content: \"You are a helpful assistant integrated into a WhatsApp bot. Keep responses concise.\" },\n              { role: \"user\", content: question }\n            ],\n            max_tokens: 300\n          });\n          \n          const answer = completion.choices[0].message.content;\n          await message.reply(answer);\n          \n        } catch (error) {\n          console.error('AI Error:', error);\n          await message.reply('Sorry, I encountered an error processing your request.');\n        }\n      } else if (!command.startsWith('!')) {\n        // Handle regular messages\n        await message.reply(\\`Thanks for your message: \"\\${message.body}\"\\`);\n      }\n      break;\n    ` : `\n    default:\n      if (!command.startsWith('!')) {\n        // Handle regular messages\n        await message.reply(\\`Thanks for your message: \"\\${message.body}\"\\`);\n      }\n      break;\n    `}\n  }\n});\n\n${config.features.includes('file-attachments') ? `\n// Handle media messages\nclient.on('message', async (message) => {\n  if (message.hasMedia) {\n    try {\n      const media = await message.downloadMedia();\n      \n      if (media) {\n        console.log(\\`Received media: \\${media.mimetype}, size: \\${media.data.length}\\`);\n        \n        // Here you can process the media file\n        // For example, save it to disk or upload to cloud storage\n        \n        await message.reply(\\`Received your \\${media.mimetype} file! File size: \\${Math.round(media.data.length / 1024)}KB\\`);\n      }\n    } catch (error) {\n      console.error('Error handling media:', error);\n      await message.reply('Sorry, I had trouble processing your media file.');\n    }\n  }\n});\n` : ''}\n\n${config.features.includes('backup-restore') ? `\n// Backup functionality\nclient.on('message', async (message) => {\n  if (message.body.toLowerCase() === '!backup') {\n    const contact = await message.getContact();\n    const sessionId = \\`whatsapp-\\${contact.number}\\`;\n    \n    try {\n      ${config.priorities.includes('message-persistence') ? `\n      const messages = await Message.find({\n        $or: [\n          { from: contact.number },\n          { to: contact.number }\n        ]\n      }).sort({ timestamp: 1 });\n      \n      const backup = {\n        contact: {\n          number: contact.number,\n          name: contact.pushname || contact.name,\n        },\n        messages: messages,\n        backupDate: new Date(),\n      };\n      \n      // In a real implementation, you'd save this to a file or cloud storage\n      await message.reply(\\`Backup created with \\${messages.length} messages from your conversation history.\\`);\n      ` : 'await message.reply(\"Message persistence not enabled for backups.\");'}\n      \n    } catch (error) {\n      console.error('Backup error:', error);\n      await message.reply('Error creating backup.');\n    }\n  }\n});\n` : ''}\n\n// Error handling\nprocess.on('unhandledRejection', (error) => {\n  console.error('Unhandled promise rejection:', error);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error);\n  process.exit(1);\n});\n\n// Graceful shutdown\nprocess.on('SIGINT', async () => {\n  console.log('Shutting down WhatsApp bot...');\n  await client.destroy();\n  process.exit(0);\n});\n\n// Start the client\nclient.initialize();`;\n\n  files.push(\n    { path: 'package.json', content: JSON.stringify(packageJson, null, 2), type: 'config', description: 'Package configuration with dependencies' },\n    { path: 'index.js', content: indexJs, type: 'source', description: 'Main WhatsApp bot application' },\n    { path: 'README.md', content: generateReadme(config), type: 'documentation', description: 'Project documentation' },\n    { path: '.env.example', content: generateEnvExample(config), type: 'config', description: 'Environment variables template' },\n    { path: '.gitignore', content: generateGitignore(), type: 'config', description: 'Git ignore rules' },\n  );\n\n  // Add session helper\n  files.push({\n    path: 'src/sessionManager.js',\n    content: `// WhatsApp session management utilities\nclass SessionManager {\n  constructor(redisClient) {\n    this.redis = redisClient;\n  }\n  \n  async createSession(contactNumber, data) {\n    const sessionId = \\`whatsapp-\\${contactNumber}\\`;\n    await this.redis.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify({\n      ...data,\n      createdAt: Date.now(),\n      lastActivity: Date.now(),\n    }));\n    return sessionId;\n  }\n  \n  async getSession(contactNumber) {\n    const sessionId = \\`whatsapp-\\${contactNumber}\\`;\n    const data = await this.redis.get(\\`session:\\${sessionId}\\`);\n    return data ? JSON.parse(data) : null;\n  }\n  \n  async updateSession(contactNumber, updates) {\n    const session = await this.getSession(contactNumber);\n    if (session) {\n      const updated = { ...session, ...updates, lastActivity: Date.now() };\n      await this.createSession(contactNumber, updated);\n    }\n  }\n  \n  async deleteSession(contactNumber) {\n    const sessionId = \\`whatsapp-\\${contactNumber}\\`;\n    await this.redis.del(\\`session:\\${sessionId}\\`);\n  }\n}\n\nmodule.exports = SessionManager;`,\n    type: 'source',\n    description: 'Session management utilities'\n  });\n\n  // Add Docker support\n  files.push({\n    path: 'Dockerfile',\n    content: generateDockerfile(config),\n    type: 'config',\n    description: 'Docker container configuration'\n  });\n\n  return {\n    platform: config.platform,\n    files,\n    packageJson,\n    readme: generateReadme(config),\n    setupInstructions: [\n      '1. Install Node.js 18+ and npm',\n      '2. Run \"npm install\" to install dependencies',\n      '3. Copy .env.example to .env (no API keys needed for WhatsApp Web)',\n      '4. Run \"npm run dev\" to start the bot',\n      '5. Scan the QR code with your WhatsApp mobile app',\n      '6. Go to WhatsApp > Settings > Linked Devices > Link a Device',\n      '7. Scan the QR code displayed in your terminal',\n      '8. Once connected, send \"!help\" to any WhatsApp contact to test'\n    ],\n    estimatedTime: '3-5 hours',\n    complexity: 'advanced',\n  };\n}","import { BuildConfiguration, GeneratedSolution, GeneratedFile } from '@/types';\nimport { generateBasePackageJson, generateReadme, generateEnvExample, generateGitignore, generateDockerfile } from './index';\n\nexport async function generateSlackApp(config: BuildConfiguration): Promise<GeneratedSolution> {\n  const files: GeneratedFile[] = [];\n  \n  // Package.json\n  const packageJson = {\n    ...generateBasePackageJson(config),\n    dependencies: {\n      '@slack/bolt': '^3.14.0',\n      dotenv: '^16.3.1',\n      ...(config.priorities.includes('message-persistence') && {\n        mongoose: '^7.4.1',\n      }),\n      ...(config.priorities.includes('session-management') && {\n        redis: '^4.6.7',\n      }),\n      ...(config.features.includes('ai-integration') && {\n        openai: '^3.3.0',\n      }),\n    },\n  };\n\n  // Main index.js\n  const indexJs = `const { App } = require('@slack/bolt');\nconst dotenv = require('dotenv');\n${config.priorities.includes('message-persistence') ? \"const mongoose = require('mongoose');\" : ''}\n${config.priorities.includes('session-management') ? \"const redis = require('redis');\" : ''}\n${config.features.includes('ai-integration') ? \"const { OpenAI } = require('openai');\" : ''}\n\ndotenv.config();\n\n// Initialize Slack app\nconst app = new App({\n  token: process.env.SLACK_BOT_TOKEN,\n  signingSecret: process.env.SLACK_SIGNING_SECRET,\n  socketMode: true,\n  appToken: process.env.SLACK_APP_TOKEN,\n  port: process.env.PORT || 3000,\n});\n\n${config.priorities.includes('session-management') ? `\n// Initialize Redis client\nconst redisClient = redis.createClient({\n  url: process.env.REDIS_URL || 'redis://localhost:6379'\n});\n\nredisClient.on('error', (err) => console.log('Redis Client Error', err));\nredisClient.connect();\n` : ''}\n\n${config.priorities.includes('message-persistence') ? `\n// Initialize MongoDB\nmongoose.connect(process.env.DATABASE_URL || 'mongodb://localhost:27017/${config.projectName.toLowerCase()}');\n\nconst messageSchema = new mongoose.Schema({\n  messageTs: String,\n  channelId: String,\n  userId: String,\n  userName: String,\n  text: String,\n  timestamp: { type: Date, default: Date.now },\n  teamId: String,\n  sessionId: String,\n  threadTs: String,\n});\n\nconst Message = mongoose.model('Message', messageSchema);\n` : ''}\n\n${config.features.includes('ai-integration') ? `\n// Initialize OpenAI\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n` : ''}\n\n// Command handlers\napp.command('/hello', async ({ command, ack, respond }) => {\n  await ack();\n  \n  await respond({\n    text: \\`Hello <@\\${command.user_id}>! Welcome to ${config.projectName}.\\`,\n    blocks: [\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: \\`Hello <@\\${command.user_id}>! Welcome to *${config.projectName}*.\\`\n        }\n      },\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: 'Available commands:\\\\n• \\`/hello\\` - Show this greeting\\\\n• \\`/help\\` - Get help${config.features.includes('context-awareness') ? '\\\\n• \\`/context\\` - Show conversation context' : ''}${config.features.includes('ai-integration') ? '\\\\n• \\`/ask [question]\\` - Ask AI a question' : ''}'\n        }\n      }\n    ]\n  });\n  \n  ${config.priorities.includes('session-management') ? `\n  // Create or update user session\n  const sessionId = \\`slack-\\${command.team_id}-\\${command.user_id}\\`;\n  await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify({\n    userId: command.user_id,\n    teamId: command.team_id,\n    channelId: command.channel_id,\n    lastCommand: 'hello',\n    timestamp: Date.now(),\n  }));\n  ` : ''}\n});\n\napp.command('/help', async ({ command, ack, respond }) => {\n  await ack();\n  \n  await respond({\n    text: 'Help for ${config.projectName}',\n    blocks: [\n      {\n        type: 'header',\n        text: {\n          type: 'plain_text',\n          text: '${config.projectName} Help'\n        }\n      },\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: 'This Slack app provides chat session management with the following features:'\n        }\n      },\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: \\`\\${config.priorities.map(p => \\`• *\\${p.replace('-', ' ').replace(/\\\\\\\\b\\\\\\\\w/g, l => l.toUpperCase())}*\\`).join('\\\\\\\\n')}\\`\n        }\n      },\n      ${config.features.length > 0 ? `\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: \\`Additional features:\\\\\\\\n\\${config.features.map(f => \\`• \\${f.replace('-', ' ').replace(/\\\\\\\\b\\\\\\\\w/g, l => l.toUpperCase())}\\`).join('\\\\\\\\n')}\\`\n        }\n      },\n      ` : ''}\n      {\n        type: 'context',\n        elements: [\n          {\n            type: 'mrkdwn',\n            text: 'For support, contact your system administrator.'\n          }\n        ]\n      }\n    ]\n  });\n});\n\n${config.features.includes('context-awareness') ? `\napp.command('/context', async ({ command, ack, respond }) => {\n  await ack();\n  \n  try {\n    const sessionId = \\`slack-\\${command.team_id}-\\${command.user_id}\\`;\n    \n    ${config.priorities.includes('message-persistence') ? `\n    const recentMessages = await Message.find({\n      channelId: command.channel_id,\n      teamId: command.team_id\n    }).sort({ timestamp: -1 }).limit(5);\n    \n    if (recentMessages.length > 0) {\n      const context = recentMessages.reverse().map(m => \n        \\`<@\\${m.userId}>: \\${m.text}\\`\n      ).join('\\\\n');\n      \n      await respond({\n        text: 'Recent conversation context',\n        blocks: [\n          {\n            type: 'section',\n            text: {\n              type: 'mrkdwn',\n              text: '*Recent Context:*\\\\n\\`\\`\\`\\\\n' + context + '\\\\n\\`\\`\\`'\n            }\n          }\n        ]\n      });\n    } else {\n      await respond('No recent context found in this channel.');\n    }\n    ` : 'await respond(\"Message persistence not enabled for context.\");'}\n    \n  } catch (error) {\n    console.error('Error getting context:', error);\n    await respond('Error retrieving context.');\n  }\n});\n` : ''}\n\n${config.features.includes('ai-integration') ? `\napp.command('/ask', async ({ command, ack, respond }) => {\n  await ack();\n  \n  const question = command.text.trim();\n  if (!question) {\n    await respond('Please provide a question. Example: \\`/ask What is the weather like?\\`');\n    return;\n  }\n  \n  try {\n    await respond({\n      text: 'Thinking...',\n      response_type: 'ephemeral'\n    });\n    \n    const completion = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        { role: \"system\", content: \"You are a helpful assistant integrated into a Slack bot. Keep responses professional and concise.\" },\n        { role: \"user\", content: question }\n      ],\n      max_tokens: 500\n    });\n    \n    const answer = completion.choices[0].message.content;\n    \n    await respond({\n      text: \\`AI Response to: \"\\${question}\"\\`,\n      blocks: [\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: \\`*Question:* \\${question}\\\\n\\\\n*AI Response:*\\\\n\\${answer}\\`\n          }\n        }\n      ]\n    });\n    \n  } catch (error) {\n    console.error('AI Error:', error);\n    await respond('Sorry, I encountered an error processing your request.');\n  }\n});\n` : ''}\n\n// Message handling\napp.message(async ({ message, say }) => {\n  // Skip bot messages and threaded replies (unless specifically handling threads)\n  if (message.subtype || message.bot_id) return;\n  \n  const sessionId = \\`slack-\\${message.team}-\\${message.user}\\`;\n  \n  try {\n    ${config.priorities.includes('message-persistence') ? `\n    // Save message to database\n    const newMessage = new Message({\n      messageTs: message.ts,\n      channelId: message.channel,\n      userId: message.user,\n      text: message.text,\n      teamId: message.team,\n      sessionId: sessionId,\n      threadTs: message.thread_ts,\n    });\n    \n    await newMessage.save();\n    ` : ''}\n    \n    ${config.priorities.includes('session-management') ? `\n    // Update session\n    const sessionData = await redisClient.get(\\`session:\\${sessionId}\\`);\n    const session = sessionData ? JSON.parse(sessionData) : {\n      userId: message.user,\n      teamId: message.team,\n      startedAt: Date.now(),\n    };\n    \n    session.lastActivity = Date.now();\n    session.lastChannelId = message.channel;\n    session.messageCount = (session.messageCount || 0) + 1;\n    await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify(session));\n    ` : ''}\n    \n    // Simple response logic (customize as needed)\n    if (message.text && message.text.toLowerCase().includes('hello')) {\n      await say(\\`Hello <@\\${message.user}>! Use \\`/hello\\` for more options.\\`);\n    }\n    \n  } catch (error) {\n    console.error('Error processing message:', error);\n  }\n});\n\n${config.features.includes('conversation-branching') ? `\n// Handle thread messages\napp.message(async ({ message, say }) => {\n  if (message.thread_ts && !message.bot_id) {\n    try {\n      // This is a thread reply\n      await say({\n        text: \\`Thread reply received: \"\\${message.text}\"\\`,\n        thread_ts: message.thread_ts\n      });\n      \n      ${config.priorities.includes('message-persistence') ? `\n      // Update message with thread info\n      await Message.findOneAndUpdate(\n        { messageTs: message.ts },\n        { threadTs: message.thread_ts }\n      );\n      ` : ''}\n      \n    } catch (error) {\n      console.error('Error handling thread message:', error);\n    }\n  }\n});\n` : ''}\n\n${config.features.includes('webhooks') ? `\n// Webhook endpoint for external integrations\napp.event('app_mention', async ({ event, say }) => {\n  try {\n    await say({\n      text: \\`Thanks for mentioning me, <@\\${event.user}>!\\`,\n      channel: event.channel\n    });\n    \n    // Process external webhook data if needed\n    // This could trigger based on external events\n    \n  } catch (error) {\n    console.error('Error handling mention:', error);\n  }\n});\n` : ''}\n\n${config.features.includes('file-attachments') ? `\n// Handle file uploads\napp.event('file_shared', async ({ event, client }) => {\n  try {\n    const fileInfo = await client.files.info({\n      file: event.file_id\n    });\n    \n    console.log('File shared:', fileInfo.file);\n    \n    // Process the file as needed\n    // You could download, analyze, or store file metadata\n    \n  } catch (error) {\n    console.error('Error handling file:', error);\n  }\n});\n` : ''}\n\n${config.priorities.includes('user-authentication') ? `\n// User authentication and authorization\napp.use(async ({ next, context }) => {\n  // Add user validation logic here\n  const userId = context.userId;\n  const teamId = context.teamId;\n  \n  // Example: Check if user has permission\n  // const hasPermission = await checkUserPermission(userId, teamId);\n  // if (!hasPermission) {\n  //   return; // Block the request\n  // }\n  \n  await next();\n});\n` : ''}\n\n// Error handling\napp.error((error) => {\n  console.error('Slack app error:', error);\n});\n\nprocess.on('unhandledRejection', (error) => {\n  console.error('Unhandled promise rejection:', error);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error);\n  process.exit(1);\n});\n\n// Start the app\n(async () => {\n  try {\n    await app.start();\n    console.log('⚡️ Slack app started successfully!');\n  } catch (error) {\n    console.error('Error starting Slack app:', error);\n    process.exit(1);\n  }\n})();`;\n\n  files.push(\n    { path: 'package.json', content: JSON.stringify(packageJson, null, 2), type: 'config', description: 'Package configuration with dependencies' },\n    { path: 'index.js', content: indexJs, type: 'source', description: 'Main Slack app application' },\n    { path: 'README.md', content: generateReadme(config), type: 'documentation', description: 'Project documentation' },\n    { path: '.env.example', content: generateEnvExample(config), type: 'config', description: 'Environment variables template' },\n    { path: '.gitignore', content: generateGitignore(), type: 'config', description: 'Git ignore rules' },\n  );\n\n  // Add Slack app manifest\n  const appManifest = `{\n  \"display_information\": {\n    \"name\": \"${config.projectName}\",\n    \"description\": \"${config.description}\",\n    \"background_color\": \"#2c2d30\"\n  },\n  \"features\": {\n    \"app_home\": {\n      \"home_tab_enabled\": true,\n      \"messages_tab_enabled\": false,\n      \"messages_tab_read_only_enabled\": false\n    },\n    \"bot_user\": {\n      \"display_name\": \"${config.projectName}\",\n      \"always_online\": true\n    },\n    \"slash_commands\": [\n      {\n        \"command\": \"/hello\",\n        \"description\": \"Get a greeting from the bot\",\n        \"should_escape\": false\n      },\n      {\n        \"command\": \"/help\",\n        \"description\": \"Get help and information\",\n        \"should_escape\": false\n      }\n      ${config.features.includes('context-awareness') ? `,\n      {\n        \"command\": \"/context\",\n        \"description\": \"Show conversation context\",\n        \"should_escape\": false\n      }` : ''}\n      ${config.features.includes('ai-integration') ? `,\n      {\n        \"command\": \"/ask\",\n        \"description\": \"Ask AI a question\",\n        \"usage_hint\": \"[your question]\",\n        \"should_escape\": false\n      }` : ''}\n    ]\n  },\n  \"oauth_config\": {\n    \"scopes\": {\n      \"bot\": [\n        \"app_mentions:read\",\n        \"channels:history\",\n        \"chat:write\",\n        \"commands\",\n        \"groups:history\",\n        \"im:history\",\n        \"mpim:history\"\n        ${config.features.includes('file-attachments') ? ',\"files:read\"' : ''}\n        ${config.priorities.includes('user-authentication') ? ',\"users:read\"' : ''}\n      ]\n    }\n  },\n  \"settings\": {\n    \"event_subscriptions\": {\n      \"bot_events\": [\n        \"app_mention\",\n        \"message.channels\",\n        \"message.groups\",\n        \"message.im\",\n        \"message.mpim\"\n        ${config.features.includes('file-attachments') ? ',\"file_shared\"' : ''}\n      ]\n    },\n    \"interactivity\": {\n      \"is_enabled\": true\n    },\n    \"org_deploy_enabled\": false,\n    \"socket_mode_enabled\": true,\n    \"token_rotation_enabled\": false\n  }\n}`;\n\n  files.push({\n    path: 'slack-app-manifest.json',\n    content: appManifest,\n    type: 'config',\n    description: 'Slack app manifest for easy setup'\n  });\n\n  // Add Docker support\n  files.push({\n    path: 'Dockerfile',\n    content: generateDockerfile(config),\n    type: 'config',\n    description: 'Docker container configuration'\n  });\n\n  return {\n    platform: config.platform,\n    files,\n    packageJson,\n    readme: generateReadme(config),\n    setupInstructions: [\n      '1. Install Node.js 18+ and npm',\n      '2. Create a Slack app at https://api.slack.com/apps',\n      '3. Use the slack-app-manifest.json file to configure your app',\n      '4. Install the app to your workspace',\n      '5. Copy the Bot User OAuth Token and Signing Secret',\n      '6. Generate an App-Level Token with connections:write scope',\n      '7. Copy .env.example to .env and fill in your tokens',\n      '8. Run \"npm install\" to install dependencies',\n      '9. Run \"npm run dev\" to start the app',\n      '10. Test with /hello command in your Slack workspace'\n    ],\n    estimatedTime: '4-6 hours',\n    complexity: 'advanced',\n  };\n}","import { BuildConfiguration, GeneratedSolution, GeneratedFile } from '@/types';\nimport { generateBasePackageJson, generateReadme, generateEnvExample, generateGitignore, generateDockerfile } from './index';\n\nexport async function generateTwitterBot(config: BuildConfiguration): Promise<GeneratedSolution> {\n  const files: GeneratedFile[] = [];\n  \n  // Package.json\n  const packageJson = {\n    ...generateBasePackageJson(config),\n    dependencies: {\n      'twitter-api-v2': '^1.15.1',\n      dotenv: '^16.3.1',\n      'node-cron': '^3.0.2',\n      ...(config.priorities.includes('message-persistence') && {\n        mongoose: '^7.4.1',\n      }),\n      ...(config.priorities.includes('session-management') && {\n        redis: '^4.6.7',\n      }),\n      ...(config.features.includes('ai-integration') && {\n        openai: '^3.3.0',\n      }),\n    },\n  };\n\n  // Main index.js\n  const indexJs = `const { TwitterApi } = require('twitter-api-v2');\nconst dotenv = require('dotenv');\nconst cron = require('node-cron');\n${config.priorities.includes('message-persistence') ? \"const mongoose = require('mongoose');\" : ''}\n${config.priorities.includes('session-management') ? \"const redis = require('redis');\" : ''}\n${config.features.includes('ai-integration') ? \"const { OpenAI } = require('openai');\" : ''}\n\ndotenv.config();\n\n// Initialize Twitter client\nconst client = new TwitterApi({\n  appKey: process.env.TWITTER_CONSUMER_KEY,\n  appSecret: process.env.TWITTER_CONSUMER_SECRET,\n  accessToken: process.env.TWITTER_ACCESS_TOKEN,\n  accessSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n});\n\n// Get read-write access\nconst rwClient = client.readWrite;\n\n${config.priorities.includes('session-management') ? `\n// Initialize Redis client\nconst redisClient = redis.createClient({\n  url: process.env.REDIS_URL || 'redis://localhost:6379'\n});\n\nredisClient.on('error', (err) => console.log('Redis Client Error', err));\nredisClient.connect();\n` : ''}\n\n${config.priorities.includes('message-persistence') ? `\n// Initialize MongoDB\nmongoose.connect(process.env.DATABASE_URL || 'mongodb://localhost:27017/${config.projectName.toLowerCase()}');\n\nconst tweetSchema = new mongoose.Schema({\n  tweetId: String,\n  userId: String,\n  username: String,\n  text: String,\n  timestamp: { type: Date, default: Date.now },\n  isRetweet: Boolean,\n  replyToId: String,\n  sessionId: String,\n  sentiment: String,\n  processed: { type: Boolean, default: false },\n});\n\nconst Tweet = mongoose.model('Tweet', tweetSchema);\n` : ''}\n\n${config.features.includes('ai-integration') ? `\n// Initialize OpenAI\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n` : ''}\n\n// Rate limiting tracker\nconst rateLimitTracker = {\n  tweets: { count: 0, resetTime: Date.now() + 900000 }, // 15 minutes\n  mentions: { count: 0, resetTime: Date.now() + 900000 },\n};\n\nfunction checkRateLimit(type, limit) {\n  const tracker = rateLimitTracker[type];\n  if (Date.now() > tracker.resetTime) {\n    tracker.count = 0;\n    tracker.resetTime = Date.now() + 900000;\n  }\n  \n  if (tracker.count >= limit) {\n    console.log(\\`Rate limit reached for \\${type}. Waiting...\\`);\n    return false;\n  }\n  \n  tracker.count++;\n  return true;\n}\n\n// Bot functionality\nclass TwitterBot {\n  constructor() {\n    this.lastMentionId = null;\n    this.initialize();\n  }\n  \n  async initialize() {\n    console.log('Initializing Twitter Bot...');\n    \n    try {\n      // Verify credentials\n      const user = await rwClient.currentUser();\n      console.log(\\`Logged in as: @\\${user.username} (\\${user.name})\\`);\n      \n      ${config.priorities.includes('error-handling') ? `\n      // Set up rate limiting\n      this.setupRateLimiting();\n      ` : ''}\n      \n      // Start monitoring\n      this.startMonitoring();\n      \n    } catch (error) {\n      console.error('Failed to initialize:', error);\n    }\n  }\n  \n  async startMonitoring() {\n    console.log('Starting mention monitoring...');\n    \n    // Monitor mentions every 60 seconds\n    setInterval(async () => {\n      await this.checkMentions();\n    }, 60000);\n    \n    // Initial check\n    await this.checkMentions();\n  }\n  \n  async checkMentions() {\n    if (!checkRateLimit('mentions', 75)) return;\n    \n    try {\n      const mentions = await rwClient.v2.userMentionTimeline(\n        (await rwClient.currentUser()).id,\n        {\n          max_results: 10,\n          'tweet.fields': ['author_id', 'created_at', 'conversation_id'],\n          'user.fields': ['username'],\n          expansions: ['author_id'],\n          since_id: this.lastMentionId\n        }\n      );\n      \n      if (mentions.data?.length) {\n        for (const tweet of mentions.data) {\n          await this.processMention(tweet, mentions.includes?.users);\n        }\n        \n        this.lastMentionId = mentions.data[0].id;\n      }\n      \n    } catch (error) {\n      console.error('Error checking mentions:', error);\n    }\n  }\n  \n  async processMention(tweet, users) {\n    const author = users?.find(u => u.id === tweet.author_id);\n    const sessionId = \\`twitter-\\${tweet.author_id}\\`;\n    \n    console.log(\\`Processing mention from @\\${author?.username}: \\${tweet.text}\\`);\n    \n    try {\n      ${config.priorities.includes('message-persistence') ? `\n      // Save tweet to database\n      const newTweet = new Tweet({\n        tweetId: tweet.id,\n        userId: tweet.author_id,\n        username: author?.username,\n        text: tweet.text,\n        replyToId: tweet.conversation_id,\n        sessionId: sessionId,\n      });\n      \n      await newTweet.save();\n      ` : ''}\n      \n      ${config.priorities.includes('session-management') ? `\n      // Update or create session\n      const sessionData = await redisClient.get(\\`session:\\${sessionId}\\`);\n      const session = sessionData ? JSON.parse(sessionData) : {\n        userId: tweet.author_id,\n        username: author?.username,\n        startedAt: Date.now(),\n      };\n      \n      session.lastActivity = Date.now();\n      session.mentionCount = (session.mentionCount || 0) + 1;\n      await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify(session));\n      ` : ''}\n      \n      // Generate response\n      let response = await this.generateResponse(tweet, author);\n      \n      ${config.features.includes('ai-integration') ? `\n      // Use AI to generate smart response\n      if (response.includes('[AI_RESPONSE]')) {\n        response = await this.getAIResponse(tweet.text, author?.username);\n      }\n      ` : ''}\n      \n      // Reply to the mention\n      if (response && checkRateLimit('tweets', 300)) {\n        await rwClient.v2.reply(response, tweet.id);\n        console.log(\\`Replied to @\\${author?.username}\\`);\n      }\n      \n    } catch (error) {\n      console.error('Error processing mention:', error);\n    }\n  }\n  \n  async generateResponse(tweet, author) {\n    const text = tweet.text.toLowerCase();\n    \n    // Simple response logic (customize as needed)\n    if (text.includes('hello') || text.includes('hi')) {\n      return \\`Hello @\\${author?.username}! Thanks for reaching out to ${config.projectName}.\\`;\n    }\n    \n    if (text.includes('help')) {\n      return \\`Hi @\\${author?.username}! I'm ${config.projectName}, a chat session management bot. How can I assist you?\\`;\n    }\n    \n    if (text.includes('status')) {\n      const uptime = Math.floor(process.uptime() / 3600);\n      return \\`Hi @\\${author?.username}! Bot status: Running for \\${uptime} hours. All systems operational!\\`;\n    }\n    \n    ${config.features.includes('custom-commands') ? `\n    // Custom commands\n    if (text.includes('!stats')) {\n      return await this.getStats(author?.username);\n    }\n    ` : ''}\n    \n    ${config.features.includes('ai-integration') ? `\n    // Default to AI response\n    return '[AI_RESPONSE]';\n    ` : `\n    // Default response\n    return \\`Thanks for your message, @\\${author?.username}! I'm ${config.projectName}.\\`;\n    `}\n  }\n  \n  ${config.features.includes('ai-integration') ? `\n  async getAIResponse(text, username) {\n    try {\n      const completion = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          { \n            role: \"system\", \n            content: \"You are ${config.projectName}, a helpful Twitter bot. Keep responses under 280 characters and friendly. Always include the username in your response.\" \n          },\n          { role: \"user\", content: \\`@\\${username} said: \\${text}\\` }\n        ],\n        max_tokens: 60\n      });\n      \n      return completion.choices[0].message.content;\n      \n    } catch (error) {\n      console.error('AI Error:', error);\n      return \\`Thanks for your message, @\\${username}! I'm having trouble processing that right now.\\`;\n    }\n  }\n  ` : ''}\n  \n  ${config.features.includes('custom-commands') ? `\n  async getStats(username) {\n    try {\n      ${config.priorities.includes('message-persistence') ? `\n      const totalTweets = await Tweet.countDocuments();\n      const userTweets = await Tweet.countDocuments({ username: username });\n      return \\`Hi @\\${username}! Stats: \\${totalTweets} total interactions, \\${userTweets} from you.\\`;\n      ` : `\n      return \\`Hi @\\${username}! Stats feature requires message persistence to be enabled.\\`;\n      `}\n    } catch (error) {\n      return \\`Hi @\\${username}! Error retrieving stats.\\`;\n    }\n  }\n  ` : ''}\n  \n  ${config.priorities.includes('error-handling') ? `\n  async logAnalytics(event, data) {\n    try {\n      const analyticsData = {\n        event,\n        data,\n        timestamp: new Date(),\n        botId: '${config.projectName.toLowerCase()}',\n      };\n      \n      // Log to console (in production, send to analytics service)\n      console.log('Analytics:', JSON.stringify(analyticsData));\n      \n      // Store in Redis for temporary analytics\n      await redisClient.lPush('analytics', JSON.stringify(analyticsData));\n      await redisClient.lTrim('analytics', 0, 999); // Keep last 1000 events\n      \n    } catch (error) {\n      console.error('Analytics error:', error);\n    }\n  }\n  ` : ''}\n  \n  ${config.priorities.includes('error-handling') ? `\n  setupRateLimiting() {\n    // Monitor rate limit status\n    setInterval(async () => {\n      try {\n        const limits = await rwClient.v1.rateLimitStatus();\n        console.log('Rate limit status:', {\n          mentions: limits.resources.statuses['/statuses/mentions_timeline'],\n          tweets: limits.resources.statuses['/statuses/update'],\n        });\n      } catch (error) {\n        console.error('Rate limit check error:', error);\n      }\n    }, 300000); // Check every 5 minutes\n  }\n  ` : ''}\n}\n\n${config.features.includes('webhooks') ? `\n// Webhook server for external triggers\nconst express = require('express');\nconst app = express();\napp.use(express.json());\n\napp.post('/webhook/tweet', async (req, res) => {\n  try {\n    const { message, hashtags } = req.body;\n    \n    if (message && checkRateLimit('tweets', 300)) {\n      let tweetText = message;\n      if (hashtags && hashtags.length > 0) {\n        tweetText += ' ' + hashtags.map(tag => \\`#\\${tag}\\`).join(' ');\n      }\n      \n      await rwClient.v2.tweet(tweetText);\n      res.json({ success: true, message: 'Tweet posted' });\n    } else {\n      res.status(429).json({ error: 'Rate limit reached' });\n    }\n  } catch (error) {\n    console.error('Webhook error:', error);\n    res.status(500).json({ error: 'Failed to post tweet' });\n  }\n});\n\nconst PORT = process.env.WEBHOOK_PORT || 3001;\napp.listen(PORT, () => {\n  console.log(\\`Webhook server running on port \\${PORT}\\`);\n});\n` : ''}\n\n// Scheduled tasks\n${config.features.includes('custom-commands') ? `\n// Daily status tweet (customize timing)\ncron.schedule('0 9 * * *', async () => {\n  if (checkRateLimit('tweets', 300)) {\n    const uptime = Math.floor(process.uptime() / 86400);\n    await rwClient.v2.tweet(\\`Good morning! ${config.projectName} has been running for \\${uptime} days. Have a great day! #bot #automation\\`);\n  }\n});\n` : ''}\n\n// Error handling\nprocess.on('unhandledRejection', (error) => {\n  console.error('Unhandled promise rejection:', error);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error);\n  process.exit(1);\n});\n\n// Start the bot\nconst bot = new TwitterBot();\n\nconsole.log('Twitter bot started! Monitoring mentions...');`;\n\n  files.push(\n    { path: 'package.json', content: JSON.stringify(packageJson, null, 2), type: 'config', description: 'Package configuration with dependencies' },\n    { path: 'index.js', content: indexJs, type: 'source', description: 'Main Twitter bot application' },\n    { path: 'README.md', content: generateReadme(config), type: 'documentation', description: 'Project documentation' },\n    { path: '.env.example', content: generateEnvExample(config), type: 'config', description: 'Environment variables template' },\n    { path: '.gitignore', content: generateGitignore(), type: 'config', description: 'Git ignore rules' },\n  );\n\n  // Add analytics helper\n  if (config.priorities.includes('error-handling')) {\n    const analyticsJs = `// Twitter bot analytics utilities\nclass TwitterAnalytics {\n  constructor(redisClient) {\n    this.redis = redisClient;\n  }\n  \n  async trackMention(userId, tweetId) {\n    const key = \\`analytics:mentions:\\${new Date().toISOString().split('T')[0]}\\`;\n    await this.redis.incr(key);\n    await this.redis.expire(key, 2592000); // 30 days\n  }\n  \n  async trackResponse(userId, tweetId) {\n    const key = \\`analytics:responses:\\${new Date().toISOString().split('T')[0]}\\`;\n    await this.redis.incr(key);\n    await this.redis.expire(key, 2592000);\n  }\n  \n  async getDailyStats(date = new Date()) {\n    const dateStr = date.toISOString().split('T')[0];\n    const mentions = await this.redis.get(\\`analytics:mentions:\\${dateStr}\\`) || 0;\n    const responses = await this.redis.get(\\`analytics:responses:\\${dateStr}\\`) || 0;\n    \n    return {\n      date: dateStr,\n      mentions: parseInt(mentions),\n      responses: parseInt(responses),\n      responseRate: mentions > 0 ? (responses / mentions * 100).toFixed(2) : 0\n    };\n  }\n  \n  async getWeeklyStats() {\n    const stats = [];\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      stats.push(await this.getDailyStats(date));\n    }\n    return stats.reverse();\n  }\n}\n\nmodule.exports = TwitterAnalytics;`;\n\n    files.push({\n      path: 'src/analytics.js',\n      content: analyticsJs,\n      type: 'source',\n      description: 'Analytics tracking utilities'\n    });\n  }\n\n  // Add Docker support\n  files.push({\n    path: 'Dockerfile',\n    content: generateDockerfile(config),\n    type: 'config',\n    description: 'Docker container configuration'\n  });\n\n  return {\n    platform: config.platform,\n    files,\n    packageJson,\n    readme: generateReadme(config),\n    setupInstructions: [\n      '1. Install Node.js 18+ and npm',\n      '2. Create a Twitter Developer account at https://developer.twitter.com',\n      '3. Create a new app and generate API keys',\n      '4. Enable read and write permissions for your app',\n      '5. Copy .env.example to .env and fill in your Twitter API credentials',\n      '6. Run \"npm install\" to install dependencies',\n      '7. Run \"npm run dev\" to start the bot',\n      '8. Mention your bot on Twitter to test functionality',\n      '9. Monitor the console for bot activity and responses'\n    ],\n    estimatedTime: '2-4 hours',\n    complexity: 'intermediate',\n  };\n}","import { BuildConfiguration, GeneratedSolution, GeneratedFile } from '@/types';\nimport { generateBasePackageJson, generateReadme, generateEnvExample, generateGitignore, generateDockerfile } from './index';\n\nexport async function generateWebChat(config: BuildConfiguration): Promise<GeneratedSolution> {\n  const files: GeneratedFile[] = [];\n  \n  // Package.json\n  const packageJson = {\n    ...generateBasePackageJson(config),\n    dependencies: {\n      express: '^4.18.2',\n      'socket.io': '^4.7.2',\n      cors: '^2.8.5',\n      helmet: '^7.0.0',\n      dotenv: '^16.3.1',\n      uuid: '^9.0.0',\n      ...(config.priorities.includes('message-persistence') && {\n        mongoose: '^7.4.1',\n      }),\n      ...(config.priorities.includes('session-management') && {\n        redis: '^4.6.7',\n      }),\n      ...(config.priorities.includes('user-authentication') && {\n        jsonwebtoken: '^9.0.1',\n        bcryptjs: '^2.4.3',\n      }),\n      ...(config.features.includes('ai-integration') && {\n        openai: '^3.3.0',\n      }),\n      ...(config.features.includes('file-attachments') && {\n        multer: '^1.4.5-lts.1',\n      }),\n    },\n  };\n\n  // Main server.js\n  const serverJs = `const express = require('express');\nconst http = require('http');\nconst socketIo = require('socket.io');\nconst cors = require('cors');\nconst helmet = require('helmet');\nconst path = require('path');\nconst { v4: uuidv4 } = require('uuid');\nconst dotenv = require('dotenv');\n${config.priorities.includes('message-persistence') ? \"const mongoose = require('mongoose');\" : ''}\n${config.priorities.includes('session-management') ? \"const redis = require('redis');\" : ''}\n${config.priorities.includes('user-authentication') ? \"const jwt = require('jsonwebtoken');\" : ''}\n${config.priorities.includes('user-authentication') ? \"const bcrypt = require('bcryptjs');\" : ''}\n${config.features.includes('ai-integration') ? \"const { OpenAI } = require('openai');\" : ''}\n${config.features.includes('file-attachments') ? \"const multer = require('multer');\" : ''}\n\ndotenv.config();\n\n// Initialize Express app\nconst app = express();\nconst server = http.createServer(app);\n\n// Initialize Socket.IO\nconst io = socketIo(server, {\n  cors: {\n    origin: process.env.CLIENT_URL || \"*\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true\n  }\n});\n\n// Middleware\napp.use(helmet());\napp.use(cors({\n  origin: process.env.CLIENT_URL || \"*\",\n  credentials: true\n}));\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Serve static files\napp.use(express.static(path.join(__dirname, 'public')));\n\n${config.priorities.includes('session-management') ? `\n// Initialize Redis client\nconst redisClient = redis.createClient({\n  url: process.env.REDIS_URL || 'redis://localhost:6379'\n});\n\nredisClient.on('error', (err) => console.log('Redis Client Error', err));\nredisClient.connect();\n` : ''}\n\n${config.priorities.includes('message-persistence') ? `\n// Initialize MongoDB\nmongoose.connect(process.env.DATABASE_URL || 'mongodb://localhost:27017/${config.projectName.toLowerCase()}');\n\nconst messageSchema = new mongoose.Schema({\n  messageId: { type: String, unique: true },\n  sessionId: String,\n  userId: String,\n  username: String,\n  content: String,\n  type: { type: String, enum: ['text', 'image', 'file'], default: 'text' },\n  timestamp: { type: Date, default: Date.now },\n  roomId: String,\n  isSystem: { type: Boolean, default: false },\n});\n\nconst Message = mongoose.model('Message', messageSchema);\n\nconst sessionSchema = new mongoose.Schema({\n  sessionId: { type: String, unique: true },\n  userId: String,\n  username: String,\n  roomId: String,\n  startTime: { type: Date, default: Date.now },\n  lastActivity: { type: Date, default: Date.now },\n  isActive: { type: Boolean, default: true },\n  metadata: Object,\n});\n\nconst Session = mongoose.model('Session', sessionSchema);\n` : ''}\n\n${config.priorities.includes('user-authentication') ? `\nconst userSchema = new mongoose.Schema({\n  userId: { type: String, unique: true },\n  username: { type: String, unique: true },\n  email: { type: String, unique: true },\n  passwordHash: String,\n  createdAt: { type: Date, default: Date.now },\n  lastLogin: Date,\n  isActive: { type: Boolean, default: true },\n});\n\nconst User = mongoose.model('User', userSchema);\n` : ''}\n\n${config.features.includes('ai-integration') ? `\n// Initialize OpenAI\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n` : ''}\n\n${config.features.includes('file-attachments') ? `\n// Configure multer for file uploads\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, 'uploads/');\n  },\n  filename: (req, file, cb) => {\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    cb(null, file.fieldname + '-' + uniqueSuffix + path.extname(file.originalname));\n  }\n});\n\nconst upload = multer({ \n  storage: storage,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB limit\n  },\n  fileFilter: (req, file, cb) => {\n    // Add file type validation if needed\n    cb(null, true);\n  }\n});\n` : ''}\n\n// In-memory storage for demo (use Redis/Database in production)\nconst activeSessions = new Map();\nconst activeRooms = new Map();\n\n// Rate limiting\nconst rateLimitMap = new Map();\nconst RATE_LIMIT = 10; // messages per minute\nconst RATE_LIMIT_WINDOW = 60 * 1000; // 1 minute\n\nfunction checkRateLimit(sessionId) {\n  const now = Date.now();\n  const userLimit = rateLimitMap.get(sessionId) || { count: 0, resetTime: now + RATE_LIMIT_WINDOW };\n  \n  if (now > userLimit.resetTime) {\n    userLimit.count = 0;\n    userLimit.resetTime = now + RATE_LIMIT_WINDOW;\n  }\n  \n  if (userLimit.count >= RATE_LIMIT) {\n    return false;\n  }\n  \n  userLimit.count++;\n  rateLimitMap.set(sessionId, userLimit);\n  return true;\n}\n\n// Socket.IO connection handling\nio.on('connection', (socket) => {\n  console.log('New client connected:', socket.id);\n  \n  socket.on('join-chat', async (data) => {\n    try {\n      const { username, roomId = 'general' } = data;\n      const sessionId = uuidv4();\n      \n      // Store session info\n      const sessionData = {\n        sessionId,\n        userId: socket.id,\n        username,\n        roomId,\n        joinTime: new Date(),\n      };\n      \n      activeSessions.set(socket.id, sessionData);\n      socket.join(roomId);\n      \n      ${config.priorities.includes('session-management') ? `\n      // Store in Redis\n      await redisClient.setEx(\\`session:\\${sessionId}\\`, 3600, JSON.stringify(sessionData));\n      ` : ''}\n      \n      ${config.priorities.includes('message-persistence') ? `\n      // Save session to database\n      const session = new Session(sessionData);\n      await session.save();\n      ` : ''}\n      \n      // Notify room\n      socket.to(roomId).emit('user-joined', {\n        username,\n        message: \\`\\${username} joined the chat\\`,\n        timestamp: new Date(),\n      });\n      \n      // Send session info back to client\n      socket.emit('session-created', { sessionId, roomId });\n      \n      console.log(\\`User \\${username} joined room \\${roomId}\\`);\n      \n    } catch (error) {\n      console.error('Error joining chat:', error);\n      socket.emit('error', { message: 'Failed to join chat' });\n    }\n  });\n  \n  socket.on('send-message', async (data) => {\n    try {\n      const session = activeSessions.get(socket.id);\n      if (!session) {\n        socket.emit('error', { message: 'No active session' });\n        return;\n      }\n      \n      const { content, type = 'text' } = data;\n      \n      // Rate limiting\n      if (!checkRateLimit(session.sessionId)) {\n        socket.emit('error', { message: 'Rate limit exceeded. Please slow down.' });\n        return;\n      }\n      \n      const messageData = {\n        messageId: uuidv4(),\n        sessionId: session.sessionId,\n        userId: session.userId,\n        username: session.username,\n        content,\n        type,\n        timestamp: new Date(),\n        roomId: session.roomId,\n      };\n      \n      ${config.priorities.includes('message-persistence') ? `\n      // Save message to database\n      const message = new Message(messageData);\n      await message.save();\n      ` : ''}\n      \n      // Broadcast message to room\n      io.to(session.roomId).emit('new-message', messageData);\n      \n      ${config.features.includes('ai-integration') ? `\n      // AI auto-response (if enabled for the room)\n      if (content.toLowerCase().includes('bot') || content.startsWith('/ai')) {\n        const aiResponse = await generateAIResponse(content, session.username);\n        if (aiResponse) {\n          const botMessage = {\n            messageId: uuidv4(),\n            sessionId: 'bot-session',\n            userId: 'bot',\n            username: 'ChatBot',\n            content: aiResponse,\n            type: 'text',\n            timestamp: new Date(),\n            roomId: session.roomId,\n            isSystem: true,\n          };\n          \n          io.to(session.roomId).emit('new-message', botMessage);\n          \n          ${config.priorities.includes('message-persistence') ? `\n          const botMessageDoc = new Message(botMessage);\n          await botMessageDoc.save();\n          ` : ''}\n        }\n      }\n      ` : ''}\n      \n    } catch (error) {\n      console.error('Error sending message:', error);\n      socket.emit('error', { message: 'Failed to send message' });\n    }\n  });\n  \n  ${config.features.includes('conversation-branching') ? `\n  socket.on('create-thread', async (data) => {\n    try {\n      const session = activeSessions.get(socket.id);\n      if (!session) return;\n      \n      const { parentMessageId, threadName } = data;\n      const threadId = \\`thread-\\${uuidv4()}\\`;\n      \n      socket.join(threadId);\n      \n      const threadData = {\n        threadId,\n        parentMessageId,\n        threadName: threadName || 'New Thread',\n        createdBy: session.username,\n        roomId: session.roomId,\n        createdAt: new Date(),\n      };\n      \n      socket.emit('thread-created', threadData);\n      socket.to(session.roomId).emit('thread-available', threadData);\n      \n    } catch (error) {\n      console.error('Error creating thread:', error);\n    }\n  });\n  ` : ''}\n  \n  socket.on('typing-start', () => {\n    const session = activeSessions.get(socket.id);\n    if (session) {\n      socket.to(session.roomId).emit('user-typing', {\n        username: session.username,\n        isTyping: true,\n      });\n    }\n  });\n  \n  socket.on('typing-stop', () => {\n    const session = activeSessions.get(socket.id);\n    if (session) {\n      socket.to(session.roomId).emit('user-typing', {\n        username: session.username,\n        isTyping: false,\n      });\n    }\n  });\n  \n  socket.on('disconnect', async () => {\n    try {\n      const session = activeSessions.get(socket.id);\n      if (session) {\n        // Notify room\n        socket.to(session.roomId).emit('user-left', {\n          username: session.username,\n          message: \\`\\${session.username} left the chat\\`,\n          timestamp: new Date(),\n        });\n        \n        ${config.priorities.includes('session-management') ? `\n        // Update session status\n        await redisClient.del(\\`session:\\${session.sessionId}\\`);\n        ` : ''}\n        \n        ${config.priorities.includes('message-persistence') ? `\n        // Update session in database\n        await Session.findOneAndUpdate(\n          { sessionId: session.sessionId },\n          { isActive: false, lastActivity: new Date() }\n        );\n        ` : ''}\n        \n        activeSessions.delete(socket.id);\n      }\n      \n      console.log('Client disconnected:', socket.id);\n      \n    } catch (error) {\n      console.error('Error handling disconnect:', error);\n    }\n  });\n});\n\n${config.features.includes('ai-integration') ? `\n// AI Response Generator\nasync function generateAIResponse(message, username) {\n  try {\n    const completion = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        { \n          role: \"system\", \n          content: \"You are a helpful chat assistant. Keep responses concise and friendly. You're integrated into a web chat application called ${config.projectName}.\" \n        },\n        { role: \"user\", content: \\`\\${username} said: \\${message}\\` }\n      ],\n      max_tokens: 150\n    });\n    \n    return completion.choices[0].message.content;\n    \n  } catch (error) {\n    console.error('AI Error:', error);\n    return null;\n  }\n}\n` : ''}\n\n// REST API Routes\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, 'public', 'index.html'));\n});\n\n${config.priorities.includes('message-persistence') ? `\n// Get chat history\napp.get('/api/messages/:roomId', async (req, res) => {\n  try {\n    const { roomId } = req.params;\n    const { limit = 50, offset = 0 } = req.query;\n    \n    const messages = await Message.find({ roomId })\n      .sort({ timestamp: -1 })\n      .limit(parseInt(limit))\n      .skip(parseInt(offset));\n    \n    res.json({ messages: messages.reverse() });\n    \n  } catch (error) {\n    console.error('Error fetching messages:', error);\n    res.status(500).json({ error: 'Failed to fetch messages' });\n  }\n});\n` : ''}\n\n${config.features.includes('file-attachments') ? `\n// File upload endpoint\napp.post('/api/upload', upload.single('file'), async (req, res) => {\n  try {\n    if (!req.file) {\n      return res.status(400).json({ error: 'No file uploaded' });\n    }\n    \n    const fileUrl = \\`/uploads/\\${req.file.filename}\\`;\n    \n    res.json({\n      success: true,\n      fileUrl,\n      fileName: req.file.originalname,\n      fileSize: req.file.size,\n    });\n    \n  } catch (error) {\n    console.error('Upload error:', error);\n    res.status(500).json({ error: 'Upload failed' });\n  }\n});\n\n// Serve uploaded files\napp.use('/uploads', express.static('uploads'));\n` : ''}\n\n${config.priorities.includes('error-handling') ? `\n// Analytics endpoint\napp.get('/api/analytics', async (req, res) => {\n  try {\n    const stats = {\n      activeSessions: activeSessions.size,\n      totalRooms: activeRooms.size,\n      uptime: process.uptime(),\n      memoryUsage: process.memoryUsage(),\n    };\n    \n    ${config.priorities.includes('message-persistence') ? `\n    const totalMessages = await Message.countDocuments();\n    const totalUsers = await Session.distinct('username').then(users => users.length);\n    \n    stats.totalMessages = totalMessages;\n    stats.totalUsers = totalUsers;\n    ` : ''}\n    \n    res.json(stats);\n    \n  } catch (error) {\n    console.error('Analytics error:', error);\n    res.status(500).json({ error: 'Failed to get analytics' });\n  }\n});\n` : ''}\n\n// Health check\napp.get('/health', (req, res) => {\n  res.json({ \n    status: 'healthy', \n    timestamp: new Date(),\n    uptime: process.uptime() \n  });\n});\n\n// Error handling\nprocess.on('unhandledRejection', (error) => {\n  console.error('Unhandled promise rejection:', error);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error);\n  process.exit(1);\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', async () => {\n  console.log('SIGTERM received. Shutting down gracefully...');\n  server.close(() => {\n    console.log('HTTP server closed.');\n    process.exit(0);\n  });\n});\n\n// Start server\nconst PORT = process.env.PORT || 3000;\nserver.listen(PORT, () => {\n  console.log(\\`Web chat server running on port \\${PORT}\\`);\n  console.log(\\`Visit http://localhost:\\${PORT} to test the chat\\`);\n});`;\n\n  files.push(\n    { path: 'package.json', content: JSON.stringify(packageJson, null, 2), type: 'config', description: 'Package configuration with dependencies' },\n    { path: 'server.js', content: serverJs, type: 'source', description: 'Main web chat server application' },\n    { path: 'README.md', content: generateReadme(config), type: 'documentation', description: 'Project documentation' },\n    { path: '.env.example', content: generateEnvExample(config), type: 'config', description: 'Environment variables template' },\n    { path: '.gitignore', content: generateGitignore(), type: 'config', description: 'Git ignore rules' },\n  );\n\n  // Add client-side HTML/CSS/JS\n  const indexHtml = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>${config.projectName} - Web Chat</title>\n    <script src=\"/socket.io/socket.io.js\"></script>\n    <style>\n        * { margin: 0; padding: 0; box-sizing: border-box; }\n        body { font-family: Arial, sans-serif; background: #f5f5f5; }\n        .container { max-width: 800px; margin: 0 auto; height: 100vh; display: flex; flex-direction: column; background: white; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        .header { padding: 20px; background: #007bff; color: white; text-align: center; }\n        .chat-container { flex: 1; display: flex; flex-direction: column; }\n        .messages { flex: 1; padding: 20px; overflow-y: auto; max-height: 400px; }\n        .message { margin-bottom: 15px; padding: 10px; border-radius: 8px; }\n        .message.own { background: #007bff; color: white; margin-left: 50px; }\n        .message.other { background: #e9ecef; margin-right: 50px; }\n        .message.system { background: #ffc107; text-align: center; margin: 10px 0; font-style: italic; }\n        .message-info { font-size: 12px; opacity: 0.7; margin-bottom: 5px; }\n        .input-container { padding: 20px; border-top: 1px solid #dee2e6; display: flex; gap: 10px; }\n        .message-input { flex: 1; padding: 12px; border: 1px solid #dee2e6; border-radius: 25px; outline: none; }\n        .send-button { padding: 12px 24px; background: #007bff; color: white; border: none; border-radius: 25px; cursor: pointer; }\n        .send-button:hover { background: #0056b3; }\n        .typing-indicator { padding: 10px 20px; font-style: italic; color: #666; font-size: 14px; }\n        .join-form { padding: 40px; text-align: center; }\n        .join-input { padding: 12px; margin: 10px; border: 1px solid #dee2e6; border-radius: 5px; width: 200px; }\n        .join-button { padding: 12px 24px; background: #28a745; color: white; border: none; border-radius: 5px; cursor: pointer; margin-left: 10px; }\n        .hidden { display: none; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>${config.projectName}</h1>\n            <p>Real-time Web Chat Application</p>\n        </div>\n        \n        <div id=\"joinForm\" class=\"join-form\">\n            <h2>Join the Chat</h2>\n            <input type=\"text\" id=\"usernameInput\" class=\"join-input\" placeholder=\"Enter your username\" maxlength=\"20\">\n            <input type=\"text\" id=\"roomInput\" class=\"join-input\" placeholder=\"Room (optional)\" maxlength=\"20\">\n            <button id=\"joinButton\" class=\"join-button\">Join Chat</button>\n        </div>\n        \n        <div id=\"chatContainer\" class=\"chat-container hidden\">\n            <div id=\"messages\" class=\"messages\"></div>\n            <div id=\"typingIndicator\" class=\"typing-indicator\"></div>\n            <div class=\"input-container\">\n                <input type=\"text\" id=\"messageInput\" class=\"message-input\" placeholder=\"Type your message...\" maxlength=\"500\">\n                <button id=\"sendButton\" class=\"send-button\">Send</button>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"client.js\"></script>\n</body>\n</html>`;\n\n  const clientJs = `// Client-side Socket.IO chat application\nlet socket;\nlet currentSession = null;\nlet typingTimer;\n\n// DOM elements\nconst joinForm = document.getElementById('joinForm');\nconst chatContainer = document.getElementById('chatContainer');\nconst usernameInput = document.getElementById('usernameInput');\nconst roomInput = document.getElementById('roomInput');\nconst joinButton = document.getElementById('joinButton');\nconst messagesDiv = document.getElementById('messages');\nconst messageInput = document.getElementById('messageInput');\nconst sendButton = document.getElementById('sendButton');\nconst typingIndicator = document.getElementById('typingIndicator');\n\n// Initialize\ndocument.addEventListener('DOMContentLoaded', () => {\n    setupEventListeners();\n});\n\nfunction setupEventListeners() {\n    joinButton.addEventListener('click', joinChat);\n    sendButton.addEventListener('click', sendMessage);\n    messageInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') {\n            sendMessage();\n        } else {\n            handleTyping();\n        }\n    });\n    \n    usernameInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') joinChat();\n    });\n    \n    roomInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') joinChat();\n    });\n}\n\nfunction joinChat() {\n    const username = usernameInput.value.trim();\n    const room = roomInput.value.trim() || 'general';\n    \n    if (!username) {\n        alert('Please enter a username');\n        return;\n    }\n    \n    // Initialize socket connection\n    socket = io();\n    \n    // Setup socket event listeners\n    socket.on('session-created', (data) => {\n        currentSession = data;\n        joinForm.classList.add('hidden');\n        chatContainer.classList.remove('hidden');\n        messageInput.focus();\n        \n        addSystemMessage(\\`Welcome to \\${room} room!\\`);\n    });\n    \n    socket.on('new-message', (message) => {\n        addMessage(message);\n    });\n    \n    socket.on('user-joined', (data) => {\n        addSystemMessage(data.message);\n    });\n    \n    socket.on('user-left', (data) => {\n        addSystemMessage(data.message);\n    });\n    \n    socket.on('user-typing', (data) => {\n        if (data.isTyping) {\n            typingIndicator.textContent = \\`\\${data.username} is typing...\\`;\n        } else {\n            typingIndicator.textContent = '';\n        }\n    });\n    \n    socket.on('error', (error) => {\n        alert(\\`Error: \\${error.message}\\`);\n    });\n    \n    socket.on('disconnect', () => {\n        addSystemMessage('Disconnected from server');\n    });\n    \n    // Join the chat\n    socket.emit('join-chat', { username, roomId: room });\n}\n\nfunction sendMessage() {\n    const content = messageInput.value.trim();\n    if (!content || !socket) return;\n    \n    socket.emit('send-message', { content });\n    messageInput.value = '';\n    socket.emit('typing-stop');\n}\n\nfunction addMessage(message) {\n    const messageElement = document.createElement('div');\n    messageElement.classList.add('message');\n    \n    const isOwnMessage = message.userId === socket.id;\n    messageElement.classList.add(isOwnMessage ? 'own' : 'other');\n    \n    if (message.isSystem) {\n        messageElement.classList.add('system');\n    }\n    \n    const timeString = new Date(message.timestamp).toLocaleTimeString();\n    \n    messageElement.innerHTML = \\`\n        <div class=\"message-info\">\\${message.username} - \\${timeString}</div>\n        <div>\\${escapeHtml(message.content)}</div>\n    \\`;\n    \n    messagesDiv.appendChild(messageElement);\n    messagesDiv.scrollTop = messagesDiv.scrollHeight;\n}\n\nfunction addSystemMessage(text) {\n    const messageElement = document.createElement('div');\n    messageElement.classList.add('message', 'system');\n    messageElement.textContent = text;\n    \n    messagesDiv.appendChild(messageElement);\n    messagesDiv.scrollTop = messagesDiv.scrollHeight;\n}\n\nfunction handleTyping() {\n    if (!socket) return;\n    \n    socket.emit('typing-start');\n    \n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(() => {\n        socket.emit('typing-stop');\n    }, 1000);\n}\n\nfunction escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}`;\n\n  files.push(\n    { path: 'public/index.html', content: indexHtml, type: 'source', description: 'Client-side HTML interface' },\n    { path: 'public/client.js', content: clientJs, type: 'source', description: 'Client-side JavaScript application' }\n  );\n\n  // Add Docker support\n  files.push({\n    path: 'Dockerfile',\n    content: generateDockerfile(config),\n    type: 'config',\n    description: 'Docker container configuration'\n  });\n\n  return {\n    platform: config.platform,\n    files,\n    packageJson,\n    readme: generateReadme(config),\n    setupInstructions: [\n      '1. Install Node.js 18+ and npm',\n      '2. Run \"npm install\" to install dependencies',\n      '3. Copy .env.example to .env and configure as needed',\n      '4. Create uploads directory: mkdir uploads',\n      '5. Run \"npm run dev\" to start development server',\n      '6. Open browser to http://localhost:3000',\n      '7. Enter a username and optional room name',\n      '8. Start chatting with multiple browser tabs to test',\n      '9. Customize the interface and add features as needed'\n    ],\n    estimatedTime: '4-8 hours',\n    complexity: 'expert',\n  };\n}","import { BuildConfiguration, GeneratedSolution, GeneratedFile } from '@/types';\nimport { generateBasePackageJson, generateReadme, generateEnvExample, generateGitignore, generateDockerfile } from './index';\n\nexport async function generateCLI(config: BuildConfiguration): Promise<GeneratedSolution> {\n  const files: GeneratedFile[] = [];\n  \n  // Package.json\n  const packageJson = {\n    ...generateBasePackageJson(config),\n    bin: {\n      [config.projectName.toLowerCase().replace(/[^a-z0-9-]/g, '-')]: './bin/cli.js'\n    },\n    dependencies: {\n      commander: '^11.0.0',\n      inquirer: '^9.2.8',\n      chalk: '^5.3.0',\n      'cli-table3': '^0.6.3',\n      'ora': '^6.3.1',\n      dotenv: '^16.3.1',\n      ...(config.priorities.includes('message-persistence') && {\n        'better-sqlite3': '^8.14.2',\n      }),\n      ...(config.features.includes('ai-integration') && {\n        openai: '^3.3.0',\n      }),\n      ...(config.features.includes('backup-restore') && {\n        'node-tar': '^6.1.15',\n      }),\n    },\n  };\n\n  // Main CLI entry point\n  const cliJs = `#!/usr/bin/env node\n\nconst { Command } = require('commander');\nconst inquirer = require('inquirer');\nconst chalk = require('chalk');\nconst ora = require('ora');\nconst dotenv = require('dotenv');\nconst ChatManager = require('../src/chatManager');\nconst SessionManager = require('../src/sessionManager');\nconst { version } = require('../package.json');\n\ndotenv.config();\n\nconst program = new Command();\n\nprogram\n  .name('${config.projectName.toLowerCase().replace(/[^a-z0-9-]/g, '-')}')\n  .description('${config.description}')\n  .version(version);\n\n// Initialize managers\nconst chatManager = new ChatManager();\nconst sessionManager = new SessionManager();\n\n// Main interactive mode\nprogram\n  .command('start')\n  .description('Start interactive chat session manager')\n  .option('-u, --user <username>', 'Set username')\n  .option('-s, --session <sessionId>', 'Resume existing session')\n  .action(async (options) => {\n    console.log(chalk.blue.bold(\\`Welcome to \\${chalk.cyan('${config.projectName}')}\\`));\n    console.log(chalk.gray('Type \"help\" for commands or \"exit\" to quit\\\\n'));\n    \n    let username = options.user;\n    let sessionId = options.session;\n    \n    if (!username) {\n      const answers = await inquirer.prompt([\n        {\n          type: 'input',\n          name: 'username',\n          message: 'Enter your username:',\n          validate: (input) => input.length > 0 || 'Username is required'\n        }\n      ]);\n      username = answers.username;\n    }\n    \n    if (!sessionId) {\n      sessionId = await sessionManager.createSession(username);\n    }\n    \n    console.log(chalk.green(\\`Session started: \\${sessionId}\\`));\n    console.log(chalk.gray(\\`User: \\${username}\\\\n\\`));\n    \n    await startInteractiveSession(username, sessionId);\n  });\n\n// List sessions\nprogram\n  .command('sessions')\n  .description('List all chat sessions')\n  .option('-a, --active', 'Show only active sessions')\n  .action(async (options) => {\n    const spinner = ora('Loading sessions...').start();\n    \n    try {\n      const sessions = await sessionManager.listSessions(options.active);\n      spinner.stop();\n      \n      if (sessions.length === 0) {\n        console.log(chalk.yellow('No sessions found'));\n        return;\n      }\n      \n      console.log(chalk.blue.bold('Chat Sessions:'));\n      sessions.forEach(session => {\n        const status = session.isActive ? chalk.green('Active') : chalk.red('Inactive');\n        const duration = new Date(Date.now() - new Date(session.startTime)).toISOString().substr(11, 8);\n        console.log(\\`\\${chalk.cyan(session.sessionId)} - \\${session.username} [\\${status}] (\\${duration})\\`);\n      });\n      \n    } catch (error) {\n      spinner.fail('Error loading sessions');\n      console.error(chalk.red(error.message));\n    }\n  });\n\n// Show session details\nprogram\n  .command('session <sessionId>')\n  .description('Show detailed session information')\n  .action(async (sessionId) => {\n    const spinner = ora('Loading session details...').start();\n    \n    try {\n      const session = await sessionManager.getSession(sessionId);\n      const messages = await chatManager.getSessionMessages(sessionId);\n      spinner.stop();\n      \n      if (!session) {\n        console.log(chalk.red('Session not found'));\n        return;\n      }\n      \n      console.log(chalk.blue.bold('Session Details:'));\n      console.log(\\`ID: \\${chalk.cyan(session.sessionId)}\\`);\n      console.log(\\`User: \\${chalk.green(session.username)}\\`);\n      console.log(\\`Status: \\${session.isActive ? chalk.green('Active') : chalk.red('Inactive')}\\`);\n      console.log(\\`Started: \\${new Date(session.startTime).toLocaleString()}\\`);\n      console.log(\\`Messages: \\${messages.length}\\\\n\\`);\n      \n      if (messages.length > 0) {\n        console.log(chalk.blue.bold('Recent Messages:'));\n        messages.slice(-10).forEach(msg => {\n          const time = new Date(msg.timestamp).toLocaleTimeString();\n          console.log(\\`[\\${chalk.gray(time)}] \\${chalk.cyan(msg.username)}: \\${msg.content}\\`);\n        });\n      }\n      \n    } catch (error) {\n      spinner.fail('Error loading session');\n      console.error(chalk.red(error.message));\n    }\n  });\n\n${config.features.includes('backup-restore') ? `\n// Backup command\nprogram\n  .command('backup <outputPath>')\n  .description('Backup chat data')\n  .option('-s, --session <sessionId>', 'Backup specific session')\n  .action(async (outputPath, options) => {\n    const spinner = ora('Creating backup...').start();\n    \n    try {\n      await chatManager.createBackup(outputPath, options.session);\n      spinner.succeed(\\`Backup created: \\${outputPath}\\`);\n    } catch (error) {\n      spinner.fail('Backup failed');\n      console.error(chalk.red(error.message));\n    }\n  });\n\n// Restore command\nprogram\n  .command('restore <backupPath>')\n  .description('Restore chat data from backup')\n  .option('-c, --confirm', 'Skip confirmation prompt')\n  .action(async (backupPath, options) => {\n    if (!options.confirm) {\n      const answers = await inquirer.prompt([\n        {\n          type: 'confirm',\n          name: 'proceed',\n          message: 'This will overwrite existing data. Continue?',\n          default: false\n        }\n      ]);\n      \n      if (!answers.proceed) {\n        console.log('Restore cancelled');\n        return;\n      }\n    }\n    \n    const spinner = ora('Restoring backup...').start();\n    \n    try {\n      await chatManager.restoreBackup(backupPath);\n      spinner.succeed('Backup restored successfully');\n    } catch (error) {\n      spinner.fail('Restore failed');\n      console.error(chalk.red(error.message));\n    }\n  });\n` : ''}\n\n${config.priorities.includes('error-handling') ? `\n// Analytics command\nprogram\n  .command('stats')\n  .description('Show chat statistics')\n  .option('-s, --session <sessionId>', 'Stats for specific session')\n  .action(async (options) => {\n    const spinner = ora('Calculating statistics...').start();\n    \n    try {\n      const stats = await chatManager.getStatistics(options.session);\n      spinner.stop();\n      \n      console.log(chalk.blue.bold('Chat Statistics:'));\n      console.log(\\`Total Sessions: \\${chalk.cyan(stats.totalSessions)}\\`);\n      console.log(\\`Active Sessions: \\${chalk.green(stats.activeSessions)}\\`);\n      console.log(\\`Total Messages: \\${chalk.cyan(stats.totalMessages)}\\`);\n      console.log(\\`Unique Users: \\${chalk.cyan(stats.uniqueUsers)}\\`);\n      \n      if (stats.topUsers?.length > 0) {\n        console.log('\\\\n' + chalk.blue.bold('Most Active Users:'));\n        stats.topUsers.forEach((user, index) => {\n          console.log(\\`\\${index + 1}. \\${chalk.cyan(user.username)} - \\${user.messageCount} messages\\`);\n        });\n      }\n      \n    } catch (error) {\n      spinner.fail('Error calculating statistics');\n      console.error(chalk.red(error.message));\n    }\n  });\n` : ''}\n\n// Help command\nprogram\n  .command('help-commands')\n  .description('Show interactive mode commands')\n  .action(() => {\n    console.log(chalk.blue.bold('Interactive Mode Commands:'));\n    console.log('  help                 - Show this help');\n    console.log('  exit, quit           - Exit the application');\n    console.log('  clear                - Clear screen');\n    console.log('  whoami               - Show current user');\n    console.log('  sessions             - List active sessions');\n    console.log('  switch <sessionId>   - Switch to another session');\n    ${config.features.includes('context-awareness') ? \"console.log('  context              - Show conversation context');\" : ''}\n    ${config.features.includes('custom-commands') ? \"console.log('  /command [args]      - Run custom commands');\" : ''}\n    ${config.features.includes('ai-integration') ? \"console.log('  /ai <question>       - Ask AI assistant');\" : ''}\n    console.log('  history              - Show message history');\n  });\n\nasync function startInteractiveSession(username, sessionId) {\n  const readline = require('readline');\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n    prompt: chalk.green(\\`[\\${username}] > \\`)\n  });\n  \n  let currentSession = sessionId;\n  \n  rl.prompt();\n  \n  rl.on('line', async (input) => {\n    const command = input.trim();\n    \n    if (!command) {\n      rl.prompt();\n      return;\n    }\n    \n    try {\n      await handleCommand(command, username, currentSession, rl);\n    } catch (error) {\n      console.log(chalk.red(\\`Error: \\${error.message}\\`));\n    }\n    \n    rl.prompt();\n  });\n  \n  rl.on('close', () => {\n    console.log(chalk.yellow('\\\\nGoodbye!'));\n    process.exit(0);\n  });\n}\n\nasync function handleCommand(command, username, sessionId, rl) {\n  const args = command.split(' ');\n  const cmd = args[0].toLowerCase();\n  \n  switch (cmd) {\n    case 'help':\n      console.log(chalk.blue.bold('Available Commands:'));\n      console.log('  help, exit, clear, whoami, sessions, switch, history');\n      ${config.features.includes('context-awareness') ? \"console.log('  context - Show conversation context');\" : ''}\n      ${config.features.includes('custom-commands') ? \"console.log('  /command - Run custom commands');\" : ''}\n      ${config.features.includes('ai-integration') ? \"console.log('  /ai - Ask AI assistant');\" : ''}\n      break;\n      \n    case 'exit':\n    case 'quit':\n      rl.close();\n      break;\n      \n    case 'clear':\n      console.clear();\n      break;\n      \n    case 'whoami':\n      console.log(\\`Current user: \\${chalk.cyan(username)}\\`);\n      console.log(\\`Session ID: \\${chalk.gray(sessionId)}\\`);\n      break;\n      \n    case 'sessions':\n      const sessions = await sessionManager.listSessions(true);\n      console.log(chalk.blue.bold('Active Sessions:'));\n      sessions.forEach(s => {\n        const current = s.sessionId === sessionId ? chalk.green(' (current)') : '';\n        console.log(\\`  \\${chalk.cyan(s.sessionId)} - \\${s.username}\\${current}\\`);\n      });\n      break;\n      \n    case 'history':\n      const messages = await chatManager.getSessionMessages(sessionId, 20);\n      console.log(chalk.blue.bold('Message History:'));\n      messages.forEach(msg => {\n        const time = new Date(msg.timestamp).toLocaleTimeString();\n        console.log(\\`[\\${chalk.gray(time)}] \\${chalk.cyan(msg.username)}: \\${msg.content}\\`);\n      });\n      break;\n      \n    ${config.features.includes('context-awareness') ? `\n    case 'context':\n      const context = await chatManager.getConversationContext(sessionId);\n      console.log(chalk.blue.bold('Conversation Context:'));\n      if (context.length > 0) {\n        context.forEach(item => {\n          console.log(\\`  \\${chalk.cyan(item.type)}: \\${item.content}\\`);\n        });\n      } else {\n        console.log(chalk.gray('  No context available'));\n      }\n      break;\n    ` : ''}\n      \n    ${config.features.includes('ai-integration') ? `\n    default:\n      if (command.startsWith('/ai ')) {\n        const question = command.slice(4);\n        const spinner = ora('AI is thinking...').start();\n        \n        try {\n          const response = await chatManager.askAI(question, username);\n          spinner.stop();\n          console.log(chalk.magenta(\\`AI: \\${response}\\`));\n          \n          // Save AI interaction\n          await chatManager.saveMessage(sessionId, 'AI', response, 'ai');\n          \n        } catch (error) {\n          spinner.fail('AI request failed');\n          console.log(chalk.red(\\`AI Error: \\${error.message}\\`));\n        }\n      } else {\n        // Regular message\n        await chatManager.saveMessage(sessionId, username, command);\n        console.log(chalk.green('Message saved'));\n      }\n      break;\n    ` : `\n    default:\n      // Regular message\n      await chatManager.saveMessage(sessionId, username, command);\n      console.log(chalk.green('Message saved'));\n      break;\n    `}\n  }\n}\n\nprogram.parse();`;\n\n  files.push(\n    { path: 'package.json', content: JSON.stringify(packageJson, null, 2), type: 'config', description: 'Package configuration with CLI binary' },\n    { path: 'bin/cli.js', content: cliJs, type: 'script', description: 'Main CLI application entry point' },\n    { path: 'README.md', content: generateReadme(config), type: 'documentation', description: 'Project documentation' },\n    { path: '.env.example', content: generateEnvExample(config), type: 'config', description: 'Environment variables template' },\n    { path: '.gitignore', content: generateGitignore(), type: 'config', description: 'Git ignore rules' },\n  );\n\n  // Chat Manager\n  const chatManagerJs = `const path = require('path');\n${config.priorities.includes('message-persistence') ? \"const Database = require('./database');\" : ''}\n${config.features.includes('ai-integration') ? \"const { OpenAI } = require('openai');\" : ''}\n${config.features.includes('backup-restore') ? \"const tar = require('node-tar');\" : ''}\n${config.features.includes('backup-restore') ? \"const fs = require('fs').promises;\" : ''}\n\nclass ChatManager {\n  constructor() {\n    ${config.priorities.includes('message-persistence') ? \"this.db = new Database();\" : \"this.messages = new Map(); // In-memory storage\"}\n    ${config.features.includes('ai-integration') ? `\n    this.openai = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    });\n    ` : ''}\n  }\n  \n  async saveMessage(sessionId, username, content, type = 'text') {\n    const message = {\n      id: Date.now().toString(),\n      sessionId,\n      username,\n      content,\n      type,\n      timestamp: new Date().toISOString(),\n    };\n    \n    ${config.priorities.includes('message-persistence') ? `\n    await this.db.saveMessage(message);\n    ` : `\n    if (!this.messages.has(sessionId)) {\n      this.messages.set(sessionId, []);\n    }\n    this.messages.get(sessionId).push(message);\n    `}\n    \n    return message;\n  }\n  \n  async getSessionMessages(sessionId, limit = 100) {\n    ${config.priorities.includes('message-persistence') ? `\n    return await this.db.getMessages(sessionId, limit);\n    ` : `\n    const messages = this.messages.get(sessionId) || [];\n    return messages.slice(-limit);\n    `}\n  }\n  \n  ${config.features.includes('context-awareness') ? `\n  async getConversationContext(sessionId) {\n    const messages = await this.getSessionMessages(sessionId, 10);\n    const context = [];\n    \n    // Analyze message patterns\n    const userMessages = messages.filter(m => m.type === 'text');\n    if (userMessages.length > 0) {\n      context.push({\n        type: 'recent_activity',\n        content: \\`\\${userMessages.length} messages in conversation\\`\n      });\n    }\n    \n    // Find questions\n    const questions = messages.filter(m => m.content.includes('?'));\n    if (questions.length > 0) {\n      context.push({\n        type: 'questions',\n        content: \\`\\${questions.length} questions asked\\`\n      });\n    }\n    \n    return context;\n  }\n  ` : ''}\n  \n  ${config.features.includes('ai-integration') ? `\n  async askAI(question, username) {\n    try {\n      const completion = await this.openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          { \n            role: \"system\", \n            content: \"You are a helpful assistant integrated into a CLI chat application called ${config.projectName}. Keep responses concise and helpful.\" \n          },\n          { role: \"user\", content: \\`\\${username} asks: \\${question}\\` }\n        ],\n        max_tokens: 200\n      });\n      \n      return completion.choices[0].message.content;\n      \n    } catch (error) {\n      throw new Error(\\`AI request failed: \\${error.message}\\`);\n    }\n  }\n  ` : ''}\n  \n  ${config.priorities.includes('error-handling') ? `\n  async getStatistics(sessionId = null) {\n    ${config.priorities.includes('message-persistence') ? `\n    return await this.db.getStatistics(sessionId);\n    ` : `\n    const allMessages = Array.from(this.messages.values()).flat();\n    const sessions = Array.from(this.messages.keys());\n    \n    const stats = {\n      totalSessions: sessions.length,\n      activeSessions: sessions.length, // All are active in memory\n      totalMessages: allMessages.length,\n      uniqueUsers: [...new Set(allMessages.map(m => m.username))].length,\n    };\n    \n    if (sessionId) {\n      const sessionMessages = this.messages.get(sessionId) || [];\n      stats.sessionMessages = sessionMessages.length;\n    }\n    \n    return stats;\n    `}\n  }\n  ` : ''}\n  \n  ${config.features.includes('backup-restore') ? `\n  async createBackup(outputPath, sessionId = null) {\n    ${config.priorities.includes('message-persistence') ? `\n    const data = await this.db.exportData(sessionId);\n    ` : `\n    const data = sessionId \n      ? { [sessionId]: this.messages.get(sessionId) || [] }\n      : Object.fromEntries(this.messages);\n    `}\n    \n    const backupData = {\n      timestamp: new Date().toISOString(),\n      version: require('../package.json').version,\n      data: data\n    };\n    \n    await fs.writeFile(outputPath, JSON.stringify(backupData, null, 2));\n  }\n  \n  async restoreBackup(backupPath) {\n    const backupContent = await fs.readFile(backupPath, 'utf8');\n    const backup = JSON.parse(backupContent);\n    \n    ${config.priorities.includes('message-persistence') ? `\n    await this.db.importData(backup.data);\n    ` : `\n    this.messages.clear();\n    for (const [sessionId, messages] of Object.entries(backup.data)) {\n      this.messages.set(sessionId, messages);\n    }\n    `}\n  }\n  ` : ''}\n}\n\nmodule.exports = ChatManager;`;\n\n  // Session Manager\n  const sessionManagerJs = `${config.priorities.includes('message-persistence') ? \"const Database = require('./database');\" : ''}\n\nclass SessionManager {\n  constructor() {\n    ${config.priorities.includes('message-persistence') ? \"this.db = new Database();\" : \"this.sessions = new Map();\"}\n  }\n  \n  async createSession(username) {\n    const sessionId = \\`session-\\${Date.now()}-\\${Math.random().toString(36).substr(2, 9)}\\`;\n    const session = {\n      sessionId,\n      username,\n      startTime: new Date().toISOString(),\n      isActive: true,\n      messageCount: 0,\n    };\n    \n    ${config.priorities.includes('message-persistence') ? `\n    await this.db.saveSession(session);\n    ` : `\n    this.sessions.set(sessionId, session);\n    `}\n    \n    return sessionId;\n  }\n  \n  async getSession(sessionId) {\n    ${config.priorities.includes('message-persistence') ? `\n    return await this.db.getSession(sessionId);\n    ` : `\n    return this.sessions.get(sessionId);\n    `}\n  }\n  \n  async listSessions(activeOnly = false) {\n    ${config.priorities.includes('message-persistence') ? `\n    return await this.db.listSessions(activeOnly);\n    ` : `\n    const sessions = Array.from(this.sessions.values());\n    return activeOnly ? sessions.filter(s => s.isActive) : sessions;\n    `}\n  }\n  \n  async updateSession(sessionId, updates) {\n    ${config.priorities.includes('message-persistence') ? `\n    await this.db.updateSession(sessionId, updates);\n    ` : `\n    const session = this.sessions.get(sessionId);\n    if (session) {\n      Object.assign(session, updates);\n    }\n    `}\n  }\n  \n  async endSession(sessionId) {\n    await this.updateSession(sessionId, { \n      isActive: false, \n      endTime: new Date().toISOString() \n    });\n  }\n}\n\nmodule.exports = SessionManager;`;\n\n  files.push(\n    { path: 'src/chatManager.js', content: chatManagerJs, type: 'source', description: 'Chat management functionality' },\n    { path: 'src/sessionManager.js', content: sessionManagerJs, type: 'source', description: 'Session management functionality' }\n  );\n\n  // Database module (if persistence enabled)\n  if (config.priorities.includes('message-persistence')) {\n    const databaseJs = `const Database = require('better-sqlite3');\nconst path = require('path');\n\nclass DatabaseManager {\n  constructor() {\n    const dbPath = process.env.DATABASE_PATH || path.join(process.cwd(), 'chat.db');\n    this.db = new Database(dbPath);\n    this.init();\n  }\n  \n  init() {\n    // Create tables\n    this.db.exec(\\`\n      CREATE TABLE IF NOT EXISTS sessions (\n        sessionId TEXT PRIMARY KEY,\n        username TEXT NOT NULL,\n        startTime TEXT NOT NULL,\n        endTime TEXT,\n        isActive INTEGER DEFAULT 1,\n        messageCount INTEGER DEFAULT 0,\n        metadata TEXT\n      );\n      \n      CREATE TABLE IF NOT EXISTS messages (\n        id TEXT PRIMARY KEY,\n        sessionId TEXT NOT NULL,\n        username TEXT NOT NULL,\n        content TEXT NOT NULL,\n        type TEXT DEFAULT 'text',\n        timestamp TEXT NOT NULL,\n        FOREIGN KEY (sessionId) REFERENCES sessions (sessionId)\n      );\n      \n      CREATE INDEX IF NOT EXISTS idx_messages_session ON messages(sessionId);\n      CREATE INDEX IF NOT EXISTS idx_messages_timestamp ON messages(timestamp);\n    \\`);\n  }\n  \n  async saveSession(session) {\n    const stmt = this.db.prepare(\\`\n      INSERT OR REPLACE INTO sessions \n      (sessionId, username, startTime, isActive, messageCount, metadata)\n      VALUES (?, ?, ?, ?, ?, ?)\n    \\`);\n    \n    stmt.run(\n      session.sessionId,\n      session.username,\n      session.startTime,\n      session.isActive ? 1 : 0,\n      session.messageCount || 0,\n      JSON.stringify(session.metadata || {})\n    );\n  }\n  \n  async getSession(sessionId) {\n    const stmt = this.db.prepare('SELECT * FROM sessions WHERE sessionId = ?');\n    const row = stmt.get(sessionId);\n    \n    if (row) {\n      return {\n        ...row,\n        isActive: Boolean(row.isActive),\n        metadata: JSON.parse(row.metadata || '{}')\n      };\n    }\n    \n    return null;\n  }\n  \n  async listSessions(activeOnly = false) {\n    const sql = activeOnly \n      ? 'SELECT * FROM sessions WHERE isActive = 1 ORDER BY startTime DESC'\n      : 'SELECT * FROM sessions ORDER BY startTime DESC';\n      \n    const stmt = this.db.prepare(sql);\n    const rows = stmt.all();\n    \n    return rows.map(row => ({\n      ...row,\n      isActive: Boolean(row.isActive),\n      metadata: JSON.parse(row.metadata || '{}')\n    }));\n  }\n  \n  async updateSession(sessionId, updates) {\n    const session = await this.getSession(sessionId);\n    if (!session) return;\n    \n    const updated = { ...session, ...updates };\n    await this.saveSession(updated);\n  }\n  \n  async saveMessage(message) {\n    const stmt = this.db.prepare(\\`\n      INSERT INTO messages (id, sessionId, username, content, type, timestamp)\n      VALUES (?, ?, ?, ?, ?, ?)\n    \\`);\n    \n    stmt.run(\n      message.id,\n      message.sessionId,\n      message.username,\n      message.content,\n      message.type,\n      message.timestamp\n    );\n    \n    // Update session message count\n    const updateStmt = this.db.prepare(\\`\n      UPDATE sessions \n      SET messageCount = messageCount + 1 \n      WHERE sessionId = ?\n    \\`);\n    updateStmt.run(message.sessionId);\n  }\n  \n  async getMessages(sessionId, limit = 100) {\n    const stmt = this.db.prepare(\\`\n      SELECT * FROM messages \n      WHERE sessionId = ? \n      ORDER BY timestamp DESC \n      LIMIT ?\n    \\`);\n    \n    return stmt.all(sessionId, limit).reverse();\n  }\n  \n  async getStatistics(sessionId = null) {\n    if (sessionId) {\n      const session = await this.getSession(sessionId);\n      const messages = await this.getMessages(sessionId);\n      \n      return {\n        sessionId,\n        messageCount: messages.length,\n        username: session?.username,\n        startTime: session?.startTime,\n        isActive: session?.isActive\n      };\n    }\n    \n    const stats = {\n      totalSessions: this.db.prepare('SELECT COUNT(*) as count FROM sessions').get().count,\n      activeSessions: this.db.prepare('SELECT COUNT(*) as count FROM sessions WHERE isActive = 1').get().count,\n      totalMessages: this.db.prepare('SELECT COUNT(*) as count FROM messages').get().count,\n      uniqueUsers: this.db.prepare('SELECT COUNT(DISTINCT username) as count FROM sessions').get().count,\n    };\n    \n    // Top users by message count\n    const topUsers = this.db.prepare(\\`\n      SELECT username, COUNT(*) as messageCount \n      FROM messages \n      GROUP BY username \n      ORDER BY messageCount DESC \n      LIMIT 5\n    \\`).all();\n    \n    stats.topUsers = topUsers;\n    \n    return stats;\n  }\n  \n  async exportData(sessionId = null) {\n    if (sessionId) {\n      const session = await this.getSession(sessionId);\n      const messages = await this.getMessages(sessionId);\n      return { [sessionId]: { session, messages } };\n    }\n    \n    const sessions = await this.listSessions();\n    const data = {};\n    \n    for (const session of sessions) {\n      const messages = await this.getMessages(session.sessionId);\n      data[session.sessionId] = { session, messages };\n    }\n    \n    return data;\n  }\n  \n  async importData(data) {\n    // Clear existing data\n    this.db.exec('DELETE FROM messages; DELETE FROM sessions;');\n    \n    for (const [sessionId, sessionData] of Object.entries(data)) {\n      await this.saveSession(sessionData.session);\n      \n      if (sessionData.messages) {\n        for (const message of sessionData.messages) {\n          await this.saveMessage(message);\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = DatabaseManager;`;\n\n    files.push({\n      path: 'src/database.js',\n      content: databaseJs,\n      type: 'source',\n      description: 'SQLite database management'\n    });\n  }\n\n  // Add Docker support\n  files.push({\n    path: 'Dockerfile',\n    content: generateDockerfile(config),\n    type: 'config',\n    description: 'Docker container configuration'\n  });\n\n  return {\n    platform: config.platform,\n    files,\n    packageJson,\n    readme: generateReadme(config),\n    setupInstructions: [\n      '1. Install Node.js 18+ and npm',\n      '2. Run \"npm install\" to install dependencies',\n      '3. Copy .env.example to .env and configure as needed',\n      '4. Run \"npm link\" to install CLI globally (optional)',\n      '5. Run the CLI with: npx . start (or your-cli-name start if linked)',\n      '6. Follow the interactive prompts to start chatting',\n      '7. Use \"help\" command to see available options',\n      '8. Use \"sessions\" to manage multiple chat sessions',\n      '9. Type \"exit\" to quit the application'\n    ],\n    estimatedTime: '1-2 hours',\n    complexity: 'basic',\n  };\n}","import { BuildConfiguration, GeneratedSolution, GeneratedFile, Platform } from '@/types';\nimport { generateDiscordBot } from './discord';\nimport { generateTelegramBot } from './telegram';\nimport { generateWhatsAppBot } from './whatsapp';\nimport { generateSlackApp } from './slack';\nimport { generateTwitterBot } from './twitter';\nimport { generateWebChat } from './webchat';\nimport { generateCLI } from './cli';\n\n// Main generator function that routes to platform-specific generators\nexport async function generateSolution(configuration: BuildConfiguration): Promise<GeneratedSolution> {\n  if (!configuration.platform) {\n    throw new Error('Platform is required for solution generation');\n  }\n\n  const generators = {\n    'discord-js': generateDiscordBot,\n    'telegram-bot-api': generateTelegramBot,\n    'whatsapp-web': generateWhatsAppBot,\n    'slack-bolt': generateSlackApp,\n    'twitter-api': generateTwitterBot,\n    'web-chat': generateWebChat,\n    'cli-interface': generateCLI,\n  };\n\n  const generator = generators[configuration.platform];\n  if (!generator) {\n    throw new Error(`No generator found for platform: ${configuration.platform}`);\n  }\n\n  try {\n    const solution = await generator(configuration);\n    return solution;\n  } catch (error) {\n    console.error('Error generating solution:', error);\n    throw new Error(`Failed to generate solution: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n}\n\n// Utility functions for all generators\nexport function generateBasePackageJson(config: BuildConfiguration) {\n  return {\n    name: config.projectName.toLowerCase().replace(/[^a-z0-9-]/g, '-'),\n    version: '1.0.0',\n    description: config.description,\n    main: 'index.js',\n    scripts: {\n      start: 'node index.js',\n      dev: 'nodemon index.js',\n      test: 'jest',\n      lint: 'eslint .',\n      'lint:fix': 'eslint . --fix',\n    },\n    keywords: ['chat', 'bot', 'session-management', config.platform],\n    author: '',\n    license: 'MIT',\n    devDependencies: {\n      nodemon: '^3.0.1',\n      eslint: '^8.45.0',\n      jest: '^29.6.1',\n      '@types/node': '^20.4.5',\n      typescript: '^5.1.6',\n    },\n  };\n}\n\nexport function generateReadme(config: BuildConfiguration): string {\n  const { projectName, description, platform, priorities, features } = config;\n  \n  return `# ${projectName}\n\n${description}\n\n## Platform\n- **${platform}** - Chat session management system\n\n## Features\n${priorities.length > 0 ? `\n### Core Priorities\n${priorities.map(p => `- ${p.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')}\n` : ''}\n\n${features.length > 0 ? `\n### Additional Features\n${features.map(f => `- ${f.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')}\n` : ''}\n\n## Quick Start\n\n1. Install dependencies:\n\\`\\`\\`bash\nnpm install\n\\`\\`\\`\n\n2. Copy environment file and configure:\n\\`\\`\\`bash\ncp .env.example .env\n# Edit .env with your configuration\n\\`\\`\\`\n\n3. Start development server:\n\\`\\`\\`bash\nnpm run dev\n\\`\\`\\`\n\n## Configuration\n\nSee \\`.env.example\\` for required environment variables.\n\n## Project Structure\n\n\\`\\`\\`\n${projectName}/\n├── src/\n│   ├── handlers/          # Message and event handlers\n│   ├── middleware/        # Authentication and validation\n│   ├── services/          # Business logic services\n│   ├── utils/             # Utility functions\n│   └── index.js           # Application entry point\n├── tests/                 # Test files\n├── docs/                  # Documentation\n└── package.json\n\\`\\`\\`\n\n## Development\n\n- \\`npm run dev\\` - Start development server with hot reload\n- \\`npm test\\` - Run test suite\n- \\`npm run lint\\` - Run linter\n- \\`npm run lint:fix\\` - Fix linting issues automatically\n\n## Deployment\n\n[Add deployment instructions specific to your platform]\n\n## Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Commit your changes\n4. Push to the branch\n5. Create a Pull Request\n\n## License\n\nMIT License - see LICENSE file for details.\n`;\n}\n\nexport function generateEnvExample(config: BuildConfiguration): string {\n  const { platform, priorities, features } = config;\n  \n  let envContent = `# ${config.projectName} Environment Configuration\\n\\n`;\n  \n  // Platform-specific environment variables\n  switch (platform) {\n    case 'discord-js':\n      envContent += `# Discord Configuration\\nDISCORD_TOKEN=your_discord_bot_token\\nDISCORD_CLIENT_ID=your_client_id\\n\\n`;\n      break;\n    case 'telegram-bot-api':\n      envContent += `# Telegram Configuration\\nTELEGRAM_TOKEN=your_telegram_bot_token\\n\\n`;\n      break;\n    case 'slack-bolt':\n      envContent += `# Slack Configuration\\nSLACK_BOT_TOKEN=xoxb-your-token\\nSLACK_SIGNING_SECRET=your_signing_secret\\n\\n`;\n      break;\n    case 'twitter-api':\n      envContent += `# Twitter API Configuration\\nTWITTER_CONSUMER_KEY=your_consumer_key\\nTWITTER_CONSUMER_SECRET=your_consumer_secret\\nTWITTER_ACCESS_TOKEN=your_access_token\\nTWITTER_ACCESS_TOKEN_SECRET=your_access_token_secret\\n\\n`;\n      break;\n    default:\n      envContent += `# API Configuration\\nAPI_TOKEN=your_api_token\\n\\n`;\n  }\n  \n  // Database configuration for message persistence\n  if (priorities.includes('message-persistence')) {\n    envContent += `# Database Configuration\\nDATABASE_URL=mongodb://localhost:27017/${config.projectName.toLowerCase()}\\n# or for PostgreSQL:\\n# DATABASE_URL=postgresql://user:password@localhost:5432/${config.projectName.toLowerCase()}\\n\\n`;\n  }\n  \n  // Redis for session management and caching\n  if (priorities.includes('session-management') || priorities.includes('real-time-sync')) {\n    envContent += `# Redis Configuration\\nREDIS_URL=redis://localhost:6379\\n\\n`;\n  }\n  \n  // Rate limiting configuration\n  if (priorities.includes('error-handling')) {\n    envContent += `# Rate Limiting\\nRATE_LIMIT_MAX_REQUESTS=100\\nRATE_LIMIT_WINDOW_MS=900000\\n\\n`;\n  }\n  \n  // Analytics and logging\n  if (priorities.includes('error-handling')) {\n    envContent += `# Logging & Analytics\\nLOG_LEVEL=info\\nANALYTICS_ENDPOINT=https://your-analytics-service.com\\n\\n`;\n  }\n  \n  // AI integration\n  if (features.includes('ai-integration')) {\n    envContent += `# AI Integration\\nOPENAI_API_KEY=your_openai_api_key\\n# or for other AI services:\\n# AI_SERVICE_URL=https://your-ai-service.com\\n# AI_SERVICE_KEY=your_ai_service_key\\n\\n`;\n  }\n  \n  // Webhook configuration\n  if (features.includes('webhooks')) {\n    envContent += `# Webhook Configuration\\nWEBHOOK_SECRET=your_webhook_secret\\nWEBHOOK_URL=https://your-domain.com/webhook\\n\\n`;\n  }\n  \n  // General configuration\n  envContent += `# General Configuration\\nPORT=3000\\nNODE_ENV=development\\n`;\n  \n  return envContent;\n}\n\nexport function generateGitignore(): string {\n  return `# Dependencies\nnode_modules/\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Environment variables\n.env\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\n# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Coverage directory used by tools like istanbul\ncoverage/\n\n# nyc test coverage\n.nyc_output\n\n# Build outputs\ndist/\nbuild/\n\n# IDE\n.vscode/\n.idea/\n*.swp\n*.swo\n\n# OS\n.DS_Store\nThumbs.db\n\n# Temporary files\ntmp/\ntemp/\n\n# Database\n*.db\n*.sqlite\n*.sqlite3\n\n# Session files\nsessions/\n\n# Upload directories\nuploads/\n`;\n}\n\nexport function generateDockerfile(config: BuildConfiguration): string {\n  return `FROM node:18-alpine\n\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm ci --only=production\n\n# Copy source code\nCOPY . .\n\n# Create non-root user\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S ${config.projectName.toLowerCase()} -u 1001\n\n# Change ownership\nRUN chown -R ${config.projectName.toLowerCase()}:nodejs /app\nUSER ${config.projectName.toLowerCase()}\n\n# Expose port\nEXPOSE 3000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\\\n  CMD node healthcheck.js\n\n# Start the application\nCMD [\"npm\", \"start\"]\n`;\n}\n\nexport function generateDockerCompose(config: BuildConfiguration): string {\n  let services = `version: '3.8'\n\nservices:\n  ${config.projectName.toLowerCase()}:\n    build: .\n    ports:\n      - \"3000:3000\"\n    environment:\n      - NODE_ENV=production\n    env_file:\n      - .env\n    depends_on:`;\n\n  const dependencies: string[] = [];\n  \n  if (config.priorities.includes('message-persistence')) {\n    dependencies.push('mongodb');\n    services += `\n      - mongodb`;\n  }\n  \n  if (config.priorities.includes('session-management') || config.priorities.includes('real-time-sync')) {\n    dependencies.push('redis');\n    services += `\n      - redis`;\n  }\n  \n  services += `\n    restart: unless-stopped\n\n`;\n\n  // Add database services\n  if (config.priorities.includes('message-persistence')) {\n    services += `  mongodb:\n    image: mongo:7\n    environment:\n      MONGO_INITDB_DATABASE: ${config.projectName.toLowerCase()}\n    volumes:\n      - mongodb_data:/data/db\n    ports:\n      - \"27017:27017\"\n    restart: unless-stopped\n\n`;\n  }\n  \n  if (config.priorities.includes('session-management') || config.priorities.includes('real-time-sync')) {\n    services += `  redis:\n    image: redis:7-alpine\n    volumes:\n      - redis_data:/data\n    ports:\n      - \"6379:6379\"\n    restart: unless-stopped\n\n`;\n  }\n  \n  // Add volumes\n  services += `volumes:`;\n  if (config.priorities.includes('message-persistence')) {\n    services += `\n  mongodb_data:`;\n  }\n  if (config.priorities.includes('session-management') || config.priorities.includes('real-time-sync')) {\n    services += `\n  redis_data:`;\n  }\n  \n  return services;\n}","import React, { useEffect, useState } from 'react';\nimport { StepProps, GeneratedSolution } from '@/types';\nimport { useWizard } from '@/contexts/WizardContext';\nimport { generateSolution } from '@/generators';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle, CardHeader } from '@/components/shared/Card';\nimport Alert from '@/components/shared/Alert';\nimport { ArrowLeft, Download, Copy, FileText, Package, Play, CheckCircle, AlertCircle } from 'lucide-react';\n\nconst Step6Generate: React.FC<StepProps> = ({ onNext, onPrevious, isLoading }) => {\n  const { state, actions } = useWizard();\n  const [generating, setGenerating] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [copiedFiles, setCopiedFiles] = useState<Set<string>>(new Set());\n\n  useEffect(() => {\n    if (!state.generatedSolution) {\n      handleGenerate();\n    }\n  }, []);\n\n  const handleGenerate = async () => {\n    setGenerating(true);\n    setError(null);\n    actions.setLoading(true);\n\n    try {\n      const solution = await generateSolution({\n        platform: state.platform!,\n        priorities: state.priorities,\n        features: state.features,\n        teamSize: state.teamSize!,\n        complexity: state.complexity!,\n        projectName: state.projectName,\n        description: state.description,\n      });\n\n      actions.setGeneratedSolution(solution);\n      actions.addCompletedStep(6);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to generate solution';\n      setError(errorMessage);\n      actions.setError(errorMessage);\n    } finally {\n      setGenerating(false);\n      actions.setLoading(false);\n    }\n  };\n\n  const handleDownloadZip = async () => {\n    if (!state.generatedSolution) return;\n\n    try {\n      // Create a zip file with all generated files\n      const JSZip = (await import('jszip')).default;\n      const zip = new JSZip();\n\n      // Add all files to zip\n      state.generatedSolution.files.forEach(file => {\n        zip.file(file.path, file.content);\n      });\n\n      // Generate zip and download\n      const content = await zip.generateAsync({ type: 'blob' });\n      const url = window.URL.createObjectURL(content);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${state.projectName.toLowerCase().replace(/[^a-z0-9-]/g, '-')}.zip`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Download failed:', error);\n      alert('Download failed. Please try again.');\n    }\n  };\n\n  const handleCopyFile = async (file: any) => {\n    try {\n      await navigator.clipboard.writeText(file.content);\n      setCopiedFiles(prev => new Set(prev).add(file.path));\n      \n      // Reset copied state after 3 seconds\n      setTimeout(() => {\n        setCopiedFiles(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(file.path);\n          return newSet;\n        });\n      }, 3000);\n    } catch (error) {\n      console.error('Copy failed:', error);\n      alert('Copy failed. Please try copying manually.');\n    }\n  };\n\n  const handleCopyAll = async () => {\n    if (!state.generatedSolution) return;\n\n    try {\n      const allContent = state.generatedSolution.files\n        .map(file => `// File: ${file.path}\\n${file.content}`)\n        .join('\\n\\n// ' + '='.repeat(50) + '\\n\\n');\n      \n      await navigator.clipboard.writeText(allContent);\n      alert('All files copied to clipboard!');\n    } catch (error) {\n      console.error('Copy all failed:', error);\n      alert('Copy failed. Files might be too large for clipboard.');\n    }\n  };\n\n  const getFileIcon = (type: string) => {\n    switch (type) {\n      case 'config': return <Package className=\"w-4 h-4\" />;\n      case 'source': return <FileText className=\"w-4 h-4\" />;\n      case 'documentation': return <FileText className=\"w-4 h-4\" />;\n      case 'script': return <Play className=\"w-4 h-4\" />;\n      default: return <FileText className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getFileTypeColor = (type: string) => {\n    switch (type) {\n      case 'config': return 'text-blue-600';\n      case 'source': return 'text-green-600';\n      case 'documentation': return 'text-purple-600';\n      case 'script': return 'text-orange-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  if (generating || isLoading) {\n    return (\n      <div className=\"max-w-4xl mx-auto space-y-6\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            Generating Your Solution\n          </h2>\n          <p className=\"text-lg text-gray-600\">\n            Please wait while we create your custom chat session management system...\n          </p>\n        </div>\n\n        <div className=\"flex justify-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-primary-600\"></div>\n        </div>\n\n        <div className=\"text-center text-gray-500\">\n          <p>This may take a few moments...</p>\n          <p className=\"text-sm mt-2\">Generating {state.platform} solution with {state.priorities.length} priorities and {state.features.length} features</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"max-w-4xl mx-auto space-y-6\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            Generation Failed\n          </h2>\n        </div>\n\n        <Alert type=\"error\" title=\"Generation Error\">\n          <p>{error}</p>\n          <div className=\"mt-4\">\n            <Button onClick={handleGenerate} variant=\"primary\">\n              Try Again\n            </Button>\n          </div>\n        </Alert>\n\n        <div className=\"flex justify-between pt-6\">\n          <Button onClick={onPrevious} variant=\"outline\" size=\"lg\" icon={<ArrowLeft />}>\n            Back to Review\n          </Button>\n          <div />\n        </div>\n      </div>\n    );\n  }\n\n  const solution = state.generatedSolution;\n  if (!solution) return null;\n\n  return (\n    <div className=\"max-w-6xl mx-auto space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Your Solution is Ready!\n        </h2>\n        <p className=\"text-lg text-gray-600\">\n          We've generated a complete {solution.platform} chat session management system for you.\n        </p>\n      </div>\n\n      {/* Solution Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n        <Card>\n          <CardContent className=\"text-center\">\n            <div className=\"text-3xl font-bold text-primary-600 mb-2\">\n              {solution.files.length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Generated Files</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"text-center\">\n            <div className=\"text-3xl font-bold text-green-600 mb-2\">\n              {solution.estimatedTime}\n            </div>\n            <div className=\"text-sm text-gray-600\">Estimated Setup Time</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"text-center\">\n            <div className=\"text-3xl font-bold text-orange-600 mb-2 capitalize\">\n              {solution.complexity}\n            </div>\n            <div className=\"text-sm text-gray-600\">Complexity Level</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Download Options */}\n      <Card>\n        <CardHeader>\n          <CardTitle level={3}>Download Your Solution</CardTitle>\n          <CardDescription>\n            Get your complete project files and start building immediately.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-wrap gap-4\">\n            <Button\n              onClick={handleDownloadZip}\n              variant=\"primary\"\n              size=\"lg\"\n              icon={<Download />}\n            >\n              Download ZIP File\n            </Button>\n            \n            <Button\n              onClick={handleCopyAll}\n              variant=\"outline\"\n              size=\"lg\"\n              icon={<Copy />}\n            >\n              Copy All Files\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* File List */}\n      <Card>\n        <CardHeader>\n          <CardTitle level={3}>Generated Files ({solution.files.length})</CardTitle>\n          <CardDescription>\n            Preview and copy individual files as needed.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {solution.files.map((file, index) => (\n              <div key={index} className=\"border border-gray-200 rounded-lg overflow-hidden\">\n                <div className=\"bg-gray-50 px-4 py-3 flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={getFileTypeColor(file.type)}>\n                      {getFileIcon(file.type)}\n                    </div>\n                    <div>\n                      <div className=\"font-mono text-sm font-medium\">{file.path}</div>\n                      <div className=\"text-xs text-gray-500\">{file.description}</div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`px-2 py-1 text-xs font-medium rounded ${\n                      file.type === 'config' ? 'bg-blue-100 text-blue-800' :\n                      file.type === 'source' ? 'bg-green-100 text-green-800' :\n                      file.type === 'documentation' ? 'bg-purple-100 text-purple-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {file.type}\n                    </span>\n                    \n                    <Button\n                      onClick={() => handleCopyFile(file)}\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      icon={copiedFiles.has(file.path) ? <CheckCircle /> : <Copy />}\n                    >\n                      {copiedFiles.has(file.path) ? 'Copied!' : 'Copy'}\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"p-4\">\n                  <pre className=\"text-xs bg-gray-900 text-gray-100 p-4 rounded overflow-x-auto max-h-64\">\n                    <code>{file.content}</code>\n                  </pre>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Setup Instructions */}\n      <Card>\n        <CardHeader>\n          <CardTitle level={3}>Setup Instructions</CardTitle>\n          <CardDescription>\n            Follow these steps to get your chat system up and running.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {solution.setupInstructions.map((instruction, index) => (\n              <div key={index} className=\"flex items-start space-x-3\">\n                <div className=\"flex-shrink-0 w-6 h-6 bg-primary-600 text-white text-xs font-bold rounded-full flex items-center justify-center\">\n                  {index + 1}\n                </div>\n                <p className=\"text-sm text-gray-700\">{instruction}</p>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Success Alert */}\n      <Alert type=\"success\" title=\"Solution Generated Successfully!\">\n        <div className=\"space-y-2\">\n          <p>Your {solution.platform} chat session management system is ready to use.</p>\n          <div className=\"text-sm\">\n            <strong>What's included:</strong>\n            <ul className=\"list-disc list-inside mt-1 space-y-1\">\n              <li>Complete source code with your selected features</li>\n              <li>Configuration files and environment setup</li>\n              <li>Documentation and README</li>\n              <li>Package.json with all dependencies</li>\n              <li>Docker configuration for easy deployment</li>\n            </ul>\n          </div>\n        </div>\n      </Alert>\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-6\">\n        <Button\n          onClick={onPrevious}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<ArrowLeft />}\n        >\n          Back to Review\n        </Button>\n        \n        <div className=\"flex space-x-3\">\n          <Button\n            onClick={onNext}\n            variant=\"primary\"\n            size=\"lg\"\n          >\n            Continue to Setup\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step6Generate;","import React, { useState } from 'react';\nimport { StepProps } from '@/types';\nimport { useWizard } from '@/contexts/WizardContext';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle, CardHeader } from '@/components/shared/Card';\nimport Alert from '@/components/shared/Alert';\nimport { ArrowLeft, Terminal, Download, ExternalLink, CheckCircle, AlertCircle, Play, Pause } from 'lucide-react';\n\nconst Step7AutoSetup: React.FC<StepProps> = ({ onNext, onPrevious, canSkip }) => {\n  const { state } = useWizard();\n  const [setupStep, setSetupStep] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [logs, setLogs] = useState<string[]>([]);\n  const [setupComplete, setSetupComplete] = useState(false);\n\n  const solution = state.generatedSolution;\n  if (!solution) return null;\n\n  const setupSteps = [\n    { name: 'Project Directory', command: `mkdir ${state.projectName}`, description: 'Create project directory' },\n    { name: 'Extract Files', command: 'Extracting generated files...', description: 'Extract all generated files' },\n    { name: 'Install Dependencies', command: 'npm install', description: 'Install required packages' },\n    { name: 'Environment Setup', command: 'cp .env.example .env', description: 'Create environment file' },\n    { name: 'Initialize Database', command: 'npm run init-db', description: 'Set up database (if required)' },\n    { name: 'Build Project', command: 'npm run build', description: 'Build the application' },\n    { name: 'Verify Setup', command: 'npm test', description: 'Run initial tests' },\n  ];\n\n  const addLog = (message: string, type: 'info' | 'success' | 'error' = 'info') => {\n    const timestamp = new Date().toLocaleTimeString();\n    const logEntry = `[${timestamp}] ${message}`;\n    setLogs(prev => [...prev, logEntry]);\n  };\n\n  const simulateSetupStep = async (step: number): Promise<boolean> => {\n    const currentStep = setupSteps[step];\n    addLog(`Starting: ${currentStep.name}`, 'info');\n    addLog(`Running: ${currentStep.command}`, 'info');\n    \n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 2000 + Math.random() * 3000));\n    \n    // Simulate success/failure (mostly successful)\n    const success = Math.random() > 0.1; // 90% success rate\n    \n    if (success) {\n      addLog(`✓ Completed: ${currentStep.name}`, 'success');\n      return true;\n    } else {\n      addLog(`✗ Failed: ${currentStep.name}`, 'error');\n      return false;\n    }\n  };\n\n  const handleStartAutoSetup = async () => {\n    if (isRunning) return;\n    \n    setIsRunning(true);\n    setLogs([]);\n    addLog('Starting automated setup...', 'info');\n    \n    try {\n      for (let i = 0; i < setupSteps.length; i++) {\n        setSetupStep(i);\n        const success = await simulateSetupStep(i);\n        \n        if (!success) {\n          addLog('Setup failed. Please check the logs and try manual setup.', 'error');\n          setIsRunning(false);\n          return;\n        }\n      }\n      \n      addLog('🎉 Automated setup completed successfully!', 'success');\n      setSetupComplete(true);\n      \n    } catch (error) {\n      addLog(`Setup error: ${error}`, 'error');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const handleManualSetup = () => {\n    // Create a downloadable setup script\n    const setupScript = solution.setupInstructions\n      .map((instruction, index) => `# Step ${index + 1}: ${instruction}`)\n      .join('\\n');\n\n    const blob = new Blob([`#!/bin/bash\\n\\n# Automated Setup Script for ${state.projectName}\\n\\n${setupScript}\\n`], {\n      type: 'text/plain'\n    });\n    \n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'setup.sh';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Automated Setup\n        </h2>\n        <p className=\"text-lg text-gray-600\">\n          Let us set up your {solution.platform} project automatically, or download setup instructions for manual installation.\n        </p>\n      </div>\n\n      {/* Setup Options */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <Card className=\"relative\">\n          <CardHeader>\n            <CardTitle level={3} className=\"flex items-center space-x-2\">\n              <Terminal className=\"w-5 h-5 text-primary-600\" />\n              <span>Automated Setup</span>\n            </CardTitle>\n            <CardDescription>\n              Run the complete setup process automatically in your browser.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"text-sm text-gray-600\">\n                <p className=\"mb-2\">This will:</p>\n                <ul className=\"space-y-1\">\n                  <li>• Create project directory structure</li>\n                  <li>• Install all dependencies</li>\n                  <li>• Configure environment files</li>\n                  <li>• Run initial setup commands</li>\n                </ul>\n              </div>\n              \n              <Alert type=\"info\">\n                <p className=\"text-sm\">\n                  Note: This is a simulation. In a real implementation, this would execute actual setup commands.\n                </p>\n              </Alert>\n              \n              <Button\n                onClick={handleStartAutoSetup}\n                disabled={isRunning}\n                variant=\"primary\"\n                fullWidth\n                icon={isRunning ? <Pause /> : <Play />}\n                loading={isRunning}\n              >\n                {isRunning ? 'Setting Up...' : 'Start Automated Setup'}\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle level={3} className=\"flex items-center space-x-2\">\n              <Download className=\"w-5 h-5 text-gray-600\" />\n              <span>Manual Setup</span>\n            </CardTitle>\n            <CardDescription>\n              Download setup instructions and run them manually.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"text-sm text-gray-600\">\n                <p className=\"mb-2\">Perfect if you prefer to:</p>\n                <ul className=\"space-y-1\">\n                  <li>• Follow step-by-step instructions</li>\n                  <li>• Customize the setup process</li>\n                  <li>• Run setup on your local machine</li>\n                  <li>• Have full control over each step</li>\n                </ul>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Button\n                  onClick={handleManualSetup}\n                  variant=\"outline\"\n                  fullWidth\n                  icon={<Download />}\n                >\n                  Download Setup Script\n                </Button>\n                \n                <Button\n                  variant=\"ghost\"\n                  fullWidth\n                  icon={<ExternalLink />}\n                  onClick={() => window.open(`https://docs.${solution.platform}.com`, '_blank')}\n                >\n                  View Platform Documentation\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Setup Progress */}\n      {(isRunning || logs.length > 0) && (\n        <Card>\n          <CardHeader>\n            <CardTitle level={3}>Setup Progress</CardTitle>\n            <CardDescription>\n              {isRunning ? 'Setup is running...' : setupComplete ? 'Setup completed!' : 'Setup stopped'}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {/* Progress Steps */}\n            <div className=\"mb-6\">\n              <div className=\"flex items-center justify-between text-sm text-gray-600 mb-2\">\n                <span>Progress</span>\n                <span>{isRunning ? setupStep + 1 : setupComplete ? setupSteps.length : setupStep + 1} of {setupSteps.length}</span>\n              </div>\n              \n              <div className=\"space-y-2\">\n                {setupSteps.map((step, index) => (\n                  <div key={index} className=\"flex items-center space-x-3\">\n                    <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${\n                      index < setupStep ? 'bg-green-500 text-white' :\n                      index === setupStep && isRunning ? 'bg-primary-500 text-white animate-pulse' :\n                      index === setupStep && setupComplete ? 'bg-green-500 text-white' :\n                      'bg-gray-200 text-gray-500'\n                    }`}>\n                      {index < setupStep || setupComplete ? <CheckCircle className=\"w-3 h-3\" /> : index + 1}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className={`text-sm font-medium ${\n                        index <= setupStep ? 'text-gray-900' : 'text-gray-400'\n                      }`}>\n                        {step.name}\n                      </div>\n                      <div className={`text-xs ${\n                        index <= setupStep ? 'text-gray-600' : 'text-gray-400'\n                      }`}>\n                        {step.description}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Console Output */}\n            <div className=\"bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm max-h-64 overflow-y-auto\">\n              {logs.length === 0 && !isRunning && (\n                <div className=\"text-gray-500\">Setup logs will appear here...</div>\n              )}\n              {logs.map((log, index) => (\n                <div key={index} className=\"whitespace-pre-wrap\">\n                  {log}\n                </div>\n              ))}\n              {isRunning && (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                  <span>Running...</span>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Success Message */}\n      {setupComplete && (\n        <Alert type=\"success\" title=\"Setup Complete!\">\n          <div className=\"space-y-2\">\n            <p>Your {solution.platform} project has been set up successfully.</p>\n            <div className=\"text-sm\">\n              <strong>What's ready:</strong>\n              <ul className=\"list-disc list-inside mt-1 space-y-1\">\n                <li>Project directory created</li>\n                <li>All dependencies installed</li>\n                <li>Environment configured</li>\n                <li>Database initialized (if required)</li>\n                <li>Build process completed</li>\n              </ul>\n            </div>\n            <div className=\"mt-4 p-3 bg-green-50 rounded-lg\">\n              <p className=\"text-sm text-green-800\">\n                <strong>Next steps:</strong> Navigate to your project directory and run `npm start` to launch your chat system!\n              </p>\n            </div>\n          </div>\n        </Alert>\n      )}\n\n      {/* Help Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle level={3}>Need Help?</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">Common Issues:</h4>\n              <ul className=\"space-y-1 text-gray-600\">\n                <li>• Check Node.js version (18+ required)</li>\n                <li>• Ensure all environment variables are set</li>\n                <li>• Verify database connection</li>\n                <li>• Check API keys and tokens</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">Resources:</h4>\n              <ul className=\"space-y-1 text-gray-600\">\n                <li>• Platform documentation</li>\n                <li>• Community forums</li>\n                <li>• GitHub examples</li>\n                <li>• Video tutorials</li>\n              </ul>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-6\">\n        <Button\n          onClick={onPrevious}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<ArrowLeft />}\n        >\n          Back to Files\n        </Button>\n        \n        <div className=\"flex space-x-3\">\n          {canSkip && (\n            <Button\n              onClick={onNext}\n              variant=\"ghost\"\n              size=\"lg\"\n            >\n              Skip Setup\n            </Button>\n          )}\n          \n          <Button\n            onClick={onNext}\n            variant=\"primary\"\n            size=\"lg\"\n            disabled={isRunning}\n          >\n            {setupComplete ? 'Continue' : 'Skip to Completion'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step7AutoSetup;","import React from 'react';\nimport { StepProps } from '@/types';\nimport { useWizard } from '@/contexts/WizardContext';\nimport Button from '@/components/shared/Button';\nimport Card, { CardContent, CardDescription, CardTitle, CardHeader } from '@/components/shared/Card';\nimport { CheckCircle, Star, Github, BookOpen, MessageSquare, Repeat, Download, ExternalLink } from 'lucide-react';\n\nconst Step8Complete: React.FC<StepProps> = ({ onPrevious }) => {\n  const { state, actions } = useWizard();\n  \n  const solution = state.generatedSolution;\n  if (!solution) return null;\n\n  const handleStartOver = () => {\n    actions.resetWizard();\n  };\n\n  const handleDownloadSummary = () => {\n    const summary = {\n      projectName: state.projectName,\n      description: state.description,\n      platform: state.platform,\n      priorities: state.priorities,\n      features: state.features,\n      teamSize: state.teamSize,\n      complexity: state.complexity,\n      estimatedTime: solution.estimatedTime,\n      totalFiles: solution.files.length,\n      setupInstructions: solution.setupInstructions,\n      generatedAt: new Date().toISOString(),\n    };\n\n    const blob = new Blob([JSON.stringify(summary, null, 2)], {\n      type: 'application/json'\n    });\n    \n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${state.projectName}-summary.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const achievements = [\n    { icon: '🎯', title: 'Platform Selected', description: `Chose ${solution.platform}` },\n    { icon: '⚡', title: 'Priorities Set', description: `Configured ${state.priorities.length} priorities` },\n    { icon: '✨', title: 'Features Added', description: `Selected ${state.features.length} features` },\n    { icon: '🏗️', title: 'Project Configured', description: `${state.complexity} complexity level` },\n    { icon: '📦', title: 'Solution Generated', description: `${solution.files.length} files created` },\n    { icon: '🚀', title: 'Ready to Deploy', description: 'Complete setup instructions provided' },\n  ];\n\n  const nextSteps = [\n    {\n      title: 'Start Development',\n      description: 'Follow the setup instructions to get your project running locally',\n      icon: <BookOpen className=\"w-5 h-5\" />,\n      action: 'Follow setup guide'\n    },\n    {\n      title: 'Customize Your Solution',\n      description: 'Modify the generated code to match your specific requirements',\n      icon: <MessageSquare className=\"w-5 h-5\" />,\n      action: 'Customize code'\n    },\n    {\n      title: 'Deploy to Production',\n      description: 'Use the included Docker configuration for easy deployment',\n      icon: <ExternalLink className=\"w-5 h-5\" />,\n      action: 'Deploy project'\n    },\n  ];\n\n  const resources = [\n    {\n      title: 'Documentation',\n      description: 'Complete README and setup guides included in your project',\n      url: '#readme',\n    },\n    {\n      title: 'Community',\n      description: 'Join our Discord community for help and discussions',\n      url: '#community',\n    },\n    {\n      title: 'Examples',\n      description: 'Browse example projects and implementations',\n      url: '#examples',\n    },\n    {\n      title: 'Support',\n      description: 'Get help with implementation and troubleshooting',\n      url: '#support',\n    },\n  ];\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-8\">\n      {/* Success Header */}\n      <div className=\"text-center\">\n        <div className=\"mx-auto w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mb-6\">\n          <CheckCircle className=\"w-8 h-8 text-white\" />\n        </div>\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          Congratulations! 🎉\n        </h2>\n        <p className=\"text-lg text-gray-600 mb-2\">\n          Your <span className=\"font-semibold text-primary-600\">{state.projectName}</span> chat session management system is ready!\n        </p>\n        <p className=\"text-gray-500\">\n          We've generated a complete {solution.platform} solution with all your selected features.\n        </p>\n      </div>\n\n      {/* Achievement Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {achievements.map((achievement, index) => (\n          <Card key={index} className=\"text-center\">\n            <CardContent className=\"pt-6\">\n              <div className=\"text-3xl mb-2\">{achievement.icon}</div>\n              <h3 className=\"font-semibold text-gray-900 mb-1\">{achievement.title}</h3>\n              <p className=\"text-sm text-gray-600\">{achievement.description}</p>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Project Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle level={3}>Project Summary</CardTitle>\n          <CardDescription>\n            Overview of your generated chat session management system\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-700\">Platform & Configuration</h4>\n                <div className=\"mt-1 space-y-1 text-sm text-gray-600\">\n                  <p><strong>Platform:</strong> {solution.platform}</p>\n                  <p><strong>Complexity:</strong> {state.complexity}</p>\n                  <p><strong>Team Size:</strong> {state.teamSize}</p>\n                  <p><strong>Setup Time:</strong> {solution.estimatedTime}</p>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"text-sm font-medium text-gray-700\">Generated Output</h4>\n                <div className=\"mt-1 space-y-1 text-sm text-gray-600\">\n                  <p><strong>Total Files:</strong> {solution.files.length}</p>\n                  <p><strong>Source Files:</strong> {solution.files.filter(f => f.type === 'source').length}</p>\n                  <p><strong>Config Files:</strong> {solution.files.filter(f => f.type === 'config').length}</p>\n                  <p><strong>Documentation:</strong> {solution.files.filter(f => f.type === 'documentation').length}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-700\">Core Priorities</h4>\n                <div className=\"mt-1 space-y-1\">\n                  {state.priorities.map((priority) => (\n                    <span key={priority} className=\"inline-block bg-primary-100 text-primary-800 text-xs px-2 py-1 rounded mr-1 mb-1\">\n                      {priority.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </span>\n                  ))}\n                </div>\n              </div>\n              \n              {state.features.length > 0 && (\n                <div>\n                  <h4 className=\"text-sm font-medium text-gray-700\">Additional Features</h4>\n                  <div className=\"mt-1 space-y-1\">\n                    {state.features.map((feature) => (\n                      <span key={feature} className=\"inline-block bg-green-100 text-green-800 text-xs px-2 py-1 rounded mr-1 mb-1\">\n                        {feature.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Next Steps */}\n      <Card>\n        <CardHeader>\n          <CardTitle level={3}>What's Next?</CardTitle>\n          <CardDescription>\n            Recommended next steps to get your chat system running\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {nextSteps.map((step, index) => (\n              <div key={index} className=\"flex items-start space-x-4 p-4 border border-gray-200 rounded-lg hover:bg-gray-50\">\n                <div className=\"flex-shrink-0 w-10 h-10 bg-primary-100 text-primary-600 rounded-lg flex items-center justify-center\">\n                  {step.icon}\n                </div>\n                <div className=\"flex-1\">\n                  <h4 className=\"font-medium text-gray-900\">{step.title}</h4>\n                  <p className=\"text-sm text-gray-600 mt-1\">{step.description}</p>\n                </div>\n                <div className=\"flex-shrink-0\">\n                  <span className=\"text-sm text-primary-600 font-medium\">{step.action} →</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Resources */}\n      <Card>\n        <CardHeader>\n          <CardTitle level={3}>Resources & Support</CardTitle>\n          <CardDescription>\n            Helpful resources to support your development journey\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {resources.map((resource, index) => (\n              <div key={index} className=\"flex items-center space-x-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                <BookOpen className=\"w-5 h-5 text-gray-400\" />\n                <div>\n                  <h4 className=\"font-medium text-gray-900\">{resource.title}</h4>\n                  <p className=\"text-sm text-gray-600\">{resource.description}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Actions */}\n      <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n        <Button\n          onClick={handleDownloadSummary}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<Download />}\n        >\n          Download Project Summary\n        </Button>\n        \n        <Button\n          onClick={handleStartOver}\n          variant=\"outline\"\n          size=\"lg\"\n          icon={<Repeat />}\n        >\n          Create Another Project\n        </Button>\n      </div>\n\n      {/* Thank You Message */}\n      <Card className=\"bg-gradient-to-r from-primary-50 to-blue-50 border-primary-200\">\n        <CardContent className=\"text-center py-8\">\n          <Star className=\"w-12 h-12 text-yellow-500 mx-auto mb-4\" />\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Thank You for Using Our Builder!</h3>\n          <p className=\"text-gray-600 mb-4\">\n            We hope this tool helps you build amazing chat experiences. \n            If you found it useful, consider giving us a star on GitHub!\n          </p>\n          <div className=\"flex justify-center space-x-4\">\n            <Button variant=\"outline\" size=\"sm\" icon={<Github />}>\n              Star on GitHub\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" icon={<MessageSquare />}>\n              Share Feedback\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Final Note */}\n      <div className=\"text-center text-sm text-gray-500\">\n        <p>Built with ❤️ for developers who love creating great chat experiences</p>\n        <p className=\"mt-1\">Need help? Join our community or check the documentation included in your project.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Step8Complete;","import React from 'react';\nimport { useWizard } from '@/contexts/WizardContext';\nimport { useAuth } from '@/components/auth/AuthProvider';\nimport { UserProfile } from '@/components/layout/UserProfile';\nimport Stepper from '@/components/shared/Stepper';\nimport { TOTAL_STEPS } from '@/types/constants';\n\n// Import all step components\nimport Step1Platform from '@/components/steps/Step1Platform';\nimport Step2Priorities from '@/components/steps/Step2Priorities';\nimport Step3Features from '@/components/steps/Step3Features';\nimport Step4Configuration from '@/components/steps/Step4Configuration';\nimport Step5Review from '@/components/steps/Step5Review';\nimport Step6Generate from '@/components/steps/Step6Generate';\nimport Step7AutoSetup from '@/components/steps/Step7AutoSetup';\nimport Step8Complete from '@/components/steps/Step8Complete';\n\nconst ChatManagerBuilder: React.FC = () => {\n  const { state, actions } = useWizard();\n\n  const handleNext = () => {\n    const validation = actions.validateCurrentStep();\n    if (validation.isValid) {\n      actions.nextStep();\n    }\n  };\n\n  const handlePrevious = () => {\n    actions.previousStep();\n  };\n\n  const handleSkip = () => {\n    // Only certain steps can be skipped\n    if (state.currentStep === 3 || state.currentStep === 7) {\n      actions.nextStep();\n    }\n  };\n\n  const handleStepClick = (step: number) => {\n    if (actions.canGoToStep(step)) {\n      actions.goToStep(step);\n    }\n  };\n\n  const renderCurrentStep = () => {\n    const commonProps = {\n      onNext: handleNext,\n      onPrevious: handlePrevious,\n      onSkip: handleSkip,\n      isLoading: state.isLoading,\n      canSkip: state.currentStep === 3 || state.currentStep === 7,\n    };\n\n    switch (state.currentStep) {\n      case 1:\n        return <Step1Platform {...commonProps} />;\n      case 2:\n        return <Step2Priorities {...commonProps} />;\n      case 3:\n        return <Step3Features {...commonProps} />;\n      case 4:\n        return <Step4Configuration {...commonProps} />;\n      case 5:\n        return <Step5Review {...commonProps} />;\n      case 6:\n        return <Step6Generate {...commonProps} />;\n      case 7:\n        return <Step7AutoSetup {...commonProps} />;\n      case 8:\n        return <Step8Complete {...commonProps} />;\n      default:\n        return <Step1Platform {...commonProps} />;\n    }\n  };\n\n  const { user } = useAuth();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header with User Profile */}\n        <div className=\"flex justify-between items-start mb-8\">\n          <div className=\"text-center flex-1\">\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n              Chat Session Management Builder\n            </h1>\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n              Generate a complete, production-ready chat session management system \n              tailored to your platform and requirements.\n            </p>\n          </div>\n          <div className=\"ml-8\">\n            <UserProfile />\n          </div>\n        </div>\n\n        {/* Welcome message for authenticated user */}\n        {user && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-8\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-blue-700\">\n                  Welcome back, <span className=\"font-medium\">{user.name}</span>! Your session configurations are automatically saved and synced with your GitHub account.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Stepper Navigation */}\n        <div className=\"mb-8\">\n          <Stepper\n            currentStep={state.currentStep}\n            totalSteps={TOTAL_STEPS}\n            completedSteps={state.completedSteps}\n            onStepClick={handleStepClick}\n            disabled={state.isLoading}\n          />\n        </div>\n\n        {/* Error Display */}\n        {state.error && (\n          <div className=\"mb-8\">\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-red-800\">\n                    Error\n                  </h3>\n                  <div className=\"mt-2 text-sm text-red-700\">\n                    {state.error}\n                  </div>\n                  <div className=\"mt-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => actions.setError(null)}\n                      className=\"text-sm font-medium text-red-800 hover:text-red-600\"\n                    >\n                      Dismiss\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Main Content */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8\">\n          {renderCurrentStep()}\n        </div>\n\n        {/* Footer */}\n        <div className=\"mt-8 text-center text-sm text-gray-500\">\n          <p>\n            Built with modern web technologies • Supports 7+ platforms • \n            Production-ready code generation\n          </p>\n          <div className=\"mt-2 space-x-4\">\n            <a href=\"#\" className=\"hover:text-gray-700\">Documentation</a>\n            <a href=\"#\" className=\"hover:text-gray-700\">Examples</a>\n            <a href=\"#\" className=\"hover:text-gray-700\">GitHub</a>\n            <a href=\"#\" className=\"hover:text-gray-700\">Support</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatManagerBuilder;","import React from 'react';\nimport { WizardProvider } from '@/contexts/WizardContext';\nimport { AuthProvider } from '@/components/auth/AuthProvider';\nimport { PrivateRoute } from '@/components/auth/PrivateRoute';\nimport ChatManagerBuilder from '@/components/ChatManagerBuilder';\nimport './App.css';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <PrivateRoute>\n        <WizardProvider>\n          <div className=\"App\">\n            <ChatManagerBuilder />\n          </div>\n        </WizardProvider>\n      </PrivateRoute>\n    </AuthProvider>\n  );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './App.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"file":"assets/index-hNPOhyTP.js"}